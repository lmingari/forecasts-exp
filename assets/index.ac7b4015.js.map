{"version":3,"mappings":"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","names":["relList","link","processPreload","mutations","mutation","node","getFetchOpts","script","fetchOpts","uncurryThis","target","thisArg","args","ReflectApply","uncurryThisGetter","key","ReflectGetOwnPropertyDescriptor","ReflectConstruct","ReflectDefineProperty","ReflectGet","ReflectGetPrototypeOf","ReflectHas","ReflectOwnKeys","ReflectSet","ReflectSetPrototypeOf","SymbolIterator","SymbolSpecies","SymbolToStringTag","SymbolFor","NativeObject","ObjectCreate","ObjectDefineProperty","ObjectFreeze","ObjectIs","NativeArray","ArrayPrototype","NativeArrayPrototypeSymbolIterator","ArrayPrototypeSymbolIterator","NativeArrayBuffer","ArrayBufferPrototype","NativeSharedArrayBuffer","TypedArray","TypedArrayPrototype","NativeUint8Array","NativeUint16Array","NativeUint32Array","NativeFloat32Array","ArrayIteratorPrototype","ArrayIteratorPrototypeNext","GeneratorPrototypeNext","IteratorPrototype","DataViewPrototype","DataViewPrototypeGetUint16","NativeWeakMap","WeakMapPrototype","WeakMapPrototypeGet","WeakMapPrototypeSet","arrayIterators","SafeIteratorPrototype","arrayIterator","safeIfNeeded","array","safe","generators","DummyArrayIteratorPrototype","generator","buffer","floatView","uint32View","baseTable","shiftTable","i","mantissaTable","m","e","exponentTable","offsetTable","convertToNumber","float16bits","getFloat16","dataView","byteOffset","opts","getAttribute","tag","attributeName","options","debug","xml","opening","quotechars","char","pattern","match","getAttributeModule","getAttribute_1","indexOfMatch","startIndex","indexOfMatchModule","indexOfMatch_1","indexOfMatchEnd","indexOfMatchEndModule","indexOfMatchEnd_1","countSubstring","string","substring","countSubstringModule","countSubstring_1","require$$0","require$$1","require$$2","findTagByName","tagName","nested","start","afterStart","relativeEnd","selfClosing","openings","closings","clip","end","outer","inner","findTagByNameModule","findTagByName_1","findTagsByName","tags","findTagsByNameModule","findTagsByName_1","fieldTagNames","fieldTags","arrayFields","fieldTypeNames","fieldTypes","photometricInterpretations","ExtraSamplesValues","LercParameters","LercAddCompression","geoKeyNames","fromWhiteIsZero","raster","max","rgbRaster","width","height","value","j","fromBlackIsZero","fromPalette","colorMap","greenOffset","blueOffset","mapIndex","fromCMYK","cmykRaster","c","y","k","fromYCbCr","yCbCrRaster","cb","cr","Xn","Yn","Zn","fromCIELab","cieLabRaster","L","a_","b_","x","z","r","b","registry","addDecoder","cases","importFn","getDecoder","fileDirectory","Decoder","__vitePreload","copyNewSize","samplesPerPixel","resampleNearest","valueArrays","inWidth","inHeight","outWidth","outHeight","relX","relY","newArray","cy","cx","lerp","v0","v1","resampleBilinear","rawY","yl","yh","rawX","tx","xl","xh","ll","hl","lh","hh","resample","method","resampleNearestInterleaved","valueArray","samples","resampleBilinearInterleaved","resampleInterleaved","sum","s","arrayForType","format","bitsPerSample","size","needsNormalization","normalizeArray","inBuffer","planarConfiguration","tileWidth","tileHeight","view","outSize","samplesToTransfer","outArray","bitMask","pixelBitSkip","bitsPerLine","lineBitOffset","pixelBitOffset","bitOffset","outIndex","innerBitOffset","raw","GeoTIFFImage","geoKeys","littleEndian","cache","source","bytes","sampleIndex","offset","sample","poolOrDecoder","signal","numTilesPerRow","numTilesPerCol","index","byteCount","slice","request","tiles","data","sampleFormat","imageWindow","interleave","resampleMethod","imageWidth","imageHeight","minXTile","maxXTile","minYTile","maxYTile","windowWidth","bytesPerPixel","srcSampleOffsets","sampleReaders","promises","yTile","xTile","getPromise","si","promise","tile","blockHeight","firstLine","firstCol","lastLine","lastCol","reader","ymax","xmax","pixelOffset","windowCoordinate","resampled","wnd","imageWindowWidth","imageWindowHeight","numPixels","fillValue","pool","window","pi","enableAlpha","subOptions","red","green","blue","tiePoints","metadata","items","item","modelTransformation","referenceImage","modelPixelScale","refResX","refResY","refResZ","tilegrid","a","d","f","g","h","projected","I","J","xs","pt","ys","origin","resolution","x1","y1","x2","y2","DataView64","arrayBuffer","left","right","combined","isNegative","carrying","byte","DataSlice","sliceOffset","bigTiff","length","defaultPoolSize","Pool","createWorker","resolve","module","create","decoder","worker","candidate","id","onMessage","CRLFCRLF","itemsToObject","obj","parseHeaders","text","line","kv","str","parseContentType","rawContentType","type","rawParams","paramsItems","param","parseContentRange","rawContentRange","total","parseByteRanges","responseArrayBuffer","boundary","out","startBoundary","endBoundary","innerText","endOfHeaders","headers","startOfData","BaseSource","slices","QuickLRU","expiry","maxAge","deleted","newSize","removeCount","oldCacheSize","callbackFunction","thisArgument","wait","milliseconds","zip","A","B","AbortError","params","CustomAggregateError","errors","message","AggregateError","Block","BlockGroup","blockIds","BlockedSource","blockSize","cacheSize","blockId","block","blockRequests","missingBlockIds","allBlockIds","top","fileSize","firstBlockOffset","current","missingRequests","abortedBlockRequests","abortedBlockIds","blocks","failedBlocks","requiredBlocks","groups","groupRequests","groupIndex","group","response","blockOffset","o","t","err","sortedBlockIds","lastBlockId","blockIdLow","blockIdHigh","sliceData","sliceView","delta","topDelta","blockInnerOffset","rangeInnerOffset","usedBlockLength","blockView","BaseResponse","headerName","BaseClient","url","FetchResponse","name","FetchClient","credentials","XHRResponse","xhr","XHRClient","reject","fs","HttpResponse","dataPromise","HttpClient","urlMod","http","resolveData","chunks","chunk","RemoteSource","client","maxRanges","allowFullFile","byteRanges","first","others","maybeWrapInBlockedSource","makeFetchSource","blockOptions","makeXHRSource","makeHttpSource","makeRemoteSource","clientOptions","forceXHR","FileReaderSource","file","blob","event","makeFileReaderSource","getFieldTypeLength","fieldType","parseGeoKeyDirectory","rawGeoKeyDirectory","geoKeyDirectory","location","count","getValues","dataSlice","values","readMethod","fieldTypeLength","ImageFileDirectory","nextIFDByteOffset","GeoTIFFImageIndexError","GeoTIFFBase","firstImage","usedImage","imageCount","imgBBox","bbox","oX","oY","rX","rY","usedBBox","resX","resY","allImages","image","subfileType","newSubfileType","imgResX","imgResY","imageResX","imageResY","GeoTIFF","firstIFDOffset","fallbackSize","entrySize","offsetSize","numDirEntries","byteSize","entryCount","fieldTag","typeCount","fieldValues","valueOffset","actualOffset","fieldDataSlice","previousIfd","ifd","hasNext","detectionString","heuristicAreaSize","metadataSize","fullString","headerData","BOM","magicNumber","MultiGeoTIFF","mainFile","overviewFiles","requests","visited","relativeIndex","imageFile","ii","ifds","fromUrl","fromBlob","fromUrls","mainUrl","overviewUrls","levels","level","warn","error","Relationship","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","_boundingExtentXYs","dest","minX","minY","maxX","maxY","createOrUpdate","clone","closestSquaredDistanceXY","dx","dy","containsCoordinate","coordinate","containsXY","coordinateRelationship","relationship","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","stride","extendFlatCoordinates","equals","extent1","extent2","extend","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","isEmpty","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","rotation","x0","y0","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","returnOrUpdate","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","wrapX","projection","projectionExtent","worldWidth","wrapAndSliceX","multiWorld","clamp","min","squaredSegmentDistance","squaredDistance","solveLinearSystem","mat","n","maxRow","maxEl","absValue","tmp","coef","l","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","toFixed","decimals","factor","floor","ceil","wrap","range","unitByCode","fromCode","code","METERS_PER_UNIT","add","coordinate1","coordinate2","rotate","angle","cosAngle","sinAngle","scale","worldsAway","getWorldsAway","sourceExtentWidth","Projection","global","tileGrid","worldExtent","func","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","EPSG3857Projection","point","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","EPSG4326Projection","axisOrientation","get","clear","object","property","transforms","destination","sourceCode","destinationCode","K0","E","E2","E3","E_P2","SQRT_E","_E","_E2","_E3","_E4","_E5","M1","M2","M3","M4","P2","P3","P4","P5","R","toLonLat","easting","northing","zone","mu","pRad","pSin","pSin2","pCos","pTan","pTan2","pTan4","epSin","epSinSqrt","c2","d2","d3","d4","d5","d6","latitude","longitude","zoneToCentralLongitude","MIN_LATITUDE","MAX_LATITUDE","MIN_LONGITUDE","MAX_LONGITUDE","fromLonLat","latRad","latSin","latCos","latTan","latTan2","latTan4","lonRad","centralLon","centralLonRad","a2","a3","a4","a5","a6","epsgRegExes","zoneFromCode","epsgId","re","number","north","makeTransformFunction","transformer","coord","makeProjection","makeTransforms","DEFAULT_RADIUS","getDistance","c1","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","transformFactories","makeUTMTransforms","projectionFactories","makeUTMProjection","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","getPointResolution","units","pointResolution","getter","metersPerUnit","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","jj","transform","equivalent","equalUnits","transformFunc","getTransformFunc","sourceTransforms","destinationTransforms","intermediateCode","composeTransformFuncs","fromSource","toDestination","t1","t2","dimensions","getTransform","sourceProjection","destinationProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","TileRange","tileCoord","tileRange","ascending","descending","linearFindNearest","arr","direction","extension","arr1","arr2","len1","isSorted","strict","compare","currentVal","res","assert","assertion","errorMessage","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","ends","forEach","ret","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLinearRing","intersectsLinearRingArray","hasArea","ratio","toSize","getKeyZXY","getKey","hash","hashZXY","withinExtentAndZ","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","tmpTileCoord","DECIMALS","TileGrid","zoomFactor","restrictedTileRange","zoom","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","tileCoordZ","tileCoordX","tileCoordY","tileSize","opt_tileCoord","reverseIntersectionPolicy","createOrUpdateTileCoord","opt_direction","viewport","fullTileRanges","tmp_","reset","set","multiply","transform1","transform2","a1","b1","d1","e1","f1","b2","e2","f2","apply","cos","sin","translate","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","det","determinant","TileState","easeIn","easeOut","inAndOut","linear","EventType","Disposable","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","nextArgs","arrayEquals","toPromise","promiseGetter","BaseEvent","Target","listener","listeners","listenersForType","isString","evt","Event","dispatching","pendingRemovals","propagate","pr","abstract","uidCounter_","getUid","Tile","EventTarget","state","time","ua","SAFARI","SAFARI_BUG_237906","WEBKIT","MAC","DEVICE_PIXEL_RATIO","WORKER_OFFSCREEN_CANVAS","IMAGE_DECODE","PASSIVE_EVENT_LISTENERS","passive","createCanvasContext2D","canvasPool","settings","canvas","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","context","replaceNode","newNode","oldNode","parent","removeChildren","replaceChildren","children","oldChildren","oldChild","newChild","asImageLike","asArrayLike","disposedError","sharedContext","toArray","defaultSize","DataTile","imageData","self","listen","once","originalListener","eventsKey","listenOnce","unlistenByKey","brokenDiagonalRendering_","drawTestTriangle","ctx","u1","u2","v2","verifyBrokenDiagonalRendering","isBrokenDiagonalRendering","calculateSourceResolution","sourceProj","targetProj","targetCenter","targetResolution","sourceCenter","sourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","targetExtent","render","pixelRatio","triangulation","sources","gutter","renderEdges","interpolate","drawSingle","clipExtent","pixelRound","sourceDataExtent","src","stitchContext","stitchScale","inverseScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","triangle","u0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","steps","ud","vd","step","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","maxSourceExtent","errorThreshold","destinationResolution","sourceMatrix","transformInvCache","transformInv","applyMatrix","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","leftBound","newTriangle","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","ERROR_THRESHOLD","fromTransform","mat4","orthographic","bottom","near","far","lr","bt","nf","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","translation","VERTEX_SHADER","FRAGMENT_SHADER","Canvas","gl","createProgram","tex","texWidth","texHeight","srcX","srcY","dstX","dstY","dstWidth","dstHeight","matrix","mat4.orthographic","mat4.translate","mat4.scale","texMatrix","mat4.translation","createShader","shader","log","fragmentSource","vertexSource","program","vertexShader","fragmentShader","EDGE_VERTEX_SHADER","EDGE_FRAGMENT_SHADER","TRIANGLE_VERTEX_SHADER","TRIANGLE_FRAGMENT_SHADER","createCanvasContextWebGL","releaseGLCanvas","canvasGLPool","width_","height_","dataType","resultFrameBuffer","resultTexture","stitchTexture","stitchWidth","stitchHeight","maxTexSize","largeSide","scaleFactor","stitchWidthFixed","stitchHeightFixed","fb","webGLCanvas","WebGLCanvas","getUVs","texcoords","triProgram","textureLocation","su0","sv0","su1","sv1","su2","sv2","matrixLocation","positionLocation","positionBuffer","texcoordLocation","texcoordBuffer","edgeProgram","burnval","burnvalLocation","lines","ReprojDataTile","sourceProjExtent","sourceTileGridExtent","maxTargetExtent","limitedTargetExtent","errorThresholdInPixels","sourceRange","getTile","dataSources","imageLike","tileData","arrayData","pixelSize","isFloat","pixelCount","DataType","tileDataR","bytesPerElement","bytesPerRow","bandCount","_a","targetWidth","targetHeight","dataR","willInterpolate","textureType","BANDS_PR_REPROJ","reprojs","reproj","len","dataSource","dataS","texture","renderReprojected","rows","cols","framebuffer","flipY","leftToLoad","sourceListenKey","getForProjection","createForProjection","extentFromProjection","createForExtent","maxZoom","resolutions","resolutionsFromExtent","createXYZ","xyzOptions","getProjection","gridOptions","maxResolution","half","ObjectEventType","Observable","keys","unByKey","ObjectEvent","oldValue","BaseObject","eventType","silent","Source","adaptAttributions","attributions","attributionLike","frameState","TileSource","getTileGridForProjection","tilePixelRatio","scaleSize","gridProjection","TileSourceEvent","TileEventType","DataTileSource","tileSizes","thisProj","loader","sourceTileGrid","reprojTilePixelRatio","textureSize","targetTileGrid","wrappedTileCoord","sourceLoader","controller","loaderOptions","requestZ","requestX","requestY","uid","tileState","projKey","proj","isMask","readRGB","preference","interpretation","interpretations","geotiffGlobals.photometricInterpretations","STATISTICS_MAXIMUM","STATISTICS_MINIMUM","defaultTileSize","workerPool","getWorkerPool","getBoundingBox","getOrigin","getResolutions","getCachedProjection","unitsFromCode","getImagesForTIFF","tiff","getImagesForSource","tiffFromBlob","tiffFromUrls","tiffFromUrl","assertEqual","expected","got","tolerance","rejector","getMinForDataType","getMaxForDataType","GeoTIFFSource","numSources","logError","firstSource","multiplyTransform","commonRenderTileSizes","commonSourceTileSizes","nodataValues","minZoom","sourceCount","sourceIndex","images","masks","sourceOrigin","sourceTileSizes","renderTileSizes","sourceResolutions","imageIndex","nodataValue","wantedSamples","imageResolutions","sourceTileSize","aspectRatio","resolutionFactor","scaledSourceResolutions","sourceImagery","bands","viewExtent","createMatrix","sourceInfo","pixelBounds","bandNumber","readOptions","maskIndex","mask","sourceSamples","normalize","addAlpha","dataLength","dataIndex","pixelIndex","transparent","gain","bias","stats","sourceValue","nodata","bandIndex","nodataIsNaN","CollectionEventType","Property","CollectionEvent","element","Collection","elem","prev","except","MapEvent","map","MapBrowserEvent","originalEvent","dragging","activePointers","pixel","MapBrowserEventType","PointerEventType","MapBrowserEventHandler","moveTolerance","pointerEvent","newEvent","pointerId","doc","MapEventType","MapProperty","DROP","PriorityQueue","priorityFunction","keyFunction","elements","priorities","elementKey","priority","lIndex","rIndex","smallerChildIndex","parentIndex","TileQueue","tilePriorityFunction","tileChangeCallback","added","tileKey","maxTotalLoading","maxNewLoads","newLoads","getTilePriority","tileSourceKey","tileCenter","tileResolution","deltaX","deltaY","ViewHint","ViewProperty","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","none","transform2D","destinationStride","anchor","anchorX","anchorY","tmpTransform","createTransform","tmpPoint","Geometry","revision","squaredTolerance","closestPoint","minSquaredDistance","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","transformed","projTransform","SimpleGeometry","simplifiedGeometry","layout","getStrideForLayout","nesting","getLayoutForStride","linearRing","twiceArea","linearRings","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","inflateCoordinates","inflateCoordinatesArray","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","maxSquaredDistance","snap","quantize","quantizeArray","simplifiedEnds","LinearRing","linearRingArea","Point","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","linearRingIsClockwise","edge","linearRingsAreOriented","isClockwise","orientLinearRings","reverseCoordinates","Polygon","polygon","linearRingsArea","flatCenter","fromExtent","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","minResolution","result","createSnapToResolutions","cappedMaxRes","capped","createSnapToPower","power","minZoomLevel","cappedZoomLevel","zoomLevel","newResolution","createMinMaxResolution","createSnapToN","theta","createSnapToZero","DEFAULT_MIN_ZOOM","View","properties","resolutionConstraintInfo","createResolutionConstraint","centerConstraint","createCenterConstraint","resolutionConstraint","rotationConstraint","createRotationConstraint","padding","oldPadding","newPadding","offsetX","offsetY","newOptions","var_args","animationCount","animationCallback","series","animation","isNoopAnimation","now","more","seriesComplete","elapsed","fraction","progress","constrainedResolution","constrainedRotation","currentCenter","rotateCoordinate","addCoordinate","currentResolution","w","hints","enabled","logPower","reducedSize","calculateCenterOn","nearest","baseLevel","geometryOrExtent","geometry","polygonFromExtent","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","position","shiftedCenter","deltaCoordinates","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","duration","resolutionDirection","targetZoom","targetRes","returnValue","centerNone","projExtent","constrainOnlyCenter","defaultMaxResolution","defaultMinResolution","constrainRotation","rotationNone","coordinatesEqual","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","Control","_b","mapEvent","Attribution","className","tipLabel","expandClassName","collapseLabel","collapseClassName","label","activeLabel","cssClasses","layers","visibleAttributions","layer","collapsible","attribution","visible","collapsed","Rotate","compassClassName","button","contains","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","currentZoom","newZoom","defaults","controls","Kinetic","decay","minVelocity","delay","lastIndex","firstIndex","InteractionProperty","Interaction","mapBrowserEvent","active","pan","zoomByDelta","DoubleClickZoom","stopEvent","browserEvent","all","conditions","pass","altShiftKeysOnly","focus","targetElement","rootNode","activeElement","focusWithTabindex","always","mouseActionButton","noModifierKeys","platformModifierKey","shiftKeyOnly","targetNotEditable","mouseOnly","primaryAction","PointerInteraction","handledUp","handled","centroid","pointerEvents","clientX","clientY","DragPan","condition","targetPointers","centroidFromPointers","scaleCoordinate","distance","centerpx","DragRotate","RenderBox","startPixel","endPixel","px","style","DragBoxEventType","DragBoxEvent","DragBox","_c","completeBox","DragZoom","Key","KeyboardPan","keyEvent","mapUnitsDelta","KeyboardZoom","DELTA_LINE_MULTIPLIER","DELTA_PAGE_MULTIPLIER","MouseWheelZoom","wheelEvent","timeLeft","useAnchor","PinchRotate","pointerOptions","rotationDelta","touch0","touch1","PinchZoom","scaleDelta","interactions","kinetic","LayerProperty","BaseLayer","managed","zIndex","states","background","opacity","zindex","GroupEvent","LayerGroup","baseOptions","layersArray","listenerKeys","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","layerState","RenderEventType","Layer","layerExtent","inView","getAttributions","layerRenderer","renderEvent","layerStatesArray","arrayLayerState","viewState","quickselect","quickselectStep","defaultCompare","sd","newLeft","newRight","swap","RBush","maxEntries","toBBox","nodesToSearch","child","childBBox","tmpNode","createNode","equalsFn","path","indexes","goingUp","findItem","N","M","calcBBox","N2","N1","multiSelect","right2","right3","minArea","minEnlargement","targetNode","bboxArea","enlargement","enlargedArea","isNode","insertPath","splitIndex","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareMinX","compareNodeMinX","compareMinY","compareNodeMinY","xMargin","yMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","p","destNode","mid","NO_COLOR","colorParseContext","getColorParseContext","rgbModernRegEx","rgbLegacyAbsoluteRegEx","rgbLegacyPercentageRegEx","hexRegEx","toColorComponent","divider","throwInvalidColor","color","parseRgba","rgb","alpha","rgbDivider","hex","colorFromHex","colorComponent","invalidCheckFillStyle","colorString","colorFromImage","asString","toString","MAX_CACHE_SIZE","withAlpha","v","rgbaToLcha","q","lchaToRgba","fromString","asArray","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","SizeType","AnyType","typeNames","namedTypes","isSpecific","typeName","names","namedType","includesType","broad","specific","isType","LiteralExpression","CallExpression","operator","newParsingContext","parse","encoded","expectedType","colorFromString","parseCallExpression","Ops","parsers","createCallExpressionParser","hasArgsCount","withGetArgs","withVarArgs","usesFeatureId","withNoArgs","withArgsOfType","usesGeometryType","usesMapState","withArgsOfReturnType","hasEvenArgs","withMatchArgs","withInterpolateArgs","hasOddArgs","withCaseArgs","withInArgs","withPaletteArgs","returnType","argsCount","operation","minArgs","maxArgs","argCount","plural","expression","argType","inputType","fallback","interpolationType","base","interpolation","stop","haystack","needleType","arg","colors","parsedColors","validators","parsed","parser","computeGeometryType","newEvaluationContext","buildExpression","compileExpression","colorValue","compileAssertionExpression","compileAccessorExpression","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileCaseExpression","compileMatchExpression","compileInterpolateExpression","compileConvertExpression","op","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","input1","output1","input2","output2","along","rgba1","rgba2","lcha1","lcha2","deltaHue","lcha","ImageState","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","load","handleLoad","unlisten","handleError","decodeFallback","IconImageCache","iconImage","crossOrigin","getCacheKey","update","maxCacheSize","shared","taintedTestContext","IconImage","imageState","onChange","cacheKey","iconImageCache","asColorLike","asCanvasPattern","iconCache","canvasPattern","patternCanvasContext","getIconImage","defaultFillStyle","defaultLineCap","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultLineWidth","checkedFonts","ImageStyle","displacement","rotateWithView","RegularShape","fill","fillKey","renderOptions","stroke","lineJoin","strokeWidth","miterLimit","r1","r2","points","miterRatio","bevelAdd","aa","bb","dd","innerMiterRatio","innerLength","lineCap","lineDash","lineDashOffset","strokeStyle","_d","_e","_f","maxRadius","radius2","startAngle","angle0","radiusC","CircleStyle","Fill","patternImage","calculateScale","wantedWidth","wantedHeight","Icon","onload","imageSize","iconImageSize","Stroke","Style","defaultGeometryFunction","renderer","feature","toFunction","styleFunction","styles","defaultStyles","createDefaultStyle","DEFAULT_FILL_COLOR","Text","overflow","font","maxAngle","placement","repeat","keepUpright","textAlign","justify","textBaseline","rulesToStyleFunction","rules","parsingContext","evaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","buildStyle","nonNullCount","compiledRules","rule","filter","styleLength","someMatched","filterEvaluator","styleEvaluator","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","buildText","evaluateImage","buildImage","evaluateZIndex","numberEvaluator","empty","prefix","evaluateColor","patternEvaluator","colorLikeEvaluator","evaluateWidth","evaluateLineCap","stringEvaluator","evaluateLineJoin","evaluateLineDash","numberArrayEvaluator","evaluateLineDashOffset","evaluateMiterLimit","evaluateValue","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluateKeepUpright","evaluatePadding","declutterMode","optionalDeclutterMode","buildIcon","buildShape","buildCircle","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","anchorOrigin","optionalIconOrigin","anchorXUnits","optionalIconAnchorUnits","anchorYUnits","optionalColorLike","optionalString","optionalNumberArray","offsetOrigin","optionalNumber","optionalSize","icon","pointsName","radiusName","requireNumber","shape","evaluateRadius","circle","Circle","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","requireColorLike","requireNumberArray","requireSize","requireSizeLike","BaseVectorLayer","declutterGroup","renderOrder","styleLike","toStyleLike","toStyleFunction","declutter","RenderEvent","inversePixelTransform","MapRenderer","coordinateToPixelTransform","pixelToCoordinateTransform","hitTolerance","checkWrapped","layerFilter","thisArg2","forEachFeatureAtCoordinate","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","order","expireIconCache","CompositeMapRenderer","container","renderedLayerStates","previousElement","sourceState","removeLayerMapProperty","setLayerMapProperty","Map","optionsInternal","createOptionsInternal","defaultControls","defaultInteractions","viewOptions","control","interaction","overlay","features","addLayersFrom","layerGroup","viewportPosition","scaleX","scaleY","eventPosition","viewCoordinate","currentDoc","interactionsArray","tileQueue","lowOnFrameBudget","postRenderFunctions","keyboardEventTarget","targetRoot","previousFrameState","viewHints","equalsExtent","oldLayerGroup","computedStyle","oldSize","overlays","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","STREAM_DRAW","STATIC_DRAW","DYNAMIC_DRAW","UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT","FLOAT","CONTEXT_IDS","getContext","attributes","BufferUsage","WebGLArrayBuffer","usage","getArrayClassForType","ArrayType","ContextEventType","DEFAULT_VERTEX_SHADER","DEFAULT_FRAGMENT_SHADER","WebGLPostProcessingPass","verticesArray","internalFormat","border","nextPass","preCompose","postCompose","canvasId","textureSlot","uniform","DefaultUniform","AttributeType","canvasCache","getSharedCanvasCacheKey","uniqueCanvasCacheKeyCount","getUniqueCanvasCacheKey","getOrCreateContext","cacheItem","WebGLHelper","uniforms","canvasCacheKey","bufferKey","bufferCache","webGlBuffer","buf","disableAlphaBlend","enableDepth","frameBuffer","slot","uniformName","renderTarget","elementType","elementSize","numItems","offsetInBytes","loc","imageReady","fragmentShaderSource","vertexShaderSource","programUid","attribName","computeAttributesStride","attr","getByteSizeFromType","ImageTile","tileLoadFunction","getBlankImage","ReprojTile","getTileFunction","BaseTileRepresentation","helper","bindAndConfigure","resampleFilter","uploadImageTexture","uploadDataTexture","canInterpolate","unpackAlignment","oldUnpackAlignment","pixelContext","createPixelContext","TileTexture","textureCount","textureDataArrays","textureIndex","rowOffset","colCount","rowIndex","colIndex","dataValue","textureData","textureBandIndex","renderCol","renderRow","renderWidth","renderHeight","sourceWidth","sourceHeight","sourceWidthWithoutGutter","sourceHeightWithoutGutter","sourceCol","sourceRow","sourceSize","LRUCache","highWaterMark","entry","keep","maxStaleKeys","LayerRenderer","WebGLLayerRenderer","incrementGroup","groupNumber","layerClassName","Uniforms","depthForZ","newTileRepresentationLookup","lookupHasTile","tileRepresentationLookup","addTileRepresentationToLookup","tileRepresentation","representationsByZ","getRenderExtent","gridExtent","getTileCoordKey","WebGLBaseTileLayerRenderer","tileLayer","createMat4","createTileCoord","initialZ","preload","tileSource","wantedTiles","tileRepresentationCache","minZ","tileQueueKey","tilesWithAlpha","tileTransform","renderExtent","tileOrigin","tileExtent","depth","tileZ","alphaLookup","tileCoordKey","tileWidthWithGutter","tileHeightWithGutter","centerI","centerJ","tileScale","tileCenterI","tileCenterJ","resetTransform","scaleTransform","rotateTransform","translateTransform","targetZ","nextExtent","blend","parentZ","zs","altZ","covered","BaseUniforms","Attributes","attributeDescriptions","WebGLTileLayerRenderer","paletteTexture","tileTexture","paletteIndex","mat4FromTransform","gutterExtent","tileTextureCache","col","row","PaletteTexture","computeOperatorFunctionName","numberToGlsl","arrayToGlsl","colorToGlsl","sizeToGlsl","stringToFloatMap","stringToFloatCounter","getStringNumberEquivalent","stringToGlsl","uniformNameForVariable","variableName","newCompilationContext","GET_BAND_VALUE_FUNC","PALETTE_TEXTURE_ARRAY","FEATURE_ID_PROPERTY_NAME","GEOMETRY_TYPE_PROPERTY_NAME","UNDEFINED_PROP_VALUE","compilationContext","compile","createCompiler","compilers","propName","varName","compiledArgs","firstValue","secondValue","exponent","stop1","stop2","needle","funcName","tests","band","xOffset","yOffset","ifBlocks","colorIndex","textureName","numColors","palette","parsedValue","paletteName","compiledIndex","compiler","expressionToGlsl","TileProperty","BaseTileLayer","useInterimTilesOnError","parseStyle","pipeline","contrast","exposure","saturation","gamma","brightness","numVariables","variable","uniformDeclarations","functionDefintions","WebGLTileLayer","parsedStyle","ready","altSources","variables","zRegEx","xRegEx","yRegEx","dashYRegEx","renderXYZTemplate","template","expandUrl","urls","startCharCode","stopCharCode","charCode","createFromTemplate","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","UrlTile","tileUrlFunction","TileImage","defaultTileLoadFunction","urlTileCoord","tileUrl","imageTile","XYZ","colorScale","colormap","createColormap","spec","indicies","fromrgba","torgba","nsteps","cmap","nshades","rgba","amt","rgb2hex","rgbaStr","rgb2float","dig","currentRasterIndex","currentLayer","rasterLayers","getColorStops","createLayer","TileLayer","initMap","carto","updateRasterInfo","createColorbar","switchToRaster","nextRaster","nextIndex","previousRaster","prevIndex","currentRaster","metadataFields","getCustomMetadataFields","colorbarCtx","labelsContainer","minValue","maxValue","barHeight","barWidth","segmentHeight"],"sources":["../../vite/modulepreload-polyfill","../../node_modules/@petamoriken/float16/src/_util/primordials.mjs","../../node_modules/@petamoriken/float16/src/_util/arrayIterator.mjs","../../node_modules/@petamoriken/float16/src/_util/converter.mjs","../../node_modules/@petamoriken/float16/src/DataView.mjs","../../node_modules/xml-utils/get-attribute.js","../../node_modules/xml-utils/index-of-match.js","../../node_modules/xml-utils/index-of-match-end.js","../../node_modules/xml-utils/count-substring.js","../../node_modules/xml-utils/find-tag-by-name.js","../../node_modules/xml-utils/find-tags-by-name.js","../../node_modules/geotiff/dist-module/globals.js","../../node_modules/geotiff/dist-module/rgb.js","../../node_modules/geotiff/dist-module/compression/index.js","../../node_modules/geotiff/dist-module/resample.js","../../node_modules/geotiff/dist-module/geotiffimage.js","../../node_modules/geotiff/dist-module/dataview64.js","../../node_modules/geotiff/dist-module/dataslice.js","../../node_modules/geotiff/dist-module/pool.js","../../node_modules/geotiff/dist-module/source/httputils.js","../../node_modules/geotiff/dist-module/source/basesource.js","../../node_modules/quick-lru/index.js","../../node_modules/geotiff/dist-module/utils.js","../../node_modules/geotiff/dist-module/source/blockedsource.js","../../node_modules/geotiff/dist-module/source/client/base.js","../../node_modules/geotiff/dist-module/source/client/fetch.js","../../node_modules/geotiff/dist-module/source/client/xhr.js","../../__vite-browser-external","../../node_modules/geotiff/dist-module/source/client/http.js","../../node_modules/geotiff/dist-module/source/remote.js","../../node_modules/geotiff/dist-module/source/filereader.js","../../node_modules/geotiff/dist-module/geotiff.js","../../node_modules/ol/console.js","../../node_modules/ol/extent/Relationship.js","../../node_modules/ol/extent.js","../../node_modules/ol/math.js","../../node_modules/ol/proj/Units.js","../../node_modules/ol/coordinate.js","../../node_modules/ol/proj/Projection.js","../../node_modules/ol/proj/epsg3857.js","../../node_modules/ol/proj/epsg4326.js","../../node_modules/ol/proj/projections.js","../../node_modules/ol/obj.js","../../node_modules/ol/proj/transforms.js","../../node_modules/ol/proj/utm.js","../../node_modules/ol/sphere.js","../../node_modules/ol/proj.js","../../node_modules/ol/TileRange.js","../../node_modules/ol/array.js","../../node_modules/ol/asserts.js","../../node_modules/ol/geom/flat/contains.js","../../node_modules/ol/geom/flat/segments.js","../../node_modules/ol/geom/flat/intersectsextent.js","../../node_modules/ol/size.js","../../node_modules/ol/tilecoord.js","../../node_modules/ol/tilegrid/common.js","../../node_modules/ol/tilegrid/TileGrid.js","../../node_modules/ol/transform.js","../../node_modules/ol/TileState.js","../../node_modules/ol/easing.js","../../node_modules/ol/events/EventType.js","../../node_modules/ol/Disposable.js","../../node_modules/ol/functions.js","../../node_modules/ol/events/Event.js","../../node_modules/ol/events/Target.js","../../node_modules/ol/util.js","../../node_modules/ol/Tile.js","../../node_modules/ol/has.js","../../node_modules/ol/dom.js","../../node_modules/ol/DataTile.js","../../node_modules/ol/events.js","../../node_modules/ol/reproj.js","../../node_modules/ol/reproj/Triangulation.js","../../node_modules/ol/reproj/common.js","../../node_modules/ol/vec/mat4.js","../../node_modules/ol/webgl/Canvas.js","../../node_modules/ol/reproj/glreproj.js","../../node_modules/ol/reproj/DataTile.js","../../node_modules/ol/tilegrid.js","../../node_modules/ol/ObjectEventType.js","../../node_modules/ol/Observable.js","../../node_modules/ol/Object.js","../../node_modules/ol/source/Source.js","../../node_modules/ol/source/Tile.js","../../node_modules/ol/source/TileEventType.js","../../node_modules/ol/source/DataTile.js","../../node_modules/ol/source/GeoTIFF.js","../../node_modules/ol/CollectionEventType.js","../../node_modules/ol/Collection.js","../../node_modules/ol/MapEvent.js","../../node_modules/ol/MapBrowserEvent.js","../../node_modules/ol/MapBrowserEventType.js","../../node_modules/ol/pointer/EventType.js","../../node_modules/ol/MapBrowserEventHandler.js","../../node_modules/ol/MapEventType.js","../../node_modules/ol/MapProperty.js","../../node_modules/ol/structs/PriorityQueue.js","../../node_modules/ol/TileQueue.js","../../node_modules/ol/ViewHint.js","../../node_modules/ol/ViewProperty.js","../../node_modules/ol/centerconstraint.js","../../node_modules/ol/geom/flat/transform.js","../../node_modules/ol/geom/Geometry.js","../../node_modules/ol/geom/SimpleGeometry.js","../../node_modules/ol/geom/flat/area.js","../../node_modules/ol/geom/flat/closest.js","../../node_modules/ol/geom/flat/deflate.js","../../node_modules/ol/geom/flat/inflate.js","../../node_modules/ol/geom/flat/simplify.js","../../node_modules/ol/geom/LinearRing.js","../../node_modules/ol/geom/Point.js","../../node_modules/ol/geom/flat/interiorpoint.js","../../node_modules/ol/geom/flat/reverse.js","../../node_modules/ol/geom/flat/orient.js","../../node_modules/ol/geom/Polygon.js","../../node_modules/ol/resolutionconstraint.js","../../node_modules/ol/rotationconstraint.js","../../node_modules/ol/View.js","../../node_modules/ol/css.js","../../node_modules/ol/control/Control.js","../../node_modules/ol/control/Attribution.js","../../node_modules/ol/control/Rotate.js","../../node_modules/ol/control/Zoom.js","../../node_modules/ol/control/defaults.js","../../node_modules/ol/Kinetic.js","../../node_modules/ol/interaction/Property.js","../../node_modules/ol/interaction/Interaction.js","../../node_modules/ol/interaction/DoubleClickZoom.js","../../node_modules/ol/events/condition.js","../../node_modules/ol/interaction/Pointer.js","../../node_modules/ol/interaction/DragPan.js","../../node_modules/ol/interaction/DragRotate.js","../../node_modules/ol/render/Box.js","../../node_modules/ol/interaction/DragBox.js","../../node_modules/ol/interaction/DragZoom.js","../../node_modules/ol/events/Key.js","../../node_modules/ol/interaction/KeyboardPan.js","../../node_modules/ol/interaction/KeyboardZoom.js","../../node_modules/ol/interaction/MouseWheelZoom.js","../../node_modules/ol/interaction/PinchRotate.js","../../node_modules/ol/interaction/PinchZoom.js","../../node_modules/ol/interaction/defaults.js","../../node_modules/ol/layer/Property.js","../../node_modules/ol/layer/Base.js","../../node_modules/ol/layer/Group.js","../../node_modules/ol/render/EventType.js","../../node_modules/ol/layer/Layer.js","../../node_modules/quickselect/index.js","../../node_modules/rbush/index.js","../../node_modules/ol/color.js","../../node_modules/ol/expr/expression.js","../../node_modules/ol/expr/cpu.js","../../node_modules/ol/ImageState.js","../../node_modules/ol/Image.js","../../node_modules/ol/style/IconImageCache.js","../../node_modules/ol/style/IconImage.js","../../node_modules/ol/colorlike.js","../../node_modules/ol/render/canvas.js","../../node_modules/ol/style/Image.js","../../node_modules/ol/style/RegularShape.js","../../node_modules/ol/style/Circle.js","../../node_modules/ol/style/Fill.js","../../node_modules/ol/style/Icon.js","../../node_modules/ol/style/Stroke.js","../../node_modules/ol/style/Style.js","../../node_modules/ol/style/Text.js","../../node_modules/ol/render/canvas/style.js","../../node_modules/ol/layer/BaseVector.js","../../node_modules/ol/render/Event.js","../../node_modules/ol/renderer/Map.js","../../node_modules/ol/renderer/Composite.js","../../node_modules/ol/Map.js","../../node_modules/ol/webgl.js","../../node_modules/ol/webgl/Buffer.js","../../node_modules/ol/webgl/ContextEventType.js","../../node_modules/ol/webgl/PostProcessingPass.js","../../node_modules/ol/webgl/Helper.js","../../node_modules/ol/ImageTile.js","../../node_modules/ol/reproj/Tile.js","../../node_modules/ol/webgl/BaseTileRepresentation.js","../../node_modules/ol/webgl/TileTexture.js","../../node_modules/ol/structs/LRUCache.js","../../node_modules/ol/renderer/Layer.js","../../node_modules/ol/renderer/webgl/Layer.js","../../node_modules/ol/renderer/webgl/TileLayerBase.js","../../node_modules/ol/renderer/webgl/TileLayer.js","../../node_modules/ol/webgl/PaletteTexture.js","../../node_modules/ol/expr/gpu.js","../../node_modules/ol/render/webgl/compileUtil.js","../../node_modules/ol/layer/TileProperty.js","../../node_modules/ol/layer/BaseTile.js","../../node_modules/ol/layer/WebGLTile.js","../../node_modules/ol/uri.js","../../node_modules/ol/tileurlfunction.js","../../node_modules/ol/source/UrlTile.js","../../node_modules/ol/source/TileImage.js","../../node_modules/ol/source/XYZ.js","../../node_modules/colormap/colorScale.js","../../node_modules/lerp/index.js","../../node_modules/colormap/index.js","../../main.js"],"sourcesContent":["__VITE_IS_MODERN__&&(function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n}());","/* eslint-disable no-restricted-globals, no-restricted-syntax */\n/* global SharedArrayBuffer */\n\nimport { CANNOT_CONVERT_UNDEFINED_OR_NULL_TO_OBJECT } from \"./messages.mjs\";\n\n/** @type {<T extends (...args: any) => any>(target: T) => (thisArg: ThisType<T>, ...args: any[]) => any} */\nfunction uncurryThis(target) {\n  return (thisArg, ...args) => {\n    return ReflectApply(target, thisArg, args);\n  };\n}\n\n/** @type {(target: any, key: string | symbol) => (thisArg: any, ...args: any[]) => any} */\nfunction uncurryThisGetter(target, key) {\n  return uncurryThis(\n    ReflectGetOwnPropertyDescriptor(\n      target,\n      key\n    ).get\n  );\n}\n\n// Reflect\nexport const {\n  apply: ReflectApply,\n  construct: ReflectConstruct,\n  defineProperty: ReflectDefineProperty,\n  get: ReflectGet,\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor,\n  getPrototypeOf: ReflectGetPrototypeOf,\n  has: ReflectHas,\n  ownKeys: ReflectOwnKeys,\n  set: ReflectSet,\n  setPrototypeOf: ReflectSetPrototypeOf,\n} = Reflect;\n\n// Proxy\nexport const NativeProxy = Proxy;\n\n// Number\nexport const {\n  EPSILON,\n  MAX_SAFE_INTEGER,\n  isFinite: NumberIsFinite,\n  isNaN: NumberIsNaN,\n} = Number;\n\n// Symbol\nexport const {\n  iterator: SymbolIterator,\n  species: SymbolSpecies,\n  toStringTag: SymbolToStringTag,\n  for: SymbolFor,\n} = Symbol;\n\n// Object\nexport const NativeObject = Object;\nexport const {\n  create: ObjectCreate,\n  defineProperty: ObjectDefineProperty,\n  freeze: ObjectFreeze,\n  is: ObjectIs,\n} = NativeObject;\nconst ObjectPrototype = NativeObject.prototype;\n/** @type {(object: object, key: PropertyKey) => Function | undefined} */\nexport const ObjectPrototype__lookupGetter__ = /** @type {any} */ (ObjectPrototype).__lookupGetter__\n  ? uncurryThis(/** @type {any} */ (ObjectPrototype).__lookupGetter__)\n  : (object, key) => {\n    if (object == null) {\n      throw NativeTypeError(\n        CANNOT_CONVERT_UNDEFINED_OR_NULL_TO_OBJECT\n      );\n    }\n\n    let target = NativeObject(object);\n    do {\n      const descriptor = ReflectGetOwnPropertyDescriptor(target, key);\n      if (descriptor !== undefined) {\n        if (ObjectHasOwn(descriptor, \"get\")) {\n          return descriptor.get;\n        }\n\n        return;\n      }\n    } while ((target = ReflectGetPrototypeOf(target)) !== null);\n  };\n/** @type {(object: object, key: PropertyKey) => boolean} */\nexport const ObjectHasOwn = /** @type {any} */ (NativeObject).hasOwn ||\n  uncurryThis(ObjectPrototype.hasOwnProperty);\n\n// Array\nconst NativeArray = Array;\nexport const ArrayIsArray = NativeArray.isArray;\nconst ArrayPrototype = NativeArray.prototype;\n/** @type {(array: ArrayLike<unknown>, separator?: string) => string} */\nexport const ArrayPrototypeJoin = uncurryThis(ArrayPrototype.join);\n/** @type {<T>(array: T[], ...items: T[]) => number} */\nexport const ArrayPrototypePush = uncurryThis(ArrayPrototype.push);\n/** @type {(array: ArrayLike<unknown>, ...opts: any[]) => string} */\nexport const ArrayPrototypeToLocaleString = uncurryThis(\n  ArrayPrototype.toLocaleString\n);\nexport const NativeArrayPrototypeSymbolIterator = ArrayPrototype[SymbolIterator];\n/** @type {<T>(array: T[]) => IterableIterator<T>} */\nexport const ArrayPrototypeSymbolIterator = uncurryThis(NativeArrayPrototypeSymbolIterator);\n\n// Math\nexport const {\n  abs: MathAbs,\n  trunc: MathTrunc,\n} = Math;\n\n// ArrayBuffer\nexport const NativeArrayBuffer = ArrayBuffer;\nexport const ArrayBufferIsView = NativeArrayBuffer.isView;\nconst ArrayBufferPrototype = NativeArrayBuffer.prototype;\n/** @type {(buffer: ArrayBuffer, begin?: number, end?: number) => number} */\nexport const ArrayBufferPrototypeSlice = uncurryThis(ArrayBufferPrototype.slice);\n/** @type {(buffer: ArrayBuffer) => ArrayBuffer} */\nexport const ArrayBufferPrototypeGetByteLength = uncurryThisGetter(ArrayBufferPrototype, \"byteLength\");\n\n// SharedArrayBuffer\nexport const NativeSharedArrayBuffer = typeof SharedArrayBuffer !== \"undefined\" ? SharedArrayBuffer : null;\n/** @type {(buffer: SharedArrayBuffer) => SharedArrayBuffer} */\nexport const SharedArrayBufferPrototypeGetByteLength = NativeSharedArrayBuffer\n  && uncurryThisGetter(NativeSharedArrayBuffer.prototype, \"byteLength\");\n\n// TypedArray\n/** @typedef {Uint8Array|Uint8ClampedArray|Uint16Array|Uint32Array|Int8Array|Int16Array|Int32Array|Float32Array|Float64Array|BigUint64Array|BigInt64Array} TypedArray */\n/** @type {any} */\nexport const TypedArray = ReflectGetPrototypeOf(Uint8Array);\nconst TypedArrayFrom = TypedArray.from;\nexport const TypedArrayPrototype = TypedArray.prototype;\nexport const NativeTypedArrayPrototypeSymbolIterator = TypedArrayPrototype[SymbolIterator];\n/** @type {(typedArray: TypedArray) => IterableIterator<number>} */\nexport const TypedArrayPrototypeKeys = uncurryThis(TypedArrayPrototype.keys);\n/** @type {(typedArray: TypedArray) => IterableIterator<number>} */\nexport const TypedArrayPrototypeValues = uncurryThis(\n  TypedArrayPrototype.values\n);\n/** @type {(typedArray: TypedArray) => IterableIterator<[number, number]>} */\nexport const TypedArrayPrototypeEntries = uncurryThis(\n  TypedArrayPrototype.entries\n);\n/** @type {(typedArray: TypedArray, array: ArrayLike<number>, offset?: number) => void} */\nexport const TypedArrayPrototypeSet = uncurryThis(TypedArrayPrototype.set);\n/** @type {<T extends TypedArray>(typedArray: T) => T} */\nexport const TypedArrayPrototypeReverse = uncurryThis(\n  TypedArrayPrototype.reverse\n);\n/** @type {<T extends TypedArray>(typedArray: T, value: number, start?: number, end?: number) => T} */\nexport const TypedArrayPrototypeFill = uncurryThis(TypedArrayPrototype.fill);\n/** @type {<T extends TypedArray>(typedArray: T, target: number, start: number, end?: number) => T} */\nexport const TypedArrayPrototypeCopyWithin = uncurryThis(\n  TypedArrayPrototype.copyWithin\n);\n/** @type {<T extends TypedArray>(typedArray: T, compareFn?: (a: number, b: number) => number) => T} */\nexport const TypedArrayPrototypeSort = uncurryThis(TypedArrayPrototype.sort);\n/** @type {<T extends TypedArray>(typedArray: T, start?: number, end?: number) => T} */\nexport const TypedArrayPrototypeSlice = uncurryThis(TypedArrayPrototype.slice);\n/** @type {<T extends TypedArray>(typedArray: T, start?: number, end?: number) => T} */\nexport const TypedArrayPrototypeSubarray = uncurryThis(\n  TypedArrayPrototype.subarray\n);\n/** @type {((typedArray: TypedArray) => ArrayBuffer)} */\nexport const TypedArrayPrototypeGetBuffer = uncurryThisGetter(\n  TypedArrayPrototype,\n  \"buffer\"\n);\n/** @type {((typedArray: TypedArray) => number)} */\nexport const TypedArrayPrototypeGetByteOffset = uncurryThisGetter(\n  TypedArrayPrototype,\n  \"byteOffset\"\n);\n/** @type {((typedArray: TypedArray) => number)} */\nexport const TypedArrayPrototypeGetLength = uncurryThisGetter(\n  TypedArrayPrototype,\n  \"length\"\n);\n/** @type {(target: unknown) => string} */\nexport const TypedArrayPrototypeGetSymbolToStringTag = uncurryThisGetter(\n  TypedArrayPrototype,\n  SymbolToStringTag\n);\n\n// Uint8Array\nexport const NativeUint8Array = Uint8Array;\n\n// Uint16Array\nexport const NativeUint16Array = Uint16Array;\n/** @type {Uint16ArrayConstructor[\"from\"]} */\nexport const Uint16ArrayFrom = (...args) => {\n  return ReflectApply(TypedArrayFrom, NativeUint16Array, args);\n};\n\n// Uint32Array\nexport const NativeUint32Array = Uint32Array;\n\n// Float32Array\nexport const NativeFloat32Array = Float32Array;\n\n// ArrayIterator\n/** @type {any} */\nexport const ArrayIteratorPrototype = ReflectGetPrototypeOf([][SymbolIterator]());\n/** @type {<T>(arrayIterator: IterableIterator<T>) => IteratorResult<T>} */\nexport const ArrayIteratorPrototypeNext = uncurryThis(ArrayIteratorPrototype.next);\n\n// Generator\n/** @type {<T = unknown, TReturn = any, TNext = unknown>(generator: Generator<T, TReturn, TNext>, value?: TNext) => T} */\nexport const GeneratorPrototypeNext = uncurryThis((function* () {})().next);\n\n// Iterator\nexport const IteratorPrototype = ReflectGetPrototypeOf(ArrayIteratorPrototype);\n\n// DataView\nconst DataViewPrototype = DataView.prototype;\n/** @type {(dataView: DataView, byteOffset: number, littleEndian?: boolean) => number} */\nexport const DataViewPrototypeGetUint16 = uncurryThis(\n  DataViewPrototype.getUint16\n);\n/** @type {(dataView: DataView, byteOffset: number, value: number, littleEndian?: boolean) => void} */\nexport const DataViewPrototypeSetUint16 = uncurryThis(\n  DataViewPrototype.setUint16\n);\n\n// Error\nexport const NativeTypeError = TypeError;\nexport const NativeRangeError = RangeError;\n\n// WeakSet\n/**\n * Do not construct with arguments to avoid calling the \"add\" method\n * @type {{new <T extends {}>(): WeakSet<T>}}\n */\nexport const NativeWeakSet = WeakSet;\nconst WeakSetPrototype = NativeWeakSet.prototype;\n/** @type {<T extends {}>(set: WeakSet<T>, value: T) => Set<T>} */\nexport const WeakSetPrototypeAdd = uncurryThis(WeakSetPrototype.add);\n/** @type {<T extends {}>(set: WeakSet<T>, value: T) => boolean} */\nexport const WeakSetPrototypeHas = uncurryThis(WeakSetPrototype.has);\n\n// WeakMap\n/**\n * Do not construct with arguments to avoid calling the \"set\" method\n * @type {{new <K extends {}, V>(): WeakMap<K, V>}}\n */\nexport const NativeWeakMap = WeakMap;\nconst WeakMapPrototype = NativeWeakMap.prototype;\n/** @type {<K extends {}, V>(weakMap: WeakMap<K, V>, key: K) => V} */\nexport const WeakMapPrototypeGet = uncurryThis(WeakMapPrototype.get);\n/** @type {<K extends {}, V>(weakMap: WeakMap<K, V>, key: K) => boolean} */\nexport const WeakMapPrototypeHas = uncurryThis(WeakMapPrototype.has);\n/** @type {<K extends {}, V>(weakMap: WeakMap<K, V>, key: K, value: V) => WeakMap} */\nexport const WeakMapPrototypeSet = uncurryThis(WeakMapPrototype.set);\n","import {\n  ArrayIteratorPrototype,\n  ArrayIteratorPrototypeNext,\n  ArrayPrototypeSymbolIterator,\n  GeneratorPrototypeNext,\n  IteratorPrototype,\n  NativeArrayPrototypeSymbolIterator,\n  NativeWeakMap,\n  ObjectCreate,\n  ObjectDefineProperty,\n  ReflectGetOwnPropertyDescriptor,\n  ReflectOwnKeys,\n  SymbolIterator,\n  WeakMapPrototypeGet,\n  WeakMapPrototypeSet,\n} from \"./primordials.mjs\";\n\n/** @type {WeakMap<{}, IterableIterator<any>>} */\nconst arrayIterators = new NativeWeakMap();\n\nconst SafeIteratorPrototype = ObjectCreate(null, {\n  next: {\n    value: function next() {\n      const arrayIterator = WeakMapPrototypeGet(arrayIterators, this);\n      return ArrayIteratorPrototypeNext(arrayIterator);\n    },\n  },\n\n  [SymbolIterator]: {\n    value: function values() {\n      return this;\n    },\n  },\n});\n\n/**\n * Wrap the Array around the SafeIterator If Array.prototype [@@iterator] has been modified\n * @type {<T>(array: T[]) => Iterable<T>}\n */\nexport function safeIfNeeded(array) {\n  if (\n    array[SymbolIterator] === NativeArrayPrototypeSymbolIterator &&\n    ArrayIteratorPrototype.next === ArrayIteratorPrototypeNext\n  ) {\n    return array;\n  }\n\n  const safe = ObjectCreate(SafeIteratorPrototype);\n  WeakMapPrototypeSet(arrayIterators, safe, ArrayPrototypeSymbolIterator(array));\n  return safe;\n}\n\n/** @type {WeakMap<{}, Generator<any>>} */\nconst generators = new NativeWeakMap();\n\n/** @see https://tc39.es/ecma262/#sec-%arrayiteratorprototype%-object */\nconst DummyArrayIteratorPrototype = ObjectCreate(IteratorPrototype, {\n  next: {\n    value: function next() {\n      const generator = WeakMapPrototypeGet(generators, this);\n      return GeneratorPrototypeNext(generator);\n    },\n    writable: true,\n    configurable: true,\n  },\n});\n\nfor (const key of ReflectOwnKeys(ArrayIteratorPrototype)) {\n  // next method has already defined\n  if (key === \"next\") {\n    continue;\n  }\n\n  // Copy ArrayIteratorPrototype descriptors to DummyArrayIteratorPrototype\n  ObjectDefineProperty(DummyArrayIteratorPrototype, key, ReflectGetOwnPropertyDescriptor(ArrayIteratorPrototype, key));\n}\n\n/**\n * Wrap the Generator around the dummy ArrayIterator\n * @type {<T>(generator: Generator<T>) => IterableIterator<T>}\n */\nexport function wrap(generator) {\n  const dummy = ObjectCreate(DummyArrayIteratorPrototype);\n  WeakMapPrototypeSet(generators, dummy, generator);\n  return dummy;\n}\n","import {\n  EPSILON,\n  MathAbs,\n  NativeArrayBuffer,\n  NativeFloat32Array,\n  NativeUint16Array,\n  NativeUint32Array,\n  NativeUint8Array,\n  NumberIsFinite,\n  NumberIsNaN,\n} from \"./primordials.mjs\";\n\nconst INVERSE_OF_EPSILON = 1 / EPSILON;\n\n/**\n * rounds to the nearest value;\n * if the number falls midway, it is rounded to the nearest value with an even least significant digit\n * @param {number} num\n * @returns {number}\n */\nfunction roundTiesToEven(num) {\n  return (num + INVERSE_OF_EPSILON) - INVERSE_OF_EPSILON;\n}\n\nconst FLOAT16_MIN_VALUE = 6.103515625e-05;\nconst FLOAT16_MAX_VALUE = 65504;\nconst FLOAT16_EPSILON = 0.0009765625;\n\nconst FLOAT16_EPSILON_MULTIPLIED_BY_FLOAT16_MIN_VALUE = FLOAT16_EPSILON * FLOAT16_MIN_VALUE;\nconst FLOAT16_EPSILON_DEVIDED_BY_EPSILON = FLOAT16_EPSILON * INVERSE_OF_EPSILON;\n\n/**\n * round a number to a half float number\n * @param {unknown} num - double float\n * @returns {number} half float number\n */\nexport function roundToFloat16(num) {\n  const number = +num;\n\n  // NaN, Infinity, -Infinity, 0, -0\n  if (!NumberIsFinite(number) || number === 0) {\n    return number;\n  }\n\n  // finite except 0, -0\n  const sign = number > 0 ? 1 : -1;\n  const absolute = MathAbs(number);\n\n  // small number\n  if (absolute < FLOAT16_MIN_VALUE) {\n    return sign * roundTiesToEven(absolute / FLOAT16_EPSILON_MULTIPLIED_BY_FLOAT16_MIN_VALUE) * FLOAT16_EPSILON_MULTIPLIED_BY_FLOAT16_MIN_VALUE;\n  }\n\n  const temp = (1 + FLOAT16_EPSILON_DEVIDED_BY_EPSILON) * absolute;\n  const result = temp - (temp - absolute);\n\n  // large number\n  if (result > FLOAT16_MAX_VALUE || NumberIsNaN(result)) {\n    return sign * Infinity;\n  }\n\n  return sign * result;\n}\n\n// base algorithm: http://fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst buffer = new NativeArrayBuffer(4);\nconst floatView = new NativeFloat32Array(buffer);\nconst uint32View = new NativeUint32Array(buffer);\n\nconst baseTable = new NativeUint16Array(512);\nconst shiftTable = new NativeUint8Array(512);\n\nfor (let i = 0; i < 256; ++i) {\n  const e = i - 127;\n\n  // very small number (0, -0)\n  if (e < -24) {\n    baseTable[i]         = 0x0000;\n    baseTable[i | 0x100] = 0x8000;\n    shiftTable[i]         = 24;\n    shiftTable[i | 0x100] = 24;\n\n  // small number (denorm)\n  } else if (e < -14) {\n    baseTable[i]         =  0x0400 >> (-e - 14);\n    baseTable[i | 0x100] = (0x0400 >> (-e - 14)) | 0x8000;\n    shiftTable[i]         = -e - 1;\n    shiftTable[i | 0x100] = -e - 1;\n\n  // normal number\n  } else if (e <= 15) {\n    baseTable[i]         =  (e + 15) << 10;\n    baseTable[i | 0x100] = ((e + 15) << 10) | 0x8000;\n    shiftTable[i]         = 13;\n    shiftTable[i | 0x100] = 13;\n\n  // large number (Infinity, -Infinity)\n  } else if (e < 128) {\n    baseTable[i]         = 0x7c00;\n    baseTable[i | 0x100] = 0xfc00;\n    shiftTable[i]         = 24;\n    shiftTable[i | 0x100] = 24;\n\n  // stay (NaN, Infinity, -Infinity)\n  } else {\n    baseTable[i]         = 0x7c00;\n    baseTable[i | 0x100] = 0xfc00;\n    shiftTable[i]         = 13;\n    shiftTable[i | 0x100] = 13;\n  }\n}\n\n/**\n * round a number to a half float number bits\n * @param {unknown} num - double float\n * @returns {number} half float number bits\n */\nexport function roundToFloat16Bits(num) {\n  floatView[0] = roundToFloat16(num);\n  const f = uint32View[0];\n  const e = (f >> 23) & 0x1ff;\n  return baseTable[e] + ((f & 0x007fffff) >> shiftTable[e]);\n}\n\nconst mantissaTable = new NativeUint32Array(2048);\nfor (let i = 1; i < 1024; ++i) {\n  let m = i << 13; // zero pad mantissa bits\n  let e = 0; // zero exponent\n\n  // normalized\n  while ((m & 0x00800000) === 0) {\n    m <<= 1;\n    e -= 0x00800000; // decrement exponent\n  }\n\n  m &= ~0x00800000; // clear leading 1 bit\n  e += 0x38800000; // adjust bias\n\n  mantissaTable[i] = m | e;\n}\nfor (let i = 1024; i < 2048; ++i) {\n  mantissaTable[i] = 0x38000000 + ((i - 1024) << 13);\n}\n\nconst exponentTable = new NativeUint32Array(64);\nfor (let i = 1; i < 31; ++i) {\n  exponentTable[i] = i << 23;\n}\nexponentTable[31] = 0x47800000;\nexponentTable[32] = 0x80000000;\nfor (let i = 33; i < 63; ++i) {\n  exponentTable[i] = 0x80000000 + ((i - 32) << 23);\n}\nexponentTable[63] = 0xc7800000;\n\nconst offsetTable = new NativeUint16Array(64);\nfor (let i = 1; i < 64; ++i) {\n  if (i !== 32) {\n    offsetTable[i] = 1024;\n  }\n}\n\n/**\n * convert a half float number bits to a number\n * @param {number} float16bits - half float number bits\n * @returns {number} double float\n */\nexport function convertToNumber(float16bits) {\n  const i = float16bits >> 10;\n  uint32View[0] = mantissaTable[offsetTable[i] + (float16bits & 0x3ff)] + exponentTable[i];\n  return floatView[0];\n}\n","import { safeIfNeeded } from \"./_util/arrayIterator.mjs\";\nimport { convertToNumber, roundToFloat16Bits } from \"./_util/converter.mjs\";\nimport {\n  DataViewPrototypeGetUint16,\n  DataViewPrototypeSetUint16,\n} from \"./_util/primordials.mjs\";\n\n/**\n * returns an unsigned 16-bit float at the specified byte offset from the start of the DataView\n * @param {DataView} dataView\n * @param {number} byteOffset\n * @param {[boolean]} opts\n * @returns {number}\n */\nexport function getFloat16(dataView, byteOffset, ...opts) {\n  return convertToNumber(\n    DataViewPrototypeGetUint16(dataView, byteOffset, ...safeIfNeeded(opts))\n  );\n}\n\n/**\n * stores an unsigned 16-bit float value at the specified byte offset from the start of the DataView\n * @param {DataView} dataView\n * @param {number} byteOffset\n * @param {number} value\n * @param {[boolean]} opts\n */\nexport function setFloat16(dataView, byteOffset, value, ...opts) {\n  return DataViewPrototypeSetUint16(\n    dataView,\n    byteOffset,\n    roundToFloat16Bits(value),\n    ...safeIfNeeded(opts)\n  );\n}\n","function getAttribute(tag, attributeName, options) {\n  const debug = (options && options.debug) || false;\n  if (debug) console.log(\"[xml-utils] getting \" + attributeName + \" in \" + tag);\n\n  const xml = typeof tag === \"object\" ? tag.outer : tag;\n\n  // only search for attributes in the opening tag\n  const opening = xml.slice(0, xml.indexOf(\">\") + 1);\n\n  const quotechars = ['\"', \"'\"];\n  for (let i = 0; i < quotechars.length; i++) {\n    const char = quotechars[i];\n    const pattern = attributeName + \"\\\\=\" + char + \"([^\" + char + \"]*)\" + char;\n    if (debug) console.log(\"[xml-utils] pattern:\", pattern);\n\n    const re = new RegExp(pattern);\n    const match = re.exec(opening);\n    if (debug) console.log(\"[xml-utils] match:\", match);\n    if (match) return match[1];\n  }\n}\n\nmodule.exports = getAttribute;\nmodule.exports.default = getAttribute;\n","function indexOfMatch(xml, pattern, startIndex) {\n  const re = new RegExp(pattern);\n  const match = re.exec(xml.slice(startIndex));\n  if (match) return startIndex + match.index;\n  else return -1;\n}\n\nmodule.exports = indexOfMatch;\nmodule.exports.default = indexOfMatch;\n","function indexOfMatchEnd(xml, pattern, startIndex) {\n  const re = new RegExp(pattern);\n  const match = re.exec(xml.slice(startIndex));\n  if (match) return startIndex + match.index + match[0].length - 1;\n  else return -1;\n}\n\nmodule.exports = indexOfMatchEnd;\nmodule.exports.default = indexOfMatchEnd;\n","function countSubstring(string, substring) {\n  const pattern = new RegExp(substring, \"g\");\n  const match = string.match(pattern);\n  return match ? match.length : 0;\n}\n\nmodule.exports = countSubstring;\nmodule.exports.default = countSubstring;\n","const indexOfMatch = require(\"./index-of-match.js\");\nconst indexOfMatchEnd = require(\"./index-of-match-end.js\");\nconst countSubstring = require(\"./count-substring.js\");\n\nfunction findTagByName(xml, tagName, options) {\n  const debug = (options && options.debug) || false;\n  const nested = !(options && typeof options.nested === false);\n\n  const startIndex = (options && options.startIndex) || 0;\n\n  if (debug) console.log(\"[xml-utils] starting findTagByName with\", tagName, \" and \", options);\n\n  const start = indexOfMatch(xml, `\\<${tagName}[ \\n\\>\\/]`, startIndex);\n  if (debug) console.log(\"[xml-utils] start:\", start);\n  if (start === -1) return undefined;\n\n  const afterStart = xml.slice(start + tagName.length);\n\n  let relativeEnd = indexOfMatchEnd(afterStart, \"^[^<]*[ /]>\", 0);\n\n  const selfClosing = relativeEnd !== -1 && afterStart[relativeEnd - 1] === \"/\";\n  if (debug) console.log(\"[xml-utils] selfClosing:\", selfClosing);\n\n  if (selfClosing === false) {\n    // check if tag has subtags with the same name\n    if (nested) {\n      let startIndex = 0;\n      let openings = 1;\n      let closings = 0;\n      while ((relativeEnd = indexOfMatchEnd(afterStart, \"[ /]\" + tagName + \">\", startIndex)) !== -1) {\n        const clip = afterStart.substring(startIndex, relativeEnd + 1);\n        openings += countSubstring(clip, \"<\" + tagName + \"[ \\n\\t>]\");\n        closings += countSubstring(clip, \"</\" + tagName + \">\");\n        // we can't have more openings than closings\n        if (closings >= openings) break;\n        startIndex = relativeEnd;\n      }\n    } else {\n      relativeEnd = indexOfMatchEnd(afterStart, \"[ /]\" + tagName + \">\", 0);\n    }\n  }\n\n  const end = start + tagName.length + relativeEnd + 1;\n  if (debug) console.log(\"[xml-utils] end:\", end);\n  if (end === -1) return undefined;\n\n  const outer = xml.slice(start, end);\n  // tag is like <gml:identifier codeSpace=\"OGP\">urn:ogc:def:crs:EPSG::32617</gml:identifier>\n\n  let inner;\n  if (selfClosing) {\n    inner = null;\n  } else {\n    inner = outer.slice(outer.indexOf(\">\") + 1, outer.lastIndexOf(\"<\"));\n  }\n\n  return { inner, outer, start, end };\n}\n\nmodule.exports = findTagByName;\nmodule.exports.default = findTagByName;\n","const findTagByName = require(\"./find-tag-by-name.js\");\n\nfunction findTagsByName(xml, tagName, options) {\n  const tags = [];\n  const debug = (options && options.debug) || false;\n  const nested = options && typeof options.nested === \"boolean\" ? options.nested : true;\n  let startIndex = (options && options.startIndex) || 0;\n  let tag;\n  while ((tag = findTagByName(xml, tagName, { debug, startIndex }))) {\n    if (nested) {\n      startIndex = tag.start + 1 + tagName.length;\n    } else {\n      startIndex = tag.end;\n    }\n    tags.push(tag);\n  }\n  if (debug) console.log(\"findTagsByName found\", tags.length, \"tags\");\n  return tags;\n}\n\nmodule.exports = findTagsByName;\nmodule.exports.default = findTagsByName;\n","export const fieldTagNames = {\n  // TIFF Baseline\n  0x013B: 'Artist',\n  0x0102: 'BitsPerSample',\n  0x0109: 'CellLength',\n  0x0108: 'CellWidth',\n  0x0140: 'ColorMap',\n  0x0103: 'Compression',\n  0x8298: 'Copyright',\n  0x0132: 'DateTime',\n  0x0152: 'ExtraSamples',\n  0x010A: 'FillOrder',\n  0x0121: 'FreeByteCounts',\n  0x0120: 'FreeOffsets',\n  0x0123: 'GrayResponseCurve',\n  0x0122: 'GrayResponseUnit',\n  0x013C: 'HostComputer',\n  0x010E: 'ImageDescription',\n  0x0101: 'ImageLength',\n  0x0100: 'ImageWidth',\n  0x010F: 'Make',\n  0x0119: 'MaxSampleValue',\n  0x0118: 'MinSampleValue',\n  0x0110: 'Model',\n  0x00FE: 'NewSubfileType',\n  0x0112: 'Orientation',\n  0x0106: 'PhotometricInterpretation',\n  0x011C: 'PlanarConfiguration',\n  0x0128: 'ResolutionUnit',\n  0x0116: 'RowsPerStrip',\n  0x0115: 'SamplesPerPixel',\n  0x0131: 'Software',\n  0x0117: 'StripByteCounts',\n  0x0111: 'StripOffsets',\n  0x00FF: 'SubfileType',\n  0x0107: 'Threshholding',\n  0x011A: 'XResolution',\n  0x011B: 'YResolution',\n\n  // TIFF Extended\n  0x0146: 'BadFaxLines',\n  0x0147: 'CleanFaxData',\n  0x0157: 'ClipPath',\n  0x0148: 'ConsecutiveBadFaxLines',\n  0x01B1: 'Decode',\n  0x01B2: 'DefaultImageColor',\n  0x010D: 'DocumentName',\n  0x0150: 'DotRange',\n  0x0141: 'HalftoneHints',\n  0x015A: 'Indexed',\n  0x015B: 'JPEGTables',\n  0x011D: 'PageName',\n  0x0129: 'PageNumber',\n  0x013D: 'Predictor',\n  0x013F: 'PrimaryChromaticities',\n  0x0214: 'ReferenceBlackWhite',\n  0x0153: 'SampleFormat',\n  0x0154: 'SMinSampleValue',\n  0x0155: 'SMaxSampleValue',\n  0x022F: 'StripRowCounts',\n  0x014A: 'SubIFDs',\n  0x0124: 'T4Options',\n  0x0125: 'T6Options',\n  0x0145: 'TileByteCounts',\n  0x0143: 'TileLength',\n  0x0144: 'TileOffsets',\n  0x0142: 'TileWidth',\n  0x012D: 'TransferFunction',\n  0x013E: 'WhitePoint',\n  0x0158: 'XClipPathUnits',\n  0x011E: 'XPosition',\n  0x0211: 'YCbCrCoefficients',\n  0x0213: 'YCbCrPositioning',\n  0x0212: 'YCbCrSubSampling',\n  0x0159: 'YClipPathUnits',\n  0x011F: 'YPosition',\n\n  // EXIF\n  0x9202: 'ApertureValue',\n  0xA001: 'ColorSpace',\n  0x9004: 'DateTimeDigitized',\n  0x9003: 'DateTimeOriginal',\n  0x8769: 'Exif IFD',\n  0x9000: 'ExifVersion',\n  0x829A: 'ExposureTime',\n  0xA300: 'FileSource',\n  0x9209: 'Flash',\n  0xA000: 'FlashpixVersion',\n  0x829D: 'FNumber',\n  0xA420: 'ImageUniqueID',\n  0x9208: 'LightSource',\n  0x927C: 'MakerNote',\n  0x9201: 'ShutterSpeedValue',\n  0x9286: 'UserComment',\n\n  // IPTC\n  0x83BB: 'IPTC',\n\n  // ICC\n  0x8773: 'ICC Profile',\n\n  // XMP\n  0x02BC: 'XMP',\n\n  // GDAL\n  0xA480: 'GDAL_METADATA',\n  0xA481: 'GDAL_NODATA',\n\n  // Photoshop\n  0x8649: 'Photoshop',\n\n  // GeoTiff\n  0x830E: 'ModelPixelScale',\n  0x8482: 'ModelTiepoint',\n  0x85D8: 'ModelTransformation',\n  0x87AF: 'GeoKeyDirectory',\n  0x87B0: 'GeoDoubleParams',\n  0x87B1: 'GeoAsciiParams',\n\n  // LERC\n  0xC5F2: 'LercParameters',\n};\n\nexport const fieldTags = {};\nfor (const key in fieldTagNames) {\n  if (fieldTagNames.hasOwnProperty(key)) {\n    fieldTags[fieldTagNames[key]] = parseInt(key, 10);\n  }\n}\n\nexport const fieldTagTypes = {\n  256: 'SHORT',\n  257: 'SHORT',\n  258: 'SHORT',\n  259: 'SHORT',\n  262: 'SHORT',\n  273: 'LONG',\n  274: 'SHORT',\n  277: 'SHORT',\n  278: 'LONG',\n  279: 'LONG',\n  282: 'RATIONAL',\n  283: 'RATIONAL',\n  284: 'SHORT',\n  286: 'SHORT',\n  287: 'RATIONAL',\n  296: 'SHORT',\n  297: 'SHORT',\n  305: 'ASCII',\n  306: 'ASCII',\n  338: 'SHORT',\n  339: 'SHORT',\n  513: 'LONG',\n  514: 'LONG',\n  1024: 'SHORT',\n  1025: 'SHORT',\n  2048: 'SHORT',\n  2049: 'ASCII',\n  3072: 'SHORT',\n  3073: 'ASCII',\n  33550: 'DOUBLE',\n  33922: 'DOUBLE',\n  34264: 'DOUBLE',\n  34665: 'LONG',\n  34735: 'SHORT',\n  34736: 'DOUBLE',\n  34737: 'ASCII',\n  42113: 'ASCII',\n};\n\nexport const arrayFields = [\n  fieldTags.BitsPerSample,\n  fieldTags.ExtraSamples,\n  fieldTags.SampleFormat,\n  fieldTags.StripByteCounts,\n  fieldTags.StripOffsets,\n  fieldTags.StripRowCounts,\n  fieldTags.TileByteCounts,\n  fieldTags.TileOffsets,\n  fieldTags.SubIFDs,\n];\n\nexport const fieldTypeNames = {\n  0x0001: 'BYTE',\n  0x0002: 'ASCII',\n  0x0003: 'SHORT',\n  0x0004: 'LONG',\n  0x0005: 'RATIONAL',\n  0x0006: 'SBYTE',\n  0x0007: 'UNDEFINED',\n  0x0008: 'SSHORT',\n  0x0009: 'SLONG',\n  0x000A: 'SRATIONAL',\n  0x000B: 'FLOAT',\n  0x000C: 'DOUBLE',\n  // IFD offset, suggested by https://owl.phy.queensu.ca/~phil/exiftool/standards.html\n  0x000D: 'IFD',\n  // introduced by BigTIFF\n  0x0010: 'LONG8',\n  0x0011: 'SLONG8',\n  0x0012: 'IFD8',\n};\n\nexport const fieldTypes = {};\nfor (const key in fieldTypeNames) {\n  if (fieldTypeNames.hasOwnProperty(key)) {\n    fieldTypes[fieldTypeNames[key]] = parseInt(key, 10);\n  }\n}\n\nexport const photometricInterpretations = {\n  WhiteIsZero: 0,\n  BlackIsZero: 1,\n  RGB: 2,\n  Palette: 3,\n  TransparencyMask: 4,\n  CMYK: 5,\n  YCbCr: 6,\n\n  CIELab: 8,\n  ICCLab: 9,\n};\n\nexport const ExtraSamplesValues = {\n  Unspecified: 0,\n  Assocalpha: 1,\n  Unassalpha: 2,\n};\n\nexport const LercParameters = {\n  Version: 0,\n  AddCompression: 1,\n};\n\nexport const LercAddCompression = {\n  None: 0,\n  Deflate: 1,\n  Zstandard: 2,\n};\n\nexport const geoKeyNames = {\n  1024: 'GTModelTypeGeoKey',\n  1025: 'GTRasterTypeGeoKey',\n  1026: 'GTCitationGeoKey',\n  2048: 'GeographicTypeGeoKey',\n  2049: 'GeogCitationGeoKey',\n  2050: 'GeogGeodeticDatumGeoKey',\n  2051: 'GeogPrimeMeridianGeoKey',\n  2052: 'GeogLinearUnitsGeoKey',\n  2053: 'GeogLinearUnitSizeGeoKey',\n  2054: 'GeogAngularUnitsGeoKey',\n  2055: 'GeogAngularUnitSizeGeoKey',\n  2056: 'GeogEllipsoidGeoKey',\n  2057: 'GeogSemiMajorAxisGeoKey',\n  2058: 'GeogSemiMinorAxisGeoKey',\n  2059: 'GeogInvFlatteningGeoKey',\n  2060: 'GeogAzimuthUnitsGeoKey',\n  2061: 'GeogPrimeMeridianLongGeoKey',\n  2062: 'GeogTOWGS84GeoKey',\n  3072: 'ProjectedCSTypeGeoKey',\n  3073: 'PCSCitationGeoKey',\n  3074: 'ProjectionGeoKey',\n  3075: 'ProjCoordTransGeoKey',\n  3076: 'ProjLinearUnitsGeoKey',\n  3077: 'ProjLinearUnitSizeGeoKey',\n  3078: 'ProjStdParallel1GeoKey',\n  3079: 'ProjStdParallel2GeoKey',\n  3080: 'ProjNatOriginLongGeoKey',\n  3081: 'ProjNatOriginLatGeoKey',\n  3082: 'ProjFalseEastingGeoKey',\n  3083: 'ProjFalseNorthingGeoKey',\n  3084: 'ProjFalseOriginLongGeoKey',\n  3085: 'ProjFalseOriginLatGeoKey',\n  3086: 'ProjFalseOriginEastingGeoKey',\n  3087: 'ProjFalseOriginNorthingGeoKey',\n  3088: 'ProjCenterLongGeoKey',\n  3089: 'ProjCenterLatGeoKey',\n  3090: 'ProjCenterEastingGeoKey',\n  3091: 'ProjCenterNorthingGeoKey',\n  3092: 'ProjScaleAtNatOriginGeoKey',\n  3093: 'ProjScaleAtCenterGeoKey',\n  3094: 'ProjAzimuthAngleGeoKey',\n  3095: 'ProjStraightVertPoleLongGeoKey',\n  3096: 'ProjRectifiedGridAngleGeoKey',\n  4096: 'VerticalCSTypeGeoKey',\n  4097: 'VerticalCitationGeoKey',\n  4098: 'VerticalDatumGeoKey',\n  4099: 'VerticalUnitsGeoKey',\n};\n\nexport const geoKeys = {};\nfor (const key in geoKeyNames) {\n  if (geoKeyNames.hasOwnProperty(key)) {\n    geoKeys[geoKeyNames[key]] = parseInt(key, 10);\n  }\n}\n","export function fromWhiteIsZero(raster, max) {\n  const { width, height } = raster;\n  const rgbRaster = new Uint8Array(width * height * 3);\n  let value;\n  for (let i = 0, j = 0; i < raster.length; ++i, j += 3) {\n    value = 256 - (raster[i] / max * 256);\n    rgbRaster[j] = value;\n    rgbRaster[j + 1] = value;\n    rgbRaster[j + 2] = value;\n  }\n  return rgbRaster;\n}\n\nexport function fromBlackIsZero(raster, max) {\n  const { width, height } = raster;\n  const rgbRaster = new Uint8Array(width * height * 3);\n  let value;\n  for (let i = 0, j = 0; i < raster.length; ++i, j += 3) {\n    value = raster[i] / max * 256;\n    rgbRaster[j] = value;\n    rgbRaster[j + 1] = value;\n    rgbRaster[j + 2] = value;\n  }\n  return rgbRaster;\n}\n\nexport function fromPalette(raster, colorMap) {\n  const { width, height } = raster;\n  const rgbRaster = new Uint8Array(width * height * 3);\n  const greenOffset = colorMap.length / 3;\n  const blueOffset = colorMap.length / 3 * 2;\n  for (let i = 0, j = 0; i < raster.length; ++i, j += 3) {\n    const mapIndex = raster[i];\n    rgbRaster[j] = colorMap[mapIndex] / 65536 * 256;\n    rgbRaster[j + 1] = colorMap[mapIndex + greenOffset] / 65536 * 256;\n    rgbRaster[j + 2] = colorMap[mapIndex + blueOffset] / 65536 * 256;\n  }\n  return rgbRaster;\n}\n\nexport function fromCMYK(cmykRaster) {\n  const { width, height } = cmykRaster;\n  const rgbRaster = new Uint8Array(width * height * 3);\n  for (let i = 0, j = 0; i < cmykRaster.length; i += 4, j += 3) {\n    const c = cmykRaster[i];\n    const m = cmykRaster[i + 1];\n    const y = cmykRaster[i + 2];\n    const k = cmykRaster[i + 3];\n\n    rgbRaster[j] = 255 * ((255 - c) / 256) * ((255 - k) / 256);\n    rgbRaster[j + 1] = 255 * ((255 - m) / 256) * ((255 - k) / 256);\n    rgbRaster[j + 2] = 255 * ((255 - y) / 256) * ((255 - k) / 256);\n  }\n  return rgbRaster;\n}\n\nexport function fromYCbCr(yCbCrRaster) {\n  const { width, height } = yCbCrRaster;\n  const rgbRaster = new Uint8ClampedArray(width * height * 3);\n  for (let i = 0, j = 0; i < yCbCrRaster.length; i += 3, j += 3) {\n    const y = yCbCrRaster[i];\n    const cb = yCbCrRaster[i + 1];\n    const cr = yCbCrRaster[i + 2];\n\n    rgbRaster[j] = (y + (1.40200 * (cr - 0x80)));\n    rgbRaster[j + 1] = (y - (0.34414 * (cb - 0x80)) - (0.71414 * (cr - 0x80)));\n    rgbRaster[j + 2] = (y + (1.77200 * (cb - 0x80)));\n  }\n  return rgbRaster;\n}\n\nconst Xn = 0.95047;\nconst Yn = 1.00000;\nconst Zn = 1.08883;\n\n// from https://github.com/antimatter15/rgb-lab/blob/master/color.js\n\nexport function fromCIELab(cieLabRaster) {\n  const { width, height } = cieLabRaster;\n  const rgbRaster = new Uint8Array(width * height * 3);\n\n  for (let i = 0, j = 0; i < cieLabRaster.length; i += 3, j += 3) {\n    const L = cieLabRaster[i + 0];\n    const a_ = cieLabRaster[i + 1] << 24 >> 24; // conversion from uint8 to int8\n    const b_ = cieLabRaster[i + 2] << 24 >> 24; // same\n\n    let y = (L + 16) / 116;\n    let x = (a_ / 500) + y;\n    let z = y - (b_ / 200);\n    let r;\n    let g;\n    let b;\n\n    x = Xn * ((x * x * x > 0.008856) ? x * x * x : (x - (16 / 116)) / 7.787);\n    y = Yn * ((y * y * y > 0.008856) ? y * y * y : (y - (16 / 116)) / 7.787);\n    z = Zn * ((z * z * z > 0.008856) ? z * z * z : (z - (16 / 116)) / 7.787);\n\n    r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n    g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n    b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n    r = (r > 0.0031308) ? ((1.055 * (r ** (1 / 2.4))) - 0.055) : 12.92 * r;\n    g = (g > 0.0031308) ? ((1.055 * (g ** (1 / 2.4))) - 0.055) : 12.92 * g;\n    b = (b > 0.0031308) ? ((1.055 * (b ** (1 / 2.4))) - 0.055) : 12.92 * b;\n\n    rgbRaster[j] = Math.max(0, Math.min(1, r)) * 255;\n    rgbRaster[j + 1] = Math.max(0, Math.min(1, g)) * 255;\n    rgbRaster[j + 2] = Math.max(0, Math.min(1, b)) * 255;\n  }\n  return rgbRaster;\n}\n","const registry = new Map();\n\nexport function addDecoder(cases, importFn) {\n  if (!Array.isArray(cases)) {\n    cases = [cases]; // eslint-disable-line no-param-reassign\n  }\n  cases.forEach((c) => registry.set(c, importFn));\n}\n\nexport async function getDecoder(fileDirectory) {\n  const importFn = registry.get(fileDirectory.Compression);\n  if (!importFn) {\n    throw new Error(`Unknown compression method identifier: ${fileDirectory.Compression}`);\n  }\n  const Decoder = await importFn();\n  return new Decoder(fileDirectory);\n}\n\n// Add default decoders to registry (end-user may override with other implementations)\naddDecoder([undefined, 1], () => import('./raw.js').then((m) => m.default));\naddDecoder(5, () => import('./lzw.js').then((m) => m.default));\naddDecoder(6, () => {\n  throw new Error('old style JPEG compression is not supported.');\n});\naddDecoder(7, () => import('./jpeg.js').then((m) => m.default));\naddDecoder([8, 32946], () => import('./deflate.js').then((m) => m.default));\naddDecoder(32773, () => import('./packbits.js').then((m) => m.default));\naddDecoder(34887, () => import('./lerc.js')\n  .then(async (m) => {\n    await m.zstd.init();\n    return m;\n  })\n  .then((m) => m.default),\n);\naddDecoder(50001, () => import('./webimage.js').then((m) => m.default));\n","/**\n * @module resample\n */\n\nfunction copyNewSize(array, width, height, samplesPerPixel = 1) {\n  return new (Object.getPrototypeOf(array).constructor)(width * height * samplesPerPixel);\n}\n\n/**\n * Resample the input arrays using nearest neighbor value selection.\n * @param {TypedArray[]} valueArrays The input arrays to resample\n * @param {number} inWidth The width of the input rasters\n * @param {number} inHeight The height of the input rasters\n * @param {number} outWidth The desired width of the output rasters\n * @param {number} outHeight The desired height of the output rasters\n * @returns {TypedArray[]} The resampled rasters\n */\nexport function resampleNearest(valueArrays, inWidth, inHeight, outWidth, outHeight) {\n  const relX = inWidth / outWidth;\n  const relY = inHeight / outHeight;\n  return valueArrays.map((array) => {\n    const newArray = copyNewSize(array, outWidth, outHeight);\n    for (let y = 0; y < outHeight; ++y) {\n      const cy = Math.min(Math.round(relY * y), inHeight - 1);\n      for (let x = 0; x < outWidth; ++x) {\n        const cx = Math.min(Math.round(relX * x), inWidth - 1);\n        const value = array[(cy * inWidth) + cx];\n        newArray[(y * outWidth) + x] = value;\n      }\n    }\n    return newArray;\n  });\n}\n\n// simple linear interpolation, code from:\n// https://en.wikipedia.org/wiki/Linear_interpolation#Programming_language_support\nfunction lerp(v0, v1, t) {\n  return ((1 - t) * v0) + (t * v1);\n}\n\n/**\n * Resample the input arrays using bilinear interpolation.\n * @param {TypedArray[]} valueArrays The input arrays to resample\n * @param {number} inWidth The width of the input rasters\n * @param {number} inHeight The height of the input rasters\n * @param {number} outWidth The desired width of the output rasters\n * @param {number} outHeight The desired height of the output rasters\n * @returns {TypedArray[]} The resampled rasters\n */\nexport function resampleBilinear(valueArrays, inWidth, inHeight, outWidth, outHeight) {\n  const relX = inWidth / outWidth;\n  const relY = inHeight / outHeight;\n\n  return valueArrays.map((array) => {\n    const newArray = copyNewSize(array, outWidth, outHeight);\n    for (let y = 0; y < outHeight; ++y) {\n      const rawY = relY * y;\n\n      const yl = Math.floor(rawY);\n      const yh = Math.min(Math.ceil(rawY), (inHeight - 1));\n\n      for (let x = 0; x < outWidth; ++x) {\n        const rawX = relX * x;\n        const tx = rawX % 1;\n\n        const xl = Math.floor(rawX);\n        const xh = Math.min(Math.ceil(rawX), (inWidth - 1));\n\n        const ll = array[(yl * inWidth) + xl];\n        const hl = array[(yl * inWidth) + xh];\n        const lh = array[(yh * inWidth) + xl];\n        const hh = array[(yh * inWidth) + xh];\n\n        const value = lerp(\n          lerp(ll, hl, tx),\n          lerp(lh, hh, tx),\n          rawY % 1,\n        );\n        newArray[(y * outWidth) + x] = value;\n      }\n    }\n    return newArray;\n  });\n}\n\n/**\n * Resample the input arrays using the selected resampling method.\n * @param {TypedArray[]} valueArrays The input arrays to resample\n * @param {number} inWidth The width of the input rasters\n * @param {number} inHeight The height of the input rasters\n * @param {number} outWidth The desired width of the output rasters\n * @param {number} outHeight The desired height of the output rasters\n * @param {string} [method = 'nearest'] The desired resampling method\n * @returns {TypedArray[]} The resampled rasters\n */\nexport function resample(valueArrays, inWidth, inHeight, outWidth, outHeight, method = 'nearest') {\n  switch (method.toLowerCase()) {\n    case 'nearest':\n      return resampleNearest(valueArrays, inWidth, inHeight, outWidth, outHeight);\n    case 'bilinear':\n    case 'linear':\n      return resampleBilinear(valueArrays, inWidth, inHeight, outWidth, outHeight);\n    default:\n      throw new Error(`Unsupported resampling method: '${method}'`);\n  }\n}\n\n/**\n * Resample the pixel interleaved input array using nearest neighbor value selection.\n * @param {TypedArray} valueArrays The input arrays to resample\n * @param {number} inWidth The width of the input rasters\n * @param {number} inHeight The height of the input rasters\n * @param {number} outWidth The desired width of the output rasters\n * @param {number} outHeight The desired height of the output rasters\n * @param {number} samples The number of samples per pixel for pixel\n *                         interleaved data\n * @returns {TypedArray} The resampled raster\n */\nexport function resampleNearestInterleaved(\n  valueArray, inWidth, inHeight, outWidth, outHeight, samples) {\n  const relX = inWidth / outWidth;\n  const relY = inHeight / outHeight;\n\n  const newArray = copyNewSize(valueArray, outWidth, outHeight, samples);\n  for (let y = 0; y < outHeight; ++y) {\n    const cy = Math.min(Math.round(relY * y), inHeight - 1);\n    for (let x = 0; x < outWidth; ++x) {\n      const cx = Math.min(Math.round(relX * x), inWidth - 1);\n      for (let i = 0; i < samples; ++i) {\n        const value = valueArray[(cy * inWidth * samples) + (cx * samples) + i];\n        newArray[(y * outWidth * samples) + (x * samples) + i] = value;\n      }\n    }\n  }\n  return newArray;\n}\n\n/**\n * Resample the pixel interleaved input array using bilinear interpolation.\n * @param {TypedArray} valueArrays The input arrays to resample\n * @param {number} inWidth The width of the input rasters\n * @param {number} inHeight The height of the input rasters\n * @param {number} outWidth The desired width of the output rasters\n * @param {number} outHeight The desired height of the output rasters\n * @param {number} samples The number of samples per pixel for pixel\n *                         interleaved data\n * @returns {TypedArray} The resampled raster\n */\nexport function resampleBilinearInterleaved(\n  valueArray, inWidth, inHeight, outWidth, outHeight, samples) {\n  const relX = inWidth / outWidth;\n  const relY = inHeight / outHeight;\n  const newArray = copyNewSize(valueArray, outWidth, outHeight, samples);\n  for (let y = 0; y < outHeight; ++y) {\n    const rawY = relY * y;\n\n    const yl = Math.floor(rawY);\n    const yh = Math.min(Math.ceil(rawY), (inHeight - 1));\n\n    for (let x = 0; x < outWidth; ++x) {\n      const rawX = relX * x;\n      const tx = rawX % 1;\n\n      const xl = Math.floor(rawX);\n      const xh = Math.min(Math.ceil(rawX), (inWidth - 1));\n\n      for (let i = 0; i < samples; ++i) {\n        const ll = valueArray[(yl * inWidth * samples) + (xl * samples) + i];\n        const hl = valueArray[(yl * inWidth * samples) + (xh * samples) + i];\n        const lh = valueArray[(yh * inWidth * samples) + (xl * samples) + i];\n        const hh = valueArray[(yh * inWidth * samples) + (xh * samples) + i];\n\n        const value = lerp(\n          lerp(ll, hl, tx),\n          lerp(lh, hh, tx),\n          rawY % 1,\n        );\n        newArray[(y * outWidth * samples) + (x * samples) + i] = value;\n      }\n    }\n  }\n  return newArray;\n}\n\n/**\n * Resample the pixel interleaved input array using the selected resampling method.\n * @param {TypedArray} valueArray The input array to resample\n * @param {number} inWidth The width of the input rasters\n * @param {number} inHeight The height of the input rasters\n * @param {number} outWidth The desired width of the output rasters\n * @param {number} outHeight The desired height of the output rasters\n * @param {number} samples The number of samples per pixel for pixel\n *                                 interleaved data\n * @param {string} [method = 'nearest'] The desired resampling method\n * @returns {TypedArray} The resampled rasters\n */\nexport function resampleInterleaved(valueArray, inWidth, inHeight, outWidth, outHeight, samples, method = 'nearest') {\n  switch (method.toLowerCase()) {\n    case 'nearest':\n      return resampleNearestInterleaved(\n        valueArray, inWidth, inHeight, outWidth, outHeight, samples,\n      );\n    case 'bilinear':\n    case 'linear':\n      return resampleBilinearInterleaved(\n        valueArray, inWidth, inHeight, outWidth, outHeight, samples,\n      );\n    default:\n      throw new Error(`Unsupported resampling method: '${method}'`);\n  }\n}\n","/** @module geotiffimage */\nimport { getFloat16 } from '@petamoriken/float16';\nimport getAttribute from 'xml-utils/get-attribute.js';\nimport findTagsByName from 'xml-utils/find-tags-by-name.js';\n\nimport { photometricInterpretations, ExtraSamplesValues } from './globals.js';\nimport { fromWhiteIsZero, fromBlackIsZero, fromPalette, fromCMYK, fromYCbCr, fromCIELab } from './rgb.js';\nimport { getDecoder } from './compression/index.js';\nimport { resample, resampleInterleaved } from './resample.js';\n\n/**\n * @typedef {Object} ReadRasterOptions\n * @property {Array<number>} [window=whole window] the subset to read data from in pixels.\n * @property {Array<number>} [bbox=whole image] the subset to read data from in\n *                                           geographical coordinates.\n * @property {Array<number>} [samples=all samples] the selection of samples to read from. Default is all samples.\n * @property {boolean} [interleave=false] whether the data shall be read\n *                                             in one single array or separate\n *                                             arrays.\n * @property {Pool} [pool=null] The optional decoder pool to use.\n * @property {number} [width] The desired width of the output. When the width is not the\n *                                 same as the images, resampling will be performed.\n * @property {number} [height] The desired height of the output. When the width is not the\n *                                  same as the images, resampling will be performed.\n * @property {string} [resampleMethod='nearest'] The desired resampling method.\n * @property {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                                       to be aborted\n * @property {number|number[]} [fillValue] The value to use for parts of the image\n *                                              outside of the images extent. When multiple\n *                                              samples are requested, an array of fill values\n *                                              can be passed.\n */\n\n/** @typedef {import(\"./geotiff.js\").TypedArray} TypedArray */\n/** @typedef {import(\"./geotiff.js\").ReadRasterResult} ReadRasterResult */\n\nfunction sum(array, start, end) {\n  let s = 0;\n  for (let i = start; i < end; ++i) {\n    s += array[i];\n  }\n  return s;\n}\n\nfunction arrayForType(format, bitsPerSample, size) {\n  switch (format) {\n    case 1: // unsigned integer data\n      if (bitsPerSample <= 8) {\n        return new Uint8Array(size);\n      } else if (bitsPerSample <= 16) {\n        return new Uint16Array(size);\n      } else if (bitsPerSample <= 32) {\n        return new Uint32Array(size);\n      }\n      break;\n    case 2: // twos complement signed integer data\n      if (bitsPerSample === 8) {\n        return new Int8Array(size);\n      } else if (bitsPerSample === 16) {\n        return new Int16Array(size);\n      } else if (bitsPerSample === 32) {\n        return new Int32Array(size);\n      }\n      break;\n    case 3: // floating point data\n      switch (bitsPerSample) {\n        case 16:\n        case 32:\n          return new Float32Array(size);\n        case 64:\n          return new Float64Array(size);\n        default:\n          break;\n      }\n      break;\n    default:\n      break;\n  }\n  throw Error('Unsupported data format/bitsPerSample');\n}\n\nfunction needsNormalization(format, bitsPerSample) {\n  if ((format === 1 || format === 2) && bitsPerSample <= 32 && bitsPerSample % 8 === 0) {\n    return false;\n  } else if (format === 3 && (bitsPerSample === 16 || bitsPerSample === 32 || bitsPerSample === 64)) {\n    return false;\n  }\n  return true;\n}\n\nfunction normalizeArray(inBuffer, format, planarConfiguration, samplesPerPixel, bitsPerSample, tileWidth, tileHeight) {\n  // const inByteArray = new Uint8Array(inBuffer);\n  const view = new DataView(inBuffer);\n  const outSize = planarConfiguration === 2\n    ? tileHeight * tileWidth\n    : tileHeight * tileWidth * samplesPerPixel;\n  const samplesToTransfer = planarConfiguration === 2\n    ? 1 : samplesPerPixel;\n  const outArray = arrayForType(format, bitsPerSample, outSize);\n  // let pixel = 0;\n\n  const bitMask = parseInt('1'.repeat(bitsPerSample), 2);\n\n  if (format === 1) { // unsigned integer\n    // translation of https://github.com/OSGeo/gdal/blob/master/gdal/frmts/gtiff/geotiff.cpp#L7337\n    let pixelBitSkip;\n    // let sampleBitOffset = 0;\n    if (planarConfiguration === 1) {\n      pixelBitSkip = samplesPerPixel * bitsPerSample;\n      // sampleBitOffset = (samplesPerPixel - 1) * bitsPerSample;\n    } else {\n      pixelBitSkip = bitsPerSample;\n    }\n\n    // Bits per line rounds up to next byte boundary.\n    let bitsPerLine = tileWidth * pixelBitSkip;\n    if ((bitsPerLine & 7) !== 0) {\n      bitsPerLine = (bitsPerLine + 7) & (~7);\n    }\n\n    for (let y = 0; y < tileHeight; ++y) {\n      const lineBitOffset = y * bitsPerLine;\n      for (let x = 0; x < tileWidth; ++x) {\n        const pixelBitOffset = lineBitOffset + (x * samplesToTransfer * bitsPerSample);\n        for (let i = 0; i < samplesToTransfer; ++i) {\n          const bitOffset = pixelBitOffset + (i * bitsPerSample);\n          const outIndex = (((y * tileWidth) + x) * samplesToTransfer) + i;\n\n          const byteOffset = Math.floor(bitOffset / 8);\n          const innerBitOffset = bitOffset % 8;\n          if (innerBitOffset + bitsPerSample <= 8) {\n            outArray[outIndex] = (view.getUint8(byteOffset) >> (8 - bitsPerSample) - innerBitOffset) & bitMask;\n          } else if (innerBitOffset + bitsPerSample <= 16) {\n            outArray[outIndex] = (view.getUint16(byteOffset) >> (16 - bitsPerSample) - innerBitOffset) & bitMask;\n          } else if (innerBitOffset + bitsPerSample <= 24) {\n            const raw = (view.getUint16(byteOffset) << 8) | (view.getUint8(byteOffset + 2));\n            outArray[outIndex] = (raw >> (24 - bitsPerSample) - innerBitOffset) & bitMask;\n          } else {\n            outArray[outIndex] = (view.getUint32(byteOffset) >> (32 - bitsPerSample) - innerBitOffset) & bitMask;\n          }\n\n          // let outWord = 0;\n          // for (let bit = 0; bit < bitsPerSample; ++bit) {\n          //   if (inByteArray[bitOffset >> 3]\n          //     & (0x80 >> (bitOffset & 7))) {\n          //     outWord |= (1 << (bitsPerSample - 1 - bit));\n          //   }\n          //   ++bitOffset;\n          // }\n\n          // outArray[outIndex] = outWord;\n          // outArray[pixel] = outWord;\n          // pixel += 1;\n        }\n        // bitOffset = bitOffset + pixelBitSkip - bitsPerSample;\n      }\n    }\n  } else if (format === 3) { // floating point\n    // Float16 is handled elsewhere\n    // normalize 16/24 bit floats to 32 bit floats in the array\n    // console.time();\n    // if (bitsPerSample === 16) {\n    //   for (let byte = 0, outIndex = 0; byte < inBuffer.byteLength; byte += 2, ++outIndex) {\n    //     outArray[outIndex] = getFloat16(view, byte);\n    //   }\n    // }\n    // console.timeEnd()\n  }\n\n  return outArray.buffer;\n}\n\n/**\n * GeoTIFF sub-file image.\n */\nclass GeoTIFFImage {\n  /**\n   * @constructor\n   * @param {Object} fileDirectory The parsed file directory\n   * @param {Object} geoKeys The parsed geo-keys\n   * @param {DataView} dataView The DataView for the underlying file.\n   * @param {Boolean} littleEndian Whether the file is encoded in little or big endian\n   * @param {Boolean} cache Whether or not decoded tiles shall be cached\n   * @param {import('./source/basesource').BaseSource} source The datasource to read from\n   */\n  constructor(fileDirectory, geoKeys, dataView, littleEndian, cache, source) {\n    this.fileDirectory = fileDirectory;\n    this.geoKeys = geoKeys;\n    this.dataView = dataView;\n    this.littleEndian = littleEndian;\n    this.tiles = cache ? {} : null;\n    this.isTiled = !fileDirectory.StripOffsets;\n    const planarConfiguration = fileDirectory.PlanarConfiguration;\n    this.planarConfiguration = (typeof planarConfiguration === 'undefined') ? 1 : planarConfiguration;\n    if (this.planarConfiguration !== 1 && this.planarConfiguration !== 2) {\n      throw new Error('Invalid planar configuration.');\n    }\n\n    this.source = source;\n  }\n\n  /**\n   * Returns the associated parsed file directory.\n   * @returns {Object} the parsed file directory\n   */\n  getFileDirectory() {\n    return this.fileDirectory;\n  }\n\n  /**\n   * Returns the associated parsed geo keys.\n   * @returns {Object} the parsed geo keys\n   */\n  getGeoKeys() {\n    return this.geoKeys;\n  }\n\n  /**\n   * Returns the width of the image.\n   * @returns {Number} the width of the image\n   */\n  getWidth() {\n    return this.fileDirectory.ImageWidth;\n  }\n\n  /**\n   * Returns the height of the image.\n   * @returns {Number} the height of the image\n   */\n  getHeight() {\n    return this.fileDirectory.ImageLength;\n  }\n\n  /**\n   * Returns the number of samples per pixel.\n   * @returns {Number} the number of samples per pixel\n   */\n  getSamplesPerPixel() {\n    return typeof this.fileDirectory.SamplesPerPixel !== 'undefined'\n      ? this.fileDirectory.SamplesPerPixel : 1;\n  }\n\n  /**\n   * Returns the width of each tile.\n   * @returns {Number} the width of each tile\n   */\n  getTileWidth() {\n    return this.isTiled ? this.fileDirectory.TileWidth : this.getWidth();\n  }\n\n  /**\n   * Returns the height of each tile.\n   * @returns {Number} the height of each tile\n   */\n  getTileHeight() {\n    if (this.isTiled) {\n      return this.fileDirectory.TileLength;\n    }\n    if (typeof this.fileDirectory.RowsPerStrip !== 'undefined') {\n      return Math.min(this.fileDirectory.RowsPerStrip, this.getHeight());\n    }\n    return this.getHeight();\n  }\n\n  getBlockWidth() {\n    return this.getTileWidth();\n  }\n\n  getBlockHeight(y) {\n    if (this.isTiled || (y + 1) * this.getTileHeight() <= this.getHeight()) {\n      return this.getTileHeight();\n    } else {\n      return this.getHeight() - (y * this.getTileHeight());\n    }\n  }\n\n  /**\n   * Calculates the number of bytes for each pixel across all samples. Only full\n   * bytes are supported, an exception is thrown when this is not the case.\n   * @returns {Number} the bytes per pixel\n   */\n  getBytesPerPixel() {\n    let bytes = 0;\n    for (let i = 0; i < this.fileDirectory.BitsPerSample.length; ++i) {\n      bytes += this.getSampleByteSize(i);\n    }\n    return bytes;\n  }\n\n  getSampleByteSize(i) {\n    if (i >= this.fileDirectory.BitsPerSample.length) {\n      throw new RangeError(`Sample index ${i} is out of range.`);\n    }\n    return Math.ceil(this.fileDirectory.BitsPerSample[i] / 8);\n  }\n\n  getReaderForSample(sampleIndex) {\n    const format = this.fileDirectory.SampleFormat\n      ? this.fileDirectory.SampleFormat[sampleIndex] : 1;\n    const bitsPerSample = this.fileDirectory.BitsPerSample[sampleIndex];\n    switch (format) {\n      case 1: // unsigned integer data\n        if (bitsPerSample <= 8) {\n          return DataView.prototype.getUint8;\n        } else if (bitsPerSample <= 16) {\n          return DataView.prototype.getUint16;\n        } else if (bitsPerSample <= 32) {\n          return DataView.prototype.getUint32;\n        }\n        break;\n      case 2: // twos complement signed integer data\n        if (bitsPerSample <= 8) {\n          return DataView.prototype.getInt8;\n        } else if (bitsPerSample <= 16) {\n          return DataView.prototype.getInt16;\n        } else if (bitsPerSample <= 32) {\n          return DataView.prototype.getInt32;\n        }\n        break;\n      case 3:\n        switch (bitsPerSample) {\n          case 16:\n            return function (offset, littleEndian) {\n              return getFloat16(this, offset, littleEndian);\n            };\n          case 32:\n            return DataView.prototype.getFloat32;\n          case 64:\n            return DataView.prototype.getFloat64;\n          default:\n            break;\n        }\n        break;\n      default:\n        break;\n    }\n    throw Error('Unsupported data format/bitsPerSample');\n  }\n\n  getSampleFormat(sampleIndex = 0) {\n    return this.fileDirectory.SampleFormat\n      ? this.fileDirectory.SampleFormat[sampleIndex] : 1;\n  }\n\n  getBitsPerSample(sampleIndex = 0) {\n    return this.fileDirectory.BitsPerSample[sampleIndex];\n  }\n\n  getArrayForSample(sampleIndex, size) {\n    const format = this.getSampleFormat(sampleIndex);\n    const bitsPerSample = this.getBitsPerSample(sampleIndex);\n    return arrayForType(format, bitsPerSample, size);\n  }\n\n  /**\n   * Returns the decoded strip or tile.\n   * @param {Number} x the strip or tile x-offset\n   * @param {Number} y the tile y-offset (0 for stripped images)\n   * @param {Number} sample the sample to get for separated samples\n   * @param {import(\"./geotiff\").Pool|import(\"./geotiff\").BaseDecoder} poolOrDecoder the decoder or decoder pool\n   * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n   *                               to be aborted\n   * @returns {Promise.<ArrayBuffer>}\n   */\n  async getTileOrStrip(x, y, sample, poolOrDecoder, signal) {\n    const numTilesPerRow = Math.ceil(this.getWidth() / this.getTileWidth());\n    const numTilesPerCol = Math.ceil(this.getHeight() / this.getTileHeight());\n    let index;\n    const { tiles } = this;\n    if (this.planarConfiguration === 1) {\n      index = (y * numTilesPerRow) + x;\n    } else if (this.planarConfiguration === 2) {\n      index = (sample * numTilesPerRow * numTilesPerCol) + (y * numTilesPerRow) + x;\n    }\n\n    let offset;\n    let byteCount;\n    if (this.isTiled) {\n      offset = this.fileDirectory.TileOffsets[index];\n      byteCount = this.fileDirectory.TileByteCounts[index];\n    } else {\n      offset = this.fileDirectory.StripOffsets[index];\n      byteCount = this.fileDirectory.StripByteCounts[index];\n    }\n    const slice = (await this.source.fetch([{ offset, length: byteCount }], signal))[0];\n\n    let request;\n    if (tiles === null || !tiles[index]) {\n    // resolve each request by potentially applying array normalization\n      request = (async () => {\n        let data = await poolOrDecoder.decode(this.fileDirectory, slice);\n        const sampleFormat = this.getSampleFormat();\n        const bitsPerSample = this.getBitsPerSample();\n        if (needsNormalization(sampleFormat, bitsPerSample)) {\n          data = normalizeArray(\n            data,\n            sampleFormat,\n            this.planarConfiguration,\n            this.getSamplesPerPixel(),\n            bitsPerSample,\n            this.getTileWidth(),\n            this.getBlockHeight(y),\n          );\n        }\n        return data;\n      })();\n\n      // set the cache\n      if (tiles !== null) {\n        tiles[index] = request;\n      }\n    } else {\n      // get from the cache\n      request = tiles[index];\n    }\n\n    // cache the tile request\n    return { x, y, sample, data: await request };\n  }\n\n  /**\n   * Internal read function.\n   * @private\n   * @param {Array} imageWindow The image window in pixel coordinates\n   * @param {Array} samples The selected samples (0-based indices)\n   * @param {TypedArray|TypedArray[]} valueArrays The array(s) to write into\n   * @param {Boolean} interleave Whether or not to write in an interleaved manner\n   * @param {import(\"./geotiff\").Pool|AbstractDecoder} poolOrDecoder the decoder or decoder pool\n   * @param {number} width the width of window to be read into\n   * @param {number} height the height of window to be read into\n   * @param {number} resampleMethod the resampling method to be used when interpolating\n   * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n   *                               to be aborted\n   * @returns {Promise<ReadRasterResult>}\n   */\n  async _readRaster(imageWindow, samples, valueArrays, interleave, poolOrDecoder, width,\n    height, resampleMethod, signal) {\n    const tileWidth = this.getTileWidth();\n    const tileHeight = this.getTileHeight();\n    const imageWidth = this.getWidth();\n    const imageHeight = this.getHeight();\n\n    const minXTile = Math.max(Math.floor(imageWindow[0] / tileWidth), 0);\n    const maxXTile = Math.min(\n      Math.ceil(imageWindow[2] / tileWidth),\n      Math.ceil(imageWidth / tileWidth),\n    );\n    const minYTile = Math.max(Math.floor(imageWindow[1] / tileHeight), 0);\n    const maxYTile = Math.min(\n      Math.ceil(imageWindow[3] / tileHeight),\n      Math.ceil(imageHeight / tileHeight),\n    );\n    const windowWidth = imageWindow[2] - imageWindow[0];\n\n    let bytesPerPixel = this.getBytesPerPixel();\n\n    const srcSampleOffsets = [];\n    const sampleReaders = [];\n    for (let i = 0; i < samples.length; ++i) {\n      if (this.planarConfiguration === 1) {\n        srcSampleOffsets.push(sum(this.fileDirectory.BitsPerSample, 0, samples[i]) / 8);\n      } else {\n        srcSampleOffsets.push(0);\n      }\n      sampleReaders.push(this.getReaderForSample(samples[i]));\n    }\n\n    const promises = [];\n    const { littleEndian } = this;\n\n    for (let yTile = minYTile; yTile < maxYTile; ++yTile) {\n      for (let xTile = minXTile; xTile < maxXTile; ++xTile) {\n        let getPromise;\n        if (this.planarConfiguration === 1) {\n          getPromise = this.getTileOrStrip(xTile, yTile, 0, poolOrDecoder, signal);\n        }\n        for (let sampleIndex = 0; sampleIndex < samples.length; ++sampleIndex) {\n          const si = sampleIndex;\n          const sample = samples[sampleIndex];\n          if (this.planarConfiguration === 2) {\n            bytesPerPixel = this.getSampleByteSize(sample);\n            getPromise = this.getTileOrStrip(xTile, yTile, sample, poolOrDecoder, signal);\n          }\n          const promise = getPromise.then((tile) => {\n            const buffer = tile.data;\n            const dataView = new DataView(buffer);\n            const blockHeight = this.getBlockHeight(tile.y);\n            const firstLine = tile.y * tileHeight;\n            const firstCol = tile.x * tileWidth;\n            const lastLine = firstLine + blockHeight;\n            const lastCol = (tile.x + 1) * tileWidth;\n            const reader = sampleReaders[si];\n\n            const ymax = Math.min(blockHeight, blockHeight - (lastLine - imageWindow[3]), imageHeight - firstLine);\n            const xmax = Math.min(tileWidth, tileWidth - (lastCol - imageWindow[2]), imageWidth - firstCol);\n\n            for (let y = Math.max(0, imageWindow[1] - firstLine); y < ymax; ++y) {\n              for (let x = Math.max(0, imageWindow[0] - firstCol); x < xmax; ++x) {\n                const pixelOffset = ((y * tileWidth) + x) * bytesPerPixel;\n                const value = reader.call(\n                  dataView, pixelOffset + srcSampleOffsets[si], littleEndian,\n                );\n                let windowCoordinate;\n                if (interleave) {\n                  windowCoordinate = ((y + firstLine - imageWindow[1]) * windowWidth * samples.length)\n                    + ((x + firstCol - imageWindow[0]) * samples.length)\n                    + si;\n                  valueArrays[windowCoordinate] = value;\n                } else {\n                  windowCoordinate = (\n                    (y + firstLine - imageWindow[1]) * windowWidth\n                  ) + x + firstCol - imageWindow[0];\n                  valueArrays[si][windowCoordinate] = value;\n                }\n              }\n            }\n          });\n          promises.push(promise);\n        }\n      }\n    }\n    await Promise.all(promises);\n\n    if ((width && (imageWindow[2] - imageWindow[0]) !== width)\n        || (height && (imageWindow[3] - imageWindow[1]) !== height)) {\n      let resampled;\n      if (interleave) {\n        resampled = resampleInterleaved(\n          valueArrays,\n          imageWindow[2] - imageWindow[0],\n          imageWindow[3] - imageWindow[1],\n          width, height,\n          samples.length,\n          resampleMethod,\n        );\n      } else {\n        resampled = resample(\n          valueArrays,\n          imageWindow[2] - imageWindow[0],\n          imageWindow[3] - imageWindow[1],\n          width, height,\n          resampleMethod,\n        );\n      }\n      resampled.width = width;\n      resampled.height = height;\n      return resampled;\n    }\n\n    valueArrays.width = width || imageWindow[2] - imageWindow[0];\n    valueArrays.height = height || imageWindow[3] - imageWindow[1];\n\n    return valueArrays;\n  }\n\n  /**\n   * Reads raster data from the image. This function reads all selected samples\n   * into separate arrays of the correct type for that sample or into a single\n   * combined array when `interleave` is set. When provided, only a subset\n   * of the raster is read for each sample.\n   *\n   * @param {ReadRasterOptions} [options={}] optional parameters\n   * @returns {Promise<ReadRasterResult>} the decoded arrays as a promise\n   */\n  async readRasters({\n    window: wnd, samples = [], interleave, pool = null,\n    width, height, resampleMethod, fillValue, signal,\n  } = {}) {\n    const imageWindow = wnd || [0, 0, this.getWidth(), this.getHeight()];\n\n    // check parameters\n    if (imageWindow[0] > imageWindow[2] || imageWindow[1] > imageWindow[3]) {\n      throw new Error('Invalid subsets');\n    }\n\n    const imageWindowWidth = imageWindow[2] - imageWindow[0];\n    const imageWindowHeight = imageWindow[3] - imageWindow[1];\n    const numPixels = imageWindowWidth * imageWindowHeight;\n    const samplesPerPixel = this.getSamplesPerPixel();\n\n    if (!samples || !samples.length) {\n      for (let i = 0; i < samplesPerPixel; ++i) {\n        samples.push(i);\n      }\n    } else {\n      for (let i = 0; i < samples.length; ++i) {\n        if (samples[i] >= samplesPerPixel) {\n          return Promise.reject(new RangeError(`Invalid sample index '${samples[i]}'.`));\n        }\n      }\n    }\n    let valueArrays;\n    if (interleave) {\n      const format = this.fileDirectory.SampleFormat\n        ? Math.max.apply(null, this.fileDirectory.SampleFormat) : 1;\n      const bitsPerSample = Math.max.apply(null, this.fileDirectory.BitsPerSample);\n      valueArrays = arrayForType(format, bitsPerSample, numPixels * samples.length);\n      if (fillValue) {\n        valueArrays.fill(fillValue);\n      }\n    } else {\n      valueArrays = [];\n      for (let i = 0; i < samples.length; ++i) {\n        const valueArray = this.getArrayForSample(samples[i], numPixels);\n        if (Array.isArray(fillValue) && i < fillValue.length) {\n          valueArray.fill(fillValue[i]);\n        } else if (fillValue && !Array.isArray(fillValue)) {\n          valueArray.fill(fillValue);\n        }\n        valueArrays.push(valueArray);\n      }\n    }\n\n    const poolOrDecoder = pool || await getDecoder(this.fileDirectory);\n\n    const result = await this._readRaster(\n      imageWindow, samples, valueArrays, interleave, poolOrDecoder, width, height, resampleMethod, signal,\n    );\n    return result;\n  }\n\n  /**\n   * Reads raster data from the image as RGB. The result is always an\n   * interleaved typed array.\n   * Colorspaces other than RGB will be transformed to RGB, color maps expanded.\n   * When no other method is applicable, the first sample is used to produce a\n   * grayscale image.\n   * When provided, only a subset of the raster is read for each sample.\n   *\n   * @param {Object} [options] optional parameters\n   * @param {Array<number>} [options.window] the subset to read data from in pixels.\n   * @param {boolean} [options.interleave=true] whether the data shall be read\n   *                                             in one single array or separate\n   *                                             arrays.\n   * @param {import(\"./geotiff\").Pool} [options.pool=null] The optional decoder pool to use.\n   * @param {number} [options.width] The desired width of the output. When the width is no the\n   *                                 same as the images, resampling will be performed.\n   * @param {number} [options.height] The desired height of the output. When the width is no the\n   *                                  same as the images, resampling will be performed.\n   * @param {string} [options.resampleMethod='nearest'] The desired resampling method.\n   * @param {boolean} [options.enableAlpha=false] Enable reading alpha channel if present.\n   * @param {AbortSignal} [options.signal] An AbortSignal that may be signalled if the request is\n   *                                       to be aborted\n   * @returns {Promise<ReadRasterResult>} the RGB array as a Promise\n   */\n  async readRGB({ window, interleave = true, pool = null, width, height,\n    resampleMethod, enableAlpha = false, signal } = {}) {\n    const imageWindow = window || [0, 0, this.getWidth(), this.getHeight()];\n\n    // check parameters\n    if (imageWindow[0] > imageWindow[2] || imageWindow[1] > imageWindow[3]) {\n      throw new Error('Invalid subsets');\n    }\n\n    const pi = this.fileDirectory.PhotometricInterpretation;\n\n    if (pi === photometricInterpretations.RGB) {\n      let s = [0, 1, 2];\n      if ((!(this.fileDirectory.ExtraSamples === ExtraSamplesValues.Unspecified)) && enableAlpha) {\n        s = [];\n        for (let i = 0; i < this.fileDirectory.BitsPerSample.length; i += 1) {\n          s.push(i);\n        }\n      }\n      return this.readRasters({\n        window,\n        interleave,\n        samples: s,\n        pool,\n        width,\n        height,\n        resampleMethod,\n        signal,\n      });\n    }\n\n    let samples;\n    switch (pi) {\n      case photometricInterpretations.WhiteIsZero:\n      case photometricInterpretations.BlackIsZero:\n      case photometricInterpretations.Palette:\n        samples = [0];\n        break;\n      case photometricInterpretations.CMYK:\n        samples = [0, 1, 2, 3];\n        break;\n      case photometricInterpretations.YCbCr:\n      case photometricInterpretations.CIELab:\n        samples = [0, 1, 2];\n        break;\n      default:\n        throw new Error('Invalid or unsupported photometric interpretation.');\n    }\n\n    const subOptions = {\n      window: imageWindow,\n      interleave: true,\n      samples,\n      pool,\n      width,\n      height,\n      resampleMethod,\n      signal,\n    };\n    const { fileDirectory } = this;\n    const raster = await this.readRasters(subOptions);\n\n    const max = 2 ** this.fileDirectory.BitsPerSample[0];\n    let data;\n    switch (pi) {\n      case photometricInterpretations.WhiteIsZero:\n        data = fromWhiteIsZero(raster, max);\n        break;\n      case photometricInterpretations.BlackIsZero:\n        data = fromBlackIsZero(raster, max);\n        break;\n      case photometricInterpretations.Palette:\n        data = fromPalette(raster, fileDirectory.ColorMap);\n        break;\n      case photometricInterpretations.CMYK:\n        data = fromCMYK(raster);\n        break;\n      case photometricInterpretations.YCbCr:\n        data = fromYCbCr(raster);\n        break;\n      case photometricInterpretations.CIELab:\n        data = fromCIELab(raster);\n        break;\n      default:\n        throw new Error('Unsupported photometric interpretation.');\n    }\n\n    // if non-interleaved data is requested, we must split the channels\n    // into their respective arrays\n    if (!interleave) {\n      const red = new Uint8Array(data.length / 3);\n      const green = new Uint8Array(data.length / 3);\n      const blue = new Uint8Array(data.length / 3);\n      for (let i = 0, j = 0; i < data.length; i += 3, ++j) {\n        red[j] = data[i];\n        green[j] = data[i + 1];\n        blue[j] = data[i + 2];\n      }\n      data = [red, green, blue];\n    }\n\n    data.width = raster.width;\n    data.height = raster.height;\n    return data;\n  }\n\n  /**\n   * Returns an array of tiepoints.\n   * @returns {Object[]}\n   */\n  getTiePoints() {\n    if (!this.fileDirectory.ModelTiepoint) {\n      return [];\n    }\n\n    const tiePoints = [];\n    for (let i = 0; i < this.fileDirectory.ModelTiepoint.length; i += 6) {\n      tiePoints.push({\n        i: this.fileDirectory.ModelTiepoint[i],\n        j: this.fileDirectory.ModelTiepoint[i + 1],\n        k: this.fileDirectory.ModelTiepoint[i + 2],\n        x: this.fileDirectory.ModelTiepoint[i + 3],\n        y: this.fileDirectory.ModelTiepoint[i + 4],\n        z: this.fileDirectory.ModelTiepoint[i + 5],\n      });\n    }\n    return tiePoints;\n  }\n\n  /**\n   * Returns the parsed GDAL metadata items.\n   *\n   * If sample is passed to null, dataset-level metadata will be returned.\n   * Otherwise only metadata specific to the provided sample will be returned.\n   *\n   * @param {number} [sample=null] The sample index.\n   * @returns {Object}\n   */\n  getGDALMetadata(sample = null) {\n    const metadata = {};\n    if (!this.fileDirectory.GDAL_METADATA) {\n      return null;\n    }\n    const string = this.fileDirectory.GDAL_METADATA;\n\n    let items = findTagsByName(string, 'Item');\n\n    if (sample === null) {\n      items = items.filter((item) => getAttribute(item, 'sample') === undefined);\n    } else {\n      items = items.filter((item) => Number(getAttribute(item, 'sample')) === sample);\n    }\n\n    for (let i = 0; i < items.length; ++i) {\n      const item = items[i];\n      metadata[getAttribute(item, 'name')] = item.inner;\n    }\n    return metadata;\n  }\n\n  /**\n   * Returns the GDAL nodata value\n   * @returns {number|null}\n   */\n  getGDALNoData() {\n    if (!this.fileDirectory.GDAL_NODATA) {\n      return null;\n    }\n    const string = this.fileDirectory.GDAL_NODATA;\n    return Number(string.substring(0, string.length - 1));\n  }\n\n  /**\n   * Returns the image origin as a XYZ-vector. When the image has no affine\n   * transformation, then an exception is thrown.\n   * @returns {Array<number>} The origin as a vector\n   */\n  getOrigin() {\n    const tiePoints = this.fileDirectory.ModelTiepoint;\n    const modelTransformation = this.fileDirectory.ModelTransformation;\n    if (tiePoints && tiePoints.length === 6) {\n      return [\n        tiePoints[3],\n        tiePoints[4],\n        tiePoints[5],\n      ];\n    }\n    if (modelTransformation) {\n      return [\n        modelTransformation[3],\n        modelTransformation[7],\n        modelTransformation[11],\n      ];\n    }\n    throw new Error('The image does not have an affine transformation.');\n  }\n\n  /**\n   * Returns the image resolution as a XYZ-vector. When the image has no affine\n   * transformation, then an exception is thrown.\n   * @param {GeoTIFFImage} [referenceImage=null] A reference image to calculate the resolution from\n   *                                             in cases when the current image does not have the\n   *                                             required tags on its own.\n   * @returns {Array<number>} The resolution as a vector\n   */\n  getResolution(referenceImage = null) {\n    const modelPixelScale = this.fileDirectory.ModelPixelScale;\n    const modelTransformation = this.fileDirectory.ModelTransformation;\n\n    if (modelPixelScale) {\n      return [\n        modelPixelScale[0],\n        -modelPixelScale[1],\n        modelPixelScale[2],\n      ];\n    }\n    if (modelTransformation) {\n      if (modelTransformation[1] === 0 && modelTransformation[4] === 0) {\n        return [\n          modelTransformation[0],\n          -modelTransformation[5],\n          modelTransformation[10],\n        ];\n      }\n      return [\n        Math.sqrt((modelTransformation[0] * modelTransformation[0])\n          + (modelTransformation[4] * modelTransformation[4])),\n        -Math.sqrt((modelTransformation[1] * modelTransformation[1])\n          + (modelTransformation[5] * modelTransformation[5])),\n        modelTransformation[10]];\n    }\n\n    if (referenceImage) {\n      const [refResX, refResY, refResZ] = referenceImage.getResolution();\n      return [\n        refResX * referenceImage.getWidth() / this.getWidth(),\n        refResY * referenceImage.getHeight() / this.getHeight(),\n        refResZ * referenceImage.getWidth() / this.getWidth(),\n      ];\n    }\n\n    throw new Error('The image does not have an affine transformation.');\n  }\n\n  /**\n   * Returns whether or not the pixels of the image depict an area (or point).\n   * @returns {Boolean} Whether the pixels are a point\n   */\n  pixelIsArea() {\n    return this.geoKeys.GTRasterTypeGeoKey === 1;\n  }\n\n  /**\n   * Returns the image bounding box as an array of 4 values: min-x, min-y,\n   * max-x and max-y. When the image has no affine transformation, then an\n   * exception is thrown.\n   * @param {boolean} [tilegrid=false] If true return extent for a tilegrid\n   *                                   without adjustment for ModelTransformation.\n   * @returns {Array<number>} The bounding box\n   */\n  getBoundingBox(tilegrid = false) {\n    const height = this.getHeight();\n    const width = this.getWidth();\n\n    if (this.fileDirectory.ModelTransformation && !tilegrid) {\n      // eslint-disable-next-line no-unused-vars\n      const [a, b, c, d, e, f, g, h] = this.fileDirectory.ModelTransformation;\n\n      const corners = [\n        [0, 0],\n        [0, height],\n        [width, 0],\n        [width, height],\n      ];\n\n      const projected = corners.map(([I, J]) => [\n        d + (a * I) + (b * J),\n        h + (e * I) + (f * J),\n      ]);\n\n      const xs = projected.map((pt) => pt[0]);\n      const ys = projected.map((pt) => pt[1]);\n\n      return [\n        Math.min(...xs),\n        Math.min(...ys),\n        Math.max(...xs),\n        Math.max(...ys),\n      ];\n    } else {\n      const origin = this.getOrigin();\n      const resolution = this.getResolution();\n\n      const x1 = origin[0];\n      const y1 = origin[1];\n\n      const x2 = x1 + (resolution[0] * width);\n      const y2 = y1 + (resolution[1] * height);\n\n      return [\n        Math.min(x1, x2),\n        Math.min(y1, y2),\n        Math.max(x1, x2),\n        Math.max(y1, y2),\n      ];\n    }\n  }\n}\n\nexport default GeoTIFFImage;\n","import { getFloat16 } from '@petamoriken/float16';\n\nexport default class DataView64 {\n  constructor(arrayBuffer) {\n    this._dataView = new DataView(arrayBuffer);\n  }\n\n  get buffer() {\n    return this._dataView.buffer;\n  }\n\n  getUint64(offset, littleEndian) {\n    const left = this.getUint32(offset, littleEndian);\n    const right = this.getUint32(offset + 4, littleEndian);\n    let combined;\n    if (littleEndian) {\n      combined = left + ((2 ** 32) * right);\n      if (!Number.isSafeInteger(combined)) {\n        throw new Error(\n          `${combined} exceeds MAX_SAFE_INTEGER. `\n          + 'Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues',\n        );\n      }\n      return combined;\n    }\n    combined = ((2 ** 32) * left) + right;\n    if (!Number.isSafeInteger(combined)) {\n      throw new Error(\n        `${combined} exceeds MAX_SAFE_INTEGER. `\n        + 'Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues',\n      );\n    }\n\n    return combined;\n  }\n\n  // adapted from https://stackoverflow.com/a/55338384/8060591\n  getInt64(offset, littleEndian) {\n    let value = 0;\n    const isNegative = (this._dataView.getUint8(offset + (littleEndian ? 7 : 0)) & 0x80) > 0;\n    let carrying = true;\n    for (let i = 0; i < 8; i++) {\n      let byte = this._dataView.getUint8(offset + (littleEndian ? i : 7 - i));\n      if (isNegative) {\n        if (carrying) {\n          if (byte !== 0x00) {\n            byte = ~(byte - 1) & 0xff;\n            carrying = false;\n          }\n        } else {\n          byte = ~byte & 0xff;\n        }\n      }\n      value += byte * (256 ** i);\n    }\n    if (isNegative) {\n      value = -value;\n    }\n    return value;\n  }\n\n  getUint8(offset, littleEndian) {\n    return this._dataView.getUint8(offset, littleEndian);\n  }\n\n  getInt8(offset, littleEndian) {\n    return this._dataView.getInt8(offset, littleEndian);\n  }\n\n  getUint16(offset, littleEndian) {\n    return this._dataView.getUint16(offset, littleEndian);\n  }\n\n  getInt16(offset, littleEndian) {\n    return this._dataView.getInt16(offset, littleEndian);\n  }\n\n  getUint32(offset, littleEndian) {\n    return this._dataView.getUint32(offset, littleEndian);\n  }\n\n  getInt32(offset, littleEndian) {\n    return this._dataView.getInt32(offset, littleEndian);\n  }\n\n  getFloat16(offset, littleEndian) {\n    return getFloat16(this._dataView, offset, littleEndian);\n  }\n\n  getFloat32(offset, littleEndian) {\n    return this._dataView.getFloat32(offset, littleEndian);\n  }\n\n  getFloat64(offset, littleEndian) {\n    return this._dataView.getFloat64(offset, littleEndian);\n  }\n}\n","export default class DataSlice {\n  constructor(arrayBuffer, sliceOffset, littleEndian, bigTiff) {\n    this._dataView = new DataView(arrayBuffer);\n    this._sliceOffset = sliceOffset;\n    this._littleEndian = littleEndian;\n    this._bigTiff = bigTiff;\n  }\n\n  get sliceOffset() {\n    return this._sliceOffset;\n  }\n\n  get sliceTop() {\n    return this._sliceOffset + this.buffer.byteLength;\n  }\n\n  get littleEndian() {\n    return this._littleEndian;\n  }\n\n  get bigTiff() {\n    return this._bigTiff;\n  }\n\n  get buffer() {\n    return this._dataView.buffer;\n  }\n\n  covers(offset, length) {\n    return this.sliceOffset <= offset && this.sliceTop >= offset + length;\n  }\n\n  readUint8(offset) {\n    return this._dataView.getUint8(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readInt8(offset) {\n    return this._dataView.getInt8(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readUint16(offset) {\n    return this._dataView.getUint16(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readInt16(offset) {\n    return this._dataView.getInt16(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readUint32(offset) {\n    return this._dataView.getUint32(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readInt32(offset) {\n    return this._dataView.getInt32(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readFloat32(offset) {\n    return this._dataView.getFloat32(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readFloat64(offset) {\n    return this._dataView.getFloat64(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readUint64(offset) {\n    const left = this.readUint32(offset);\n    const right = this.readUint32(offset + 4);\n    let combined;\n    if (this._littleEndian) {\n      combined = left + ((2 ** 32) * right);\n      if (!Number.isSafeInteger(combined)) {\n        throw new Error(\n          `${combined} exceeds MAX_SAFE_INTEGER. `\n          + 'Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues',\n        );\n      }\n      return combined;\n    }\n    combined = ((2 ** 32) * left) + right;\n    if (!Number.isSafeInteger(combined)) {\n      throw new Error(\n        `${combined} exceeds MAX_SAFE_INTEGER. `\n        + 'Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues',\n      );\n    }\n\n    return combined;\n  }\n\n  // adapted from https://stackoverflow.com/a/55338384/8060591\n  readInt64(offset) {\n    let value = 0;\n    const isNegative = (this._dataView.getUint8(offset + (this._littleEndian ? 7 : 0)) & 0x80)\n      > 0;\n    let carrying = true;\n    for (let i = 0; i < 8; i++) {\n      let byte = this._dataView.getUint8(\n        offset + (this._littleEndian ? i : 7 - i),\n      );\n      if (isNegative) {\n        if (carrying) {\n          if (byte !== 0x00) {\n            byte = ~(byte - 1) & 0xff;\n            carrying = false;\n          }\n        } else {\n          byte = ~byte & 0xff;\n        }\n      }\n      value += byte * (256 ** i);\n    }\n    if (isNegative) {\n      value = -value;\n    }\n    return value;\n  }\n\n  readOffset(offset) {\n    if (this._bigTiff) {\n      return this.readUint64(offset);\n    }\n    return this.readUint32(offset);\n  }\n}\n","import { getDecoder } from './compression/index.js';\n\nconst defaultPoolSize = typeof navigator !== 'undefined' ? (navigator.hardwareConcurrency || 2) : 2;\n\n/**\n * @module pool\n */\n\n/**\n * Pool for workers to decode chunks of the images.\n */\nclass Pool {\n  /**\n   * @constructor\n   * @param {Number} [size] The size of the pool. Defaults to the number of CPUs\n   *                      available. When this parameter is `null` or 0, then the\n   *                      decoding will be done in the main thread.\n   * @param {function(): Worker} [createWorker] A function that creates the decoder worker.\n   * Defaults to a worker with all decoders that ship with geotiff.js. The `createWorker()`\n   * function is expected to return a `Worker` compatible with Web Workers. For code that\n   * runs in Node, [web-worker](https://www.npmjs.com/package/web-worker) is a good choice.\n   *\n   * A worker that uses a custom lzw decoder would look like this `my-custom-worker.js` file:\n   * ```js\n   * import { addDecoder, getDecoder } from 'geotiff';\n   * addDecoder(5, () => import ('./my-custom-lzw').then((m) => m.default));\n   * self.addEventListener('message', async (e) => {\n   *   const { id, fileDirectory, buffer } = e.data;\n   *   const decoder = await getDecoder(fileDirectory);\n   *   const decoded = await decoder.decode(fileDirectory, buffer);\n   *   self.postMessage({ decoded, id }, [decoded]);\n   * });\n   * ```\n   * The way the above code is built into a worker by the `createWorker()` function\n   * depends on the used bundler. For most bundlers, something like this will work:\n   * ```js\n   * function createWorker() {\n   *   return new Worker(new URL('./my-custom-worker.js', import.meta.url));\n   * }\n   * ```\n   */\n  constructor(size = defaultPoolSize, createWorker) {\n    this.workers = null;\n    this._awaitingDecoder = null;\n    this.size = size;\n    this.messageId = 0;\n    if (size) {\n      this._awaitingDecoder = createWorker ? Promise.resolve(createWorker) : new Promise((resolve) => {\n        import('./worker/decoder.js').then((module) => {\n          resolve(module.create);\n        });\n      });\n      this._awaitingDecoder.then((create) => {\n        this._awaitingDecoder = null;\n        this.workers = [];\n        for (let i = 0; i < size; i++) {\n          this.workers.push({ worker: create(), idle: true });\n        }\n      });\n    }\n  }\n\n  /**\n   * Decode the given block of bytes with the set compression method.\n   * @param {ArrayBuffer} buffer the array buffer of bytes to decode.\n   * @returns {Promise<ArrayBuffer>} the decoded result as a `Promise`\n   */\n  async decode(fileDirectory, buffer) {\n    if (this._awaitingDecoder) {\n      await this._awaitingDecoder;\n    }\n    return this.size === 0\n      ? getDecoder(fileDirectory).then((decoder) => decoder.decode(fileDirectory, buffer))\n      : new Promise((resolve) => {\n        const worker = this.workers.find((candidate) => candidate.idle)\n          || this.workers[Math.floor(Math.random() * this.size)];\n        worker.idle = false;\n        const id = this.messageId++;\n        const onMessage = (e) => {\n          if (e.data.id === id) {\n            worker.idle = true;\n            resolve(e.data.decoded);\n            worker.worker.removeEventListener('message', onMessage);\n          }\n        };\n        worker.worker.addEventListener('message', onMessage);\n        worker.worker.postMessage({ fileDirectory, buffer, id }, [buffer]);\n      });\n  }\n\n  destroy() {\n    if (this.workers) {\n      this.workers.forEach((worker) => {\n        worker.worker.terminate();\n      });\n      this.workers = null;\n    }\n  }\n}\n\nexport default Pool;\n","const CRLFCRLF = '\\r\\n\\r\\n';\n\n/*\n * Shim for 'Object.fromEntries'\n */\nfunction itemsToObject(items) {\n  if (typeof Object.fromEntries !== 'undefined') {\n    return Object.fromEntries(items);\n  }\n  const obj = {};\n  for (const [key, value] of items) {\n    obj[key.toLowerCase()] = value;\n  }\n  return obj;\n}\n\n/**\n * Parse HTTP headers from a given string.\n * @param {String} text the text to parse the headers from\n * @returns {Object} the parsed headers with lowercase keys\n */\nfunction parseHeaders(text) {\n  const items = text\n    .split('\\r\\n')\n    .map((line) => {\n      const kv = line.split(':').map((str) => str.trim());\n      kv[0] = kv[0].toLowerCase();\n      return kv;\n    });\n\n  return itemsToObject(items);\n}\n\n/**\n * Parse a 'Content-Type' header value to the content-type and parameters\n * @param {String} rawContentType the raw string to parse from\n * @returns {Object} the parsed content type with the fields: type and params\n */\nexport function parseContentType(rawContentType) {\n  const [type, ...rawParams] = rawContentType.split(';').map((s) => s.trim());\n  const paramsItems = rawParams.map((param) => param.split('='));\n  return { type, params: itemsToObject(paramsItems) };\n}\n\n/**\n * Parse a 'Content-Range' header value to its start, end, and total parts\n * @param {String} rawContentRange the raw string to parse from\n * @returns {Object} the parsed parts\n */\nexport function parseContentRange(rawContentRange) {\n  let start;\n  let end;\n  let total;\n\n  if (rawContentRange) {\n    [, start, end, total] = rawContentRange.match(/bytes (\\d+)-(\\d+)\\/(\\d+)/);\n    start = parseInt(start, 10);\n    end = parseInt(end, 10);\n    total = parseInt(total, 10);\n  }\n\n  return { start, end, total };\n}\n\n/**\n * Parses a list of byteranges from the given 'multipart/byteranges' HTTP response.\n * Each item in the list has the following properties:\n * - headers: the HTTP headers\n * - data: the sliced ArrayBuffer for that specific part\n * - offset: the offset of the byterange within its originating file\n * - length: the length of the byterange\n * @param {ArrayBuffer} responseArrayBuffer the response to be parsed and split\n * @param {String} boundary the boundary string used to split the sections\n * @returns {Object[]} the parsed byteranges\n */\nexport function parseByteRanges(responseArrayBuffer, boundary) {\n  let offset = null;\n  const decoder = new TextDecoder('ascii');\n  const out = [];\n\n  const startBoundary = `--${boundary}`;\n  const endBoundary = `${startBoundary}--`;\n\n  // search for the initial boundary, may be offset by some bytes\n  // TODO: more efficient to check for `--` in bytes directly\n  for (let i = 0; i < 10; ++i) {\n    const text = decoder.decode(\n      new Uint8Array(responseArrayBuffer, i, startBoundary.length),\n    );\n    if (text === startBoundary) {\n      offset = i;\n    }\n  }\n\n  if (offset === null) {\n    throw new Error('Could not find initial boundary');\n  }\n\n  while (offset < responseArrayBuffer.byteLength) {\n    const text = decoder.decode(\n      new Uint8Array(responseArrayBuffer, offset,\n        Math.min(startBoundary.length + 1024, responseArrayBuffer.byteLength - offset),\n      ),\n    );\n\n    // break if we arrived at the end\n    if (text.length === 0 || text.startsWith(endBoundary)) {\n      break;\n    }\n\n    // assert that we are actually dealing with a byterange and are at the correct offset\n    if (!text.startsWith(startBoundary)) {\n      throw new Error('Part does not start with boundary');\n    }\n\n    // get a substring from where we read the headers\n    const innerText = text.substr(startBoundary.length + 2);\n\n    if (innerText.length === 0) {\n      break;\n    }\n\n    // find the double linebreak that denotes the end of the headers\n    const endOfHeaders = innerText.indexOf(CRLFCRLF);\n\n    // parse the headers to get the content range size\n    const headers = parseHeaders(innerText.substr(0, endOfHeaders));\n    const { start, end, total } = parseContentRange(headers['content-range']);\n\n    // calculate the length of the slice and the next offset\n    const startOfData = offset + startBoundary.length + endOfHeaders + CRLFCRLF.length;\n    const length = parseInt(end, 10) + 1 - parseInt(start, 10);\n    out.push({\n      headers,\n      data: responseArrayBuffer.slice(startOfData, startOfData + length),\n      offset: start,\n      length,\n      fileSize: total,\n    });\n\n    offset = startOfData + length + 4;\n  }\n\n  return out;\n}\n","/**\n * @typedef Slice\n * @property {number} offset\n * @property {number} length\n */\n\nexport class BaseSource {\n  /**\n   *\n   * @param {Slice[]} slices\n   * @returns {ArrayBuffer[]}\n   */\n  async fetch(slices, signal = undefined) {\n    return Promise.all(\n      slices.map((slice) => this.fetchSlice(slice, signal)),\n    );\n  }\n\n  /**\n   *\n   * @param {Slice} slice\n   * @returns {ArrayBuffer}\n   */\n  async fetchSlice(slice) {\n    throw new Error(`fetching of slice ${slice} not possible, not implemented`);\n  }\n\n  /**\n   * Returns the filesize if already determined and null otherwise\n   */\n  get fileSize() {\n    return null;\n  }\n\n  async close() {\n    // no-op by default\n  }\n}\n","export default class QuickLRU extends Map {\n\tconstructor(options = {}) {\n\t\tsuper();\n\n\t\tif (!(options.maxSize && options.maxSize > 0)) {\n\t\t\tthrow new TypeError('`maxSize` must be a number greater than 0');\n\t\t}\n\n\t\tif (typeof options.maxAge === 'number' && options.maxAge === 0) {\n\t\t\tthrow new TypeError('`maxAge` must be a number greater than 0');\n\t\t}\n\n\t\t// TODO: Use private class fields when ESLint supports them.\n\t\tthis.maxSize = options.maxSize;\n\t\tthis.maxAge = options.maxAge || Number.POSITIVE_INFINITY;\n\t\tthis.onEviction = options.onEviction;\n\t\tthis.cache = new Map();\n\t\tthis.oldCache = new Map();\n\t\tthis._size = 0;\n\t}\n\n\t// TODO: Use private class methods when targeting Node.js 16.\n\t_emitEvictions(cache) {\n\t\tif (typeof this.onEviction !== 'function') {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const [key, item] of cache) {\n\t\t\tthis.onEviction(key, item.value);\n\t\t}\n\t}\n\n\t_deleteIfExpired(key, item) {\n\t\tif (typeof item.expiry === 'number' && item.expiry <= Date.now()) {\n\t\t\tif (typeof this.onEviction === 'function') {\n\t\t\t\tthis.onEviction(key, item.value);\n\t\t\t}\n\n\t\t\treturn this.delete(key);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t_getOrDeleteIfExpired(key, item) {\n\t\tconst deleted = this._deleteIfExpired(key, item);\n\t\tif (deleted === false) {\n\t\t\treturn item.value;\n\t\t}\n\t}\n\n\t_getItemValue(key, item) {\n\t\treturn item.expiry ? this._getOrDeleteIfExpired(key, item) : item.value;\n\t}\n\n\t_peek(key, cache) {\n\t\tconst item = cache.get(key);\n\n\t\treturn this._getItemValue(key, item);\n\t}\n\n\t_set(key, value) {\n\t\tthis.cache.set(key, value);\n\t\tthis._size++;\n\n\t\tif (this._size >= this.maxSize) {\n\t\t\tthis._size = 0;\n\t\t\tthis._emitEvictions(this.oldCache);\n\t\t\tthis.oldCache = this.cache;\n\t\t\tthis.cache = new Map();\n\t\t}\n\t}\n\n\t_moveToRecent(key, item) {\n\t\tthis.oldCache.delete(key);\n\t\tthis._set(key, item);\n\t}\n\n\t* _entriesAscending() {\n\t\tfor (const item of this.oldCache) {\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield item;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const item of this.cache) {\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield item;\n\t\t\t}\n\t\t}\n\t}\n\n\tget(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\tconst item = this.cache.get(key);\n\n\t\t\treturn this._getItemValue(key, item);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\tconst item = this.oldCache.get(key);\n\t\t\tif (this._deleteIfExpired(key, item) === false) {\n\t\t\t\tthis._moveToRecent(key, item);\n\t\t\t\treturn item.value;\n\t\t\t}\n\t\t}\n\t}\n\n\tset(key, value, {maxAge = this.maxAge} = {}) {\n\t\tconst expiry =\n\t\t\ttypeof maxAge === 'number' && maxAge !== Number.POSITIVE_INFINITY ?\n\t\t\t\tDate.now() + maxAge :\n\t\t\t\tundefined;\n\t\tif (this.cache.has(key)) {\n\t\t\tthis.cache.set(key, {\n\t\t\t\tvalue,\n\t\t\t\texpiry\n\t\t\t});\n\t\t} else {\n\t\t\tthis._set(key, {value, expiry});\n\t\t}\n\n\t\treturn this;\n\t}\n\n\thas(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn !this._deleteIfExpired(key, this.cache.get(key));\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\treturn !this._deleteIfExpired(key, this.oldCache.get(key));\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpeek(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn this._peek(key, this.cache);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\treturn this._peek(key, this.oldCache);\n\t\t}\n\t}\n\n\tdelete(key) {\n\t\tconst deleted = this.cache.delete(key);\n\t\tif (deleted) {\n\t\t\tthis._size--;\n\t\t}\n\n\t\treturn this.oldCache.delete(key) || deleted;\n\t}\n\n\tclear() {\n\t\tthis.cache.clear();\n\t\tthis.oldCache.clear();\n\t\tthis._size = 0;\n\t}\n\n\tresize(newSize) {\n\t\tif (!(newSize && newSize > 0)) {\n\t\t\tthrow new TypeError('`maxSize` must be a number greater than 0');\n\t\t}\n\n\t\tconst items = [...this._entriesAscending()];\n\t\tconst removeCount = items.length - newSize;\n\t\tif (removeCount < 0) {\n\t\t\tthis.cache = new Map(items);\n\t\t\tthis.oldCache = new Map();\n\t\t\tthis._size = items.length;\n\t\t} else {\n\t\t\tif (removeCount > 0) {\n\t\t\t\tthis._emitEvictions(items.slice(0, removeCount));\n\t\t\t}\n\n\t\t\tthis.oldCache = new Map(items.slice(removeCount));\n\t\t\tthis.cache = new Map();\n\t\t\tthis._size = 0;\n\t\t}\n\n\t\tthis.maxSize = newSize;\n\t}\n\n\t* keys() {\n\t\tfor (const [key] of this) {\n\t\t\tyield key;\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const [, value] of this) {\n\t\t\tyield value;\n\t\t}\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tfor (const item of this.cache) {\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield [key, value.value];\n\t\t\t}\n\t\t}\n\n\t\tfor (const item of this.oldCache) {\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield [key, value.value];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t* entriesDescending() {\n\t\tlet items = [...this.cache];\n\t\tfor (let i = items.length - 1; i >= 0; --i) {\n\t\t\tconst item = items[i];\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield [key, value.value];\n\t\t\t}\n\t\t}\n\n\t\titems = [...this.oldCache];\n\t\tfor (let i = items.length - 1; i >= 0; --i) {\n\t\t\tconst item = items[i];\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield [key, value.value];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t* entriesAscending() {\n\t\tfor (const [key, value] of this._entriesAscending()) {\n\t\t\tyield [key, value.value];\n\t\t}\n\t}\n\n\tget size() {\n\t\tif (!this._size) {\n\t\t\treturn this.oldCache.size;\n\t\t}\n\n\t\tlet oldCacheSize = 0;\n\t\tfor (const key of this.oldCache.keys()) {\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\toldCacheSize++;\n\t\t\t}\n\t\t}\n\n\t\treturn Math.min(this._size + oldCacheSize, this.maxSize);\n\t}\n\n\tentries() {\n\t\treturn this.entriesAscending();\n\t}\n\n\tforEach(callbackFunction, thisArgument = this) {\n\t\tfor (const [key, value] of this.entriesAscending()) {\n\t\t\tcallbackFunction.call(thisArgument, value, key, this);\n\t\t}\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn JSON.stringify([...this.entriesAscending()]);\n\t}\n}\n","export function assign(target, source) {\n  for (const key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n}\n\nexport function chunk(iterable, length) {\n  const results = [];\n  const lengthOfIterable = iterable.length;\n  for (let i = 0; i < lengthOfIterable; i += length) {\n    const chunked = [];\n    for (let ci = i; ci < i + length; ci++) {\n      chunked.push(iterable[ci]);\n    }\n    results.push(chunked);\n  }\n  return results;\n}\n\nexport function endsWith(string, expectedEnding) {\n  if (string.length < expectedEnding.length) {\n    return false;\n  }\n  const actualEnding = string.substr(string.length - expectedEnding.length);\n  return actualEnding === expectedEnding;\n}\n\nexport function forEach(iterable, func) {\n  const { length } = iterable;\n  for (let i = 0; i < length; i++) {\n    func(iterable[i], i);\n  }\n}\n\nexport function invert(oldObj) {\n  const newObj = {};\n  for (const key in oldObj) {\n    if (oldObj.hasOwnProperty(key)) {\n      const value = oldObj[key];\n      newObj[value] = key;\n    }\n  }\n  return newObj;\n}\n\nexport function range(n) {\n  const results = [];\n  for (let i = 0; i < n; i++) {\n    results.push(i);\n  }\n  return results;\n}\n\nexport function times(numTimes, func) {\n  const results = [];\n  for (let i = 0; i < numTimes; i++) {\n    results.push(func(i));\n  }\n  return results;\n}\n\nexport function toArray(iterable) {\n  const results = [];\n  const { length } = iterable;\n  for (let i = 0; i < length; i++) {\n    results.push(iterable[i]);\n  }\n  return results;\n}\n\nexport function toArrayRecursively(input) {\n  if (input.length) {\n    return toArray(input).map(toArrayRecursively);\n  }\n  return input;\n}\n\n// copied from https://github.com/academia-de-codigo/parse-content-range-header/blob/master/index.js\nexport function parseContentRange(headerValue) {\n  if (!headerValue) {\n    return null;\n  }\n\n  if (typeof headerValue !== 'string') {\n    throw new Error('invalid argument');\n  }\n\n  const parseInt = (number) => Number.parseInt(number, 10);\n\n  // Check for presence of unit\n  let matches = headerValue.match(/^(\\w*) /);\n  const unit = matches && matches[1];\n\n  // check for start-end/size header format\n  matches = headerValue.match(/(\\d+)-(\\d+)\\/(\\d+|\\*)/);\n  if (matches) {\n    return {\n      unit,\n      first: parseInt(matches[1]),\n      last: parseInt(matches[2]),\n      length: matches[3] === '*' ? null : parseInt(matches[3]),\n    };\n  }\n\n  // check for size header format\n  matches = headerValue.match(/(\\d+|\\*)/);\n  if (matches) {\n    return {\n      unit,\n      first: null,\n      last: null,\n      length: matches[1] === '*' ? null : parseInt(matches[1]),\n    };\n  }\n\n  return null;\n}\n\n/*\n * Promisified wrapper around 'setTimeout' to allow 'await'\n */\nexport async function wait(milliseconds) {\n  return new Promise((resolve) => setTimeout(resolve, milliseconds));\n}\n\nexport function zip(a, b) {\n  const A = Array.isArray(a) ? a : Array.from(a);\n  const B = Array.isArray(b) ? b : Array.from(b);\n  return A.map((k, i) => [k, B[i]]);\n}\n\n// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error\nexport class AbortError extends Error {\n  constructor(params) {\n    // Pass remaining arguments (including vendor specific ones) to parent constructor\n    super(params);\n\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, AbortError);\n    }\n\n    this.name = 'AbortError';\n  }\n}\n\nexport class CustomAggregateError extends Error {\n  constructor(errors, message) {\n    super(message);\n    this.errors = errors;\n    this.message = message;\n    this.name = 'AggregateError';\n  }\n}\n\nexport const AggregateError = CustomAggregateError;\n","import QuickLRU from 'quick-lru';\nimport { BaseSource } from './basesource.js';\nimport { AbortError, AggregateError, wait, zip } from '../utils.js';\n\nclass Block {\n  /**\n   *\n   * @param {number} offset\n   * @param {number} length\n   * @param {ArrayBuffer} [data]\n   */\n  constructor(offset, length, data = null) {\n    this.offset = offset;\n    this.length = length;\n    this.data = data;\n  }\n\n  /**\n   * @returns {number} the top byte border\n   */\n  get top() {\n    return this.offset + this.length;\n  }\n}\n\nclass BlockGroup {\n  /**\n   *\n   * @param {number} offset\n   * @param {number} length\n   * @param {number[]} blockIds\n   */\n  constructor(offset, length, blockIds) {\n    this.offset = offset;\n    this.length = length;\n    this.blockIds = blockIds;\n  }\n}\n\nexport class BlockedSource extends BaseSource {\n  /**\n   *\n   * @param {BaseSource} source The underlying source that shall be blocked and cached\n   * @param {object} options\n   * @param {number} [options.blockSize]\n   * @param {number} [options.cacheSize]\n   */\n  constructor(source, { blockSize = 65536, cacheSize = 100 } = {}) {\n    super();\n    this.source = source;\n    this.blockSize = blockSize;\n\n    this.blockCache = new QuickLRU({\n      maxSize: cacheSize,\n      onEviction: (blockId, block) => {\n        this.evictedBlocks.set(blockId, block);\n      },\n    });\n\n    /** @type {Map<number, Block>} */\n    this.evictedBlocks = new Map();\n\n    // mapping blockId -> Block instance\n    this.blockRequests = new Map();\n\n    // set of blockIds missing for the current requests\n    this.blockIdsToFetch = new Set();\n\n    this.abortedBlockIds = new Set();\n  }\n\n  get fileSize() {\n    return this.source.fileSize;\n  }\n\n  /**\n   *\n   * @param {import(\"./basesource\").Slice[]} slices\n   */\n  async fetch(slices, signal) {\n    const blockRequests = [];\n    const missingBlockIds = [];\n    const allBlockIds = [];\n    this.evictedBlocks.clear();\n\n    for (const { offset, length } of slices) {\n      let top = offset + length;\n\n      const { fileSize } = this;\n      if (fileSize !== null) {\n        top = Math.min(top, fileSize);\n      }\n\n      const firstBlockOffset = Math.floor(offset / this.blockSize) * this.blockSize;\n\n      for (let current = firstBlockOffset; current < top; current += this.blockSize) {\n        const blockId = Math.floor(current / this.blockSize);\n        if (!this.blockCache.has(blockId) && !this.blockRequests.has(blockId)) {\n          this.blockIdsToFetch.add(blockId);\n          missingBlockIds.push(blockId);\n        }\n        if (this.blockRequests.has(blockId)) {\n          blockRequests.push(this.blockRequests.get(blockId));\n        }\n        allBlockIds.push(blockId);\n      }\n    }\n\n    // allow additional block requests to accumulate\n    await wait();\n    this.fetchBlocks(signal);\n\n    // Gather all of the new requests that this fetch call is contributing to `fetch`.\n    const missingRequests = [];\n    for (const blockId of missingBlockIds) {\n      // The requested missing block could already be in the cache\n      // instead of having its request still be outstanding.\n      if (this.blockRequests.has(blockId)) {\n        missingRequests.push(this.blockRequests.get(blockId));\n      }\n    }\n\n    // Actually await all pending requests that are needed for this `fetch`.\n    await Promise.allSettled(blockRequests);\n    await Promise.allSettled(missingRequests);\n\n    // Perform retries if a block was interrupted by a previous signal\n    const abortedBlockRequests = [];\n    const abortedBlockIds = allBlockIds\n      .filter((id) => this.abortedBlockIds.has(id) || !this.blockCache.has(id));\n    abortedBlockIds.forEach((id) => this.blockIdsToFetch.add(id));\n    // start the retry of some blocks if required\n    if (abortedBlockIds.length > 0 && signal && !signal.aborted) {\n      this.fetchBlocks(null);\n      for (const blockId of abortedBlockIds) {\n        const block = this.blockRequests.get(blockId);\n        if (!block) {\n          throw new Error(`Block ${blockId} is not in the block requests`);\n        }\n        abortedBlockRequests.push(block);\n      }\n      await Promise.allSettled(abortedBlockRequests);\n    }\n\n    // throw an  abort error\n    if (signal && signal.aborted) {\n      throw new AbortError('Request was aborted');\n    }\n\n    const blocks = allBlockIds.map((id) => this.blockCache.get(id) || this.evictedBlocks.get(id));\n    const failedBlocks = blocks.filter((i) => !i);\n    if (failedBlocks.length) {\n      throw new AggregateError(failedBlocks, 'Request failed');\n    }\n\n    // create a final Map, with all required blocks for this request to satisfy\n    const requiredBlocks = new Map(zip(allBlockIds, blocks));\n\n    // TODO: satisfy each slice\n    return this.readSliceData(slices, requiredBlocks);\n  }\n\n  /**\n   *\n   * @param {AbortSignal} signal\n   */\n  fetchBlocks(signal) {\n    // check if we still need to\n    if (this.blockIdsToFetch.size > 0) {\n      const groups = this.groupBlocks(this.blockIdsToFetch);\n\n      // start requesting slices of data\n      const groupRequests = this.source.fetch(groups, signal);\n\n      for (let groupIndex = 0; groupIndex < groups.length; ++groupIndex) {\n        const group = groups[groupIndex];\n\n        for (const blockId of group.blockIds) {\n          // make an async IIFE for each block\n          this.blockRequests.set(blockId, (async () => {\n            try {\n              const response = (await groupRequests)[groupIndex];\n              const blockOffset = blockId * this.blockSize;\n              const o = blockOffset - response.offset;\n              const t = Math.min(o + this.blockSize, response.data.byteLength);\n              const data = response.data.slice(o, t);\n              const block = new Block(\n                blockOffset,\n                data.byteLength,\n                data,\n                blockId,\n              );\n              this.blockCache.set(blockId, block);\n              this.abortedBlockIds.delete(blockId);\n            } catch (err) {\n              if (err.name === 'AbortError') {\n                // store the signal here, we need it to determine later if an\n                // error was caused by this signal\n                err.signal = signal;\n                this.blockCache.delete(blockId);\n                this.abortedBlockIds.add(blockId);\n              } else {\n                throw err;\n              }\n            } finally {\n              this.blockRequests.delete(blockId);\n            }\n          })());\n        }\n      }\n      this.blockIdsToFetch.clear();\n    }\n  }\n\n  /**\n   *\n   * @param {Set} blockIds\n   * @returns {BlockGroup[]}\n   */\n  groupBlocks(blockIds) {\n    const sortedBlockIds = Array.from(blockIds).sort((a, b) => a - b);\n    if (sortedBlockIds.length === 0) {\n      return [];\n    }\n    let current = [];\n    let lastBlockId = null;\n    const groups = [];\n\n    for (const blockId of sortedBlockIds) {\n      if (lastBlockId === null || lastBlockId + 1 === blockId) {\n        current.push(blockId);\n        lastBlockId = blockId;\n      } else {\n        groups.push(new BlockGroup(\n          current[0] * this.blockSize,\n          current.length * this.blockSize,\n          current,\n        ));\n        current = [blockId];\n        lastBlockId = blockId;\n      }\n    }\n\n    groups.push(new BlockGroup(\n      current[0] * this.blockSize,\n      current.length * this.blockSize,\n      current,\n    ));\n\n    return groups;\n  }\n\n  /**\n   *\n   * @param {import(\"./basesource\").Slice[]} slices\n   * @param {Map} blocks\n   */\n  readSliceData(slices, blocks) {\n    return slices.map((slice) => {\n      let top = slice.offset + slice.length;\n      if (this.fileSize !== null) {\n        top = Math.min(this.fileSize, top);\n      }\n      const blockIdLow = Math.floor(slice.offset / this.blockSize);\n      const blockIdHigh = Math.floor(top / this.blockSize);\n      const sliceData = new ArrayBuffer(slice.length);\n      const sliceView = new Uint8Array(sliceData);\n\n      for (let blockId = blockIdLow; blockId <= blockIdHigh; ++blockId) {\n        const block = blocks.get(blockId);\n        const delta = block.offset - slice.offset;\n        const topDelta = block.top - top;\n        let blockInnerOffset = 0;\n        let rangeInnerOffset = 0;\n        let usedBlockLength;\n\n        if (delta < 0) {\n          blockInnerOffset = -delta;\n        } else if (delta > 0) {\n          rangeInnerOffset = delta;\n        }\n\n        if (topDelta < 0) {\n          usedBlockLength = block.length - blockInnerOffset;\n        } else {\n          usedBlockLength = top - block.offset - blockInnerOffset;\n        }\n\n        const blockView = new Uint8Array(block.data, blockInnerOffset, usedBlockLength);\n        sliceView.set(blockView, rangeInnerOffset);\n      }\n\n      return sliceData;\n    });\n  }\n}\n","export class BaseResponse {\n  /**\n   * Returns whether the response has an ok'ish status code\n   */\n  get ok() {\n    return this.status >= 200 && this.status <= 299;\n  }\n\n  /**\n   * Returns the status code of the response\n   */\n  get status() {\n    throw new Error('not implemented');\n  }\n\n  /**\n   * Returns the value of the specified header\n   * @param {string} headerName the header name\n   * @returns {string} the header value\n   */\n  getHeader(headerName) { // eslint-disable-line no-unused-vars\n    throw new Error('not implemented');\n  }\n\n  /**\n   * @returns {ArrayBuffer} the response data of the request\n   */\n  async getData() {\n    throw new Error('not implemented');\n  }\n}\n\nexport class BaseClient {\n  constructor(url) {\n    this.url = url;\n  }\n\n  /**\n   * Send a request with the options\n   * @param {{headers: HeadersInit, signal: AbortSignal}} [options={}]\n   * @returns {Promise<BaseResponse>}\n   */\n  async request({ headers, signal } = {}) { // eslint-disable-line no-unused-vars\n    throw new Error('request is not implemented');\n  }\n}\n","import { BaseClient, BaseResponse } from './base.js';\n\nclass FetchResponse extends BaseResponse {\n  /**\n   * BaseResponse facade for fetch API Response\n   * @param {Response} response\n   */\n  constructor(response) {\n    super();\n    this.response = response;\n  }\n\n  get status() {\n    return this.response.status;\n  }\n\n  getHeader(name) {\n    return this.response.headers.get(name);\n  }\n\n  async getData() {\n    const data = this.response.arrayBuffer\n      ? await this.response.arrayBuffer()\n      : (await this.response.buffer()).buffer;\n    return data;\n  }\n}\n\nexport class FetchClient extends BaseClient {\n  constructor(url, credentials) {\n    super(url);\n    this.credentials = credentials;\n  }\n\n  /**\n   * @param {{headers: HeadersInit, signal: AbortSignal}} [options={}]\n   * @returns {Promise<FetchResponse>}\n   */\n  async request({ headers, signal } = {}) {\n    const response = await fetch(this.url, {\n      headers, credentials: this.credentials, signal,\n    });\n    return new FetchResponse(response);\n  }\n}\n","import { BaseClient, BaseResponse } from './base.js';\nimport { AbortError } from '../../utils.js';\n\nclass XHRResponse extends BaseResponse {\n  /**\n   * BaseResponse facade for XMLHttpRequest\n   * @param {XMLHttpRequest} xhr\n   * @param {ArrayBuffer} data\n   */\n  constructor(xhr, data) {\n    super();\n    this.xhr = xhr;\n    this.data = data;\n  }\n\n  get status() {\n    return this.xhr.status;\n  }\n\n  getHeader(name) {\n    return this.xhr.getResponseHeader(name);\n  }\n\n  async getData() {\n    return this.data;\n  }\n}\n\nexport class XHRClient extends BaseClient {\n  constructRequest(headers, signal) {\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.open('GET', this.url);\n      xhr.responseType = 'arraybuffer';\n      for (const [key, value] of Object.entries(headers)) {\n        xhr.setRequestHeader(key, value);\n      }\n\n      // hook signals\n      xhr.onload = () => {\n        const data = xhr.response;\n        resolve(new XHRResponse(xhr, data));\n      };\n      xhr.onerror = reject;\n      xhr.onabort = () => reject(new AbortError('Request aborted'));\n      xhr.send();\n\n      if (signal) {\n        if (signal.aborted) {\n          xhr.abort();\n        }\n        signal.addEventListener('abort', () => xhr.abort());\n      }\n    });\n  }\n\n  async request({ headers, signal } = {}) {\n    const response = await this.constructRequest(headers, signal);\n    return response;\n  }\n}\n","export default {}","import http from 'http';\nimport https from 'https';\nimport urlMod from 'url';\n\nimport { BaseClient, BaseResponse } from './base.js';\nimport { AbortError } from '../../utils.js';\n\nclass HttpResponse extends BaseResponse {\n  /**\n   * BaseResponse facade for node HTTP/HTTPS API Response\n   * @param {http.ServerResponse} response\n   */\n  constructor(response, dataPromise) {\n    super();\n    this.response = response;\n    this.dataPromise = dataPromise;\n  }\n\n  get status() {\n    return this.response.statusCode;\n  }\n\n  getHeader(name) {\n    return this.response.headers[name];\n  }\n\n  async getData() {\n    const data = await this.dataPromise;\n    return data;\n  }\n}\n\nexport class HttpClient extends BaseClient {\n  constructor(url) {\n    super(url);\n    this.parsedUrl = urlMod.parse(this.url);\n    this.httpApi = (this.parsedUrl.protocol === 'http:' ? http : https);\n  }\n\n  constructRequest(headers, signal) {\n    return new Promise((resolve, reject) => {\n      const request = this.httpApi.get(\n        {\n          ...this.parsedUrl,\n          headers,\n        },\n        (response) => {\n          const dataPromise = new Promise((resolveData) => {\n            const chunks = [];\n\n            // collect chunks\n            response.on('data', (chunk) => {\n              chunks.push(chunk);\n            });\n\n            // concatenate all chunks and resolve the promise with the resulting buffer\n            response.on('end', () => {\n              const data = Buffer.concat(chunks).buffer;\n              resolveData(data);\n            });\n            response.on('error', reject);\n          });\n          resolve(new HttpResponse(response, dataPromise));\n        },\n      );\n      request.on('error', reject);\n\n      if (signal) {\n        if (signal.aborted) {\n          request.destroy(new AbortError('Request aborted'));\n        }\n        signal.addEventListener('abort', () => request.destroy(new AbortError('Request aborted')));\n      }\n    });\n  }\n\n  async request({ headers, signal } = {}) {\n    const response = await this.constructRequest(headers, signal);\n    return response;\n  }\n}\n","import { parseByteRanges, parseContentRange, parseContentType } from './httputils.js';\nimport { BaseSource } from './basesource.js';\nimport { BlockedSource } from './blockedsource.js';\n\nimport { FetchClient } from './client/fetch.js';\nimport { XHRClient } from './client/xhr.js';\nimport { HttpClient } from './client/http.js';\n\nclass RemoteSource extends BaseSource {\n  /**\n   *\n   * @param {BaseClient} client\n   * @param {object} headers\n   * @param {numbers} maxRanges\n   * @param {boolean} allowFullFile\n   */\n  constructor(client, headers, maxRanges, allowFullFile) {\n    super();\n    this.client = client;\n    this.headers = headers;\n    this.maxRanges = maxRanges;\n    this.allowFullFile = allowFullFile;\n    this._fileSize = null;\n  }\n\n  /**\n   *\n   * @param {Slice[]} slices\n   */\n  async fetch(slices, signal) {\n    // if we allow multi-ranges, split the incoming request into that many sub-requests\n    // and join them afterwards\n    if (this.maxRanges >= slices.length) {\n      return this.fetchSlices(slices, signal);\n    } else if (this.maxRanges > 0 && slices.length > 1) {\n      // TODO: split into multiple multi-range requests\n\n      // const subSlicesRequests = [];\n      // for (let i = 0; i < slices.length; i += this.maxRanges) {\n      //   subSlicesRequests.push(\n      //     this.fetchSlices(slices.slice(i, i + this.maxRanges), signal),\n      //   );\n      // }\n      // return (await Promise.all(subSlicesRequests)).flat();\n    }\n\n    // otherwise make a single request for each slice\n    return Promise.all(\n      slices.map((slice) => this.fetchSlice(slice, signal)),\n    );\n  }\n\n  async fetchSlices(slices, signal) {\n    const response = await this.client.request({\n      headers: {\n        ...this.headers,\n        Range: `bytes=${slices\n          .map(({ offset, length }) => `${offset}-${offset + length}`)\n          .join(',')\n        }`,\n      },\n      signal,\n    });\n\n    if (!response.ok) {\n      throw new Error('Error fetching data.');\n    } else if (response.status === 206) {\n      const { type, params } = parseContentType(response.getHeader('content-type'));\n      if (type === 'multipart/byteranges') {\n        const byteRanges = parseByteRanges(await response.getData(), params.boundary);\n        this._fileSize = byteRanges[0].fileSize || null;\n        return byteRanges;\n      }\n\n      const data = await response.getData();\n\n      const { start, end, total } = parseContentRange(response.getHeader('content-range'));\n      this._fileSize = total || null;\n      const first = [{\n        data,\n        offset: start,\n        length: end - start,\n      }];\n\n      if (slices.length > 1) {\n        // we requested more than one slice, but got only the first\n        // unfortunately, some HTTP Servers don't support multi-ranges\n        // and return only the first\n\n        // get the rest of the slices and fetch them iteratively\n        const others = await Promise.all(slices.slice(1).map((slice) => this.fetchSlice(slice, signal)));\n        return first.concat(others);\n      }\n      return first;\n    } else {\n      if (!this.allowFullFile) {\n        throw new Error('Server responded with full file');\n      }\n      const data = await response.getData();\n      this._fileSize = data.byteLength;\n      return [{\n        data,\n        offset: 0,\n        length: data.byteLength,\n      }];\n    }\n  }\n\n  async fetchSlice(slice, signal) {\n    const { offset, length } = slice;\n    const response = await this.client.request({\n      headers: {\n        ...this.headers,\n        Range: `bytes=${offset}-${offset + length}`,\n      },\n      signal,\n    });\n\n    // check the response was okay and if the server actually understands range requests\n    if (!response.ok) {\n      throw new Error('Error fetching data.');\n    } else if (response.status === 206) {\n      const data = await response.getData();\n\n      const { total } = parseContentRange(response.getHeader('content-range'));\n      this._fileSize = total || null;\n      return {\n        data,\n        offset,\n        length,\n      };\n    } else {\n      if (!this.allowFullFile) {\n        throw new Error('Server responded with full file');\n      }\n\n      const data = await response.getData();\n\n      this._fileSize = data.byteLength;\n      return {\n        data,\n        offset: 0,\n        length: data.byteLength,\n      };\n    }\n  }\n\n  get fileSize() {\n    return this._fileSize;\n  }\n}\n\nfunction maybeWrapInBlockedSource(source, { blockSize, cacheSize }) {\n  if (blockSize === null) {\n    return source;\n  }\n  return new BlockedSource(source, { blockSize, cacheSize });\n}\n\nexport function makeFetchSource(url, { headers = {}, credentials, maxRanges = 0, allowFullFile = false, ...blockOptions } = {}) {\n  const client = new FetchClient(url, credentials);\n  const source = new RemoteSource(client, headers, maxRanges, allowFullFile);\n  return maybeWrapInBlockedSource(source, blockOptions);\n}\n\nexport function makeXHRSource(url, { headers = {}, maxRanges = 0, allowFullFile = false, ...blockOptions } = {}) {\n  const client = new XHRClient(url);\n  const source = new RemoteSource(client, headers, maxRanges, allowFullFile);\n  return maybeWrapInBlockedSource(source, blockOptions);\n}\n\nexport function makeHttpSource(url, { headers = {}, maxRanges = 0, allowFullFile = false, ...blockOptions } = {}) {\n  const client = new HttpClient(url);\n  const source = new RemoteSource(client, headers, maxRanges, allowFullFile);\n  return maybeWrapInBlockedSource(source, blockOptions);\n}\n\nexport function makeCustomSource(client, { headers = {}, maxRanges = 0, allowFullFile = false, ...blockOptions } = {}) {\n  const source = new RemoteSource(client, headers, maxRanges, allowFullFile);\n  return maybeWrapInBlockedSource(source, blockOptions);\n}\n\n/**\n *\n * @param {string} url\n * @param {object} options\n */\nexport function makeRemoteSource(url, { forceXHR = false, ...clientOptions } = {}) {\n  if (typeof fetch === 'function' && !forceXHR) {\n    return makeFetchSource(url, clientOptions);\n  }\n  if (typeof XMLHttpRequest !== 'undefined') {\n    return makeXHRSource(url, clientOptions);\n  }\n  return makeHttpSource(url, clientOptions);\n}\n","import { BaseSource } from './basesource.js';\n\nclass FileReaderSource extends BaseSource {\n  constructor(file) {\n    super();\n    this.file = file;\n  }\n\n  async fetchSlice(slice, signal) {\n    return new Promise((resolve, reject) => {\n      const blob = this.file.slice(slice.offset, slice.offset + slice.length);\n      const reader = new FileReader();\n      reader.onload = (event) => resolve(event.target.result);\n      reader.onerror = reject;\n      reader.onabort = reject;\n      reader.readAsArrayBuffer(blob);\n\n      if (signal) {\n        signal.addEventListener('abort', () => reader.abort());\n      }\n    });\n  }\n}\n\n/**\n * Create a new source from a given file/blob.\n * @param {Blob} file The file or blob to read from.\n * @returns The constructed source\n */\nexport function makeFileReaderSource(file) {\n  return new FileReaderSource(file);\n}\n","/** @module geotiff */\nimport GeoTIFFImage from './geotiffimage.js';\nimport DataView64 from './dataview64.js';\nimport DataSlice from './dataslice.js';\nimport Pool from './pool.js';\n\nimport { makeRemoteSource, makeCustomSource } from './source/remote.js';\nimport { makeBufferSource } from './source/arraybuffer.js';\nimport { makeFileReaderSource } from './source/filereader.js';\nimport { makeFileSource } from './source/file.js';\nimport { BaseClient, BaseResponse } from './source/client/base.js';\n\nimport { fieldTypes, fieldTagNames, arrayFields, geoKeyNames } from './globals.js';\nimport { writeGeotiff } from './geotiffwriter.js';\nimport * as globals from './globals.js';\nimport * as rgb from './rgb.js';\nimport { getDecoder, addDecoder } from './compression/index.js';\nimport { setLogger } from './logging.js';\n\nexport { globals };\nexport { rgb };\nexport { default as BaseDecoder } from './compression/basedecoder.js';\nexport { getDecoder, addDecoder };\nexport { setLogger };\n\n/**\n * @typedef {Uint8Array | Int8Array | Uint16Array | Int16Array | Uint32Array | Int32Array | Float32Array | Float64Array}\n * TypedArray\n */\n\n/**\n * @typedef {{ height:number, width: number }} Dimensions\n */\n\n/**\n * The autogenerated docs are a little confusing here. The effective type is:\n *\n * `TypedArray & { height: number; width: number}`\n * @typedef {TypedArray & Dimensions} TypedArrayWithDimensions\n */\n\n/**\n * The autogenerated docs are a little confusing here. The effective type is:\n *\n * `TypedArray[] & { height: number; width: number}`\n * @typedef {TypedArray[] & Dimensions} TypedArrayArrayWithDimensions\n */\n\n/**\n *  The autogenerated docs are a little confusing here. The effective type is:\n *\n * `(TypedArray | TypedArray[]) & { height: number; width: number}`\n * @typedef {TypedArrayWithDimensions | TypedArrayArrayWithDimensions} ReadRasterResult\n */\n\nfunction getFieldTypeLength(fieldType) {\n  switch (fieldType) {\n    case fieldTypes.BYTE: case fieldTypes.ASCII: case fieldTypes.SBYTE: case fieldTypes.UNDEFINED:\n      return 1;\n    case fieldTypes.SHORT: case fieldTypes.SSHORT:\n      return 2;\n    case fieldTypes.LONG: case fieldTypes.SLONG: case fieldTypes.FLOAT: case fieldTypes.IFD:\n      return 4;\n    case fieldTypes.RATIONAL: case fieldTypes.SRATIONAL: case fieldTypes.DOUBLE:\n    case fieldTypes.LONG8: case fieldTypes.SLONG8: case fieldTypes.IFD8:\n      return 8;\n    default:\n      throw new RangeError(`Invalid field type: ${fieldType}`);\n  }\n}\n\nfunction parseGeoKeyDirectory(fileDirectory) {\n  const rawGeoKeyDirectory = fileDirectory.GeoKeyDirectory;\n  if (!rawGeoKeyDirectory) {\n    return null;\n  }\n\n  const geoKeyDirectory = {};\n  for (let i = 4; i <= rawGeoKeyDirectory[3] * 4; i += 4) {\n    const key = geoKeyNames[rawGeoKeyDirectory[i]];\n    const location = (rawGeoKeyDirectory[i + 1])\n      ? (fieldTagNames[rawGeoKeyDirectory[i + 1]]) : null;\n    const count = rawGeoKeyDirectory[i + 2];\n    const offset = rawGeoKeyDirectory[i + 3];\n\n    let value = null;\n    if (!location) {\n      value = offset;\n    } else {\n      value = fileDirectory[location];\n      if (typeof value === 'undefined' || value === null) {\n        throw new Error(`Could not get value of geoKey '${key}'.`);\n      } else if (typeof value === 'string') {\n        value = value.substring(offset, offset + count - 1);\n      } else if (value.subarray) {\n        value = value.subarray(offset, offset + count);\n        if (count === 1) {\n          value = value[0];\n        }\n      }\n    }\n    geoKeyDirectory[key] = value;\n  }\n  return geoKeyDirectory;\n}\n\nfunction getValues(dataSlice, fieldType, count, offset) {\n  let values = null;\n  let readMethod = null;\n  const fieldTypeLength = getFieldTypeLength(fieldType);\n\n  switch (fieldType) {\n    case fieldTypes.BYTE: case fieldTypes.ASCII: case fieldTypes.UNDEFINED:\n      values = new Uint8Array(count); readMethod = dataSlice.readUint8;\n      break;\n    case fieldTypes.SBYTE:\n      values = new Int8Array(count); readMethod = dataSlice.readInt8;\n      break;\n    case fieldTypes.SHORT:\n      values = new Uint16Array(count); readMethod = dataSlice.readUint16;\n      break;\n    case fieldTypes.SSHORT:\n      values = new Int16Array(count); readMethod = dataSlice.readInt16;\n      break;\n    case fieldTypes.LONG: case fieldTypes.IFD:\n      values = new Uint32Array(count); readMethod = dataSlice.readUint32;\n      break;\n    case fieldTypes.SLONG:\n      values = new Int32Array(count); readMethod = dataSlice.readInt32;\n      break;\n    case fieldTypes.LONG8: case fieldTypes.IFD8:\n      values = new Array(count); readMethod = dataSlice.readUint64;\n      break;\n    case fieldTypes.SLONG8:\n      values = new Array(count); readMethod = dataSlice.readInt64;\n      break;\n    case fieldTypes.RATIONAL:\n      values = new Uint32Array(count * 2); readMethod = dataSlice.readUint32;\n      break;\n    case fieldTypes.SRATIONAL:\n      values = new Int32Array(count * 2); readMethod = dataSlice.readInt32;\n      break;\n    case fieldTypes.FLOAT:\n      values = new Float32Array(count); readMethod = dataSlice.readFloat32;\n      break;\n    case fieldTypes.DOUBLE:\n      values = new Float64Array(count); readMethod = dataSlice.readFloat64;\n      break;\n    default:\n      throw new RangeError(`Invalid field type: ${fieldType}`);\n  }\n\n  // normal fields\n  if (!(fieldType === fieldTypes.RATIONAL || fieldType === fieldTypes.SRATIONAL)) {\n    for (let i = 0; i < count; ++i) {\n      values[i] = readMethod.call(\n        dataSlice, offset + (i * fieldTypeLength),\n      );\n    }\n  } else { // RATIONAL or SRATIONAL\n    for (let i = 0; i < count; i += 2) {\n      values[i] = readMethod.call(\n        dataSlice, offset + (i * fieldTypeLength),\n      );\n      values[i + 1] = readMethod.call(\n        dataSlice, offset + ((i * fieldTypeLength) + 4),\n      );\n    }\n  }\n\n  if (fieldType === fieldTypes.ASCII) {\n    return new TextDecoder('utf-8').decode(values);\n  }\n  return values;\n}\n\n/**\n * Data class to store the parsed file directory, geo key directory and\n * offset to the next IFD\n */\nclass ImageFileDirectory {\n  constructor(fileDirectory, geoKeyDirectory, nextIFDByteOffset) {\n    this.fileDirectory = fileDirectory;\n    this.geoKeyDirectory = geoKeyDirectory;\n    this.nextIFDByteOffset = nextIFDByteOffset;\n  }\n}\n\n/**\n * Error class for cases when an IFD index was requested, that does not exist\n * in the file.\n */\nclass GeoTIFFImageIndexError extends Error {\n  constructor(index) {\n    super(`No image at index ${index}`);\n    this.index = index;\n  }\n}\n\nclass GeoTIFFBase {\n  /**\n   * (experimental) Reads raster data from the best fitting image. This function uses\n   * the image with the lowest resolution that is still a higher resolution than the\n   * requested resolution.\n   * When specified, the `bbox` option is translated to the `window` option and the\n   * `resX` and `resY` to `width` and `height` respectively.\n   * Then, the [readRasters]{@link GeoTIFFImage#readRasters} method of the selected\n   * image is called and the result returned.\n   * @see GeoTIFFImage.readRasters\n   * @param {import('./geotiffimage').ReadRasterOptions} [options={}] optional parameters\n   * @returns {Promise<ReadRasterResult>} the decoded array(s), with `height` and `width`, as a promise\n   */\n  async readRasters(options = {}) {\n    const { window: imageWindow, width, height } = options;\n    let { resX, resY, bbox } = options;\n\n    const firstImage = await this.getImage();\n    let usedImage = firstImage;\n    const imageCount = await this.getImageCount();\n    const imgBBox = firstImage.getBoundingBox();\n\n    if (imageWindow && bbox) {\n      throw new Error('Both \"bbox\" and \"window\" passed.');\n    }\n\n    // if width/height is passed, transform it to resolution\n    if (width || height) {\n      // if we have an image window (pixel coordinates), transform it to a BBox\n      // using the origin/resolution of the first image.\n      if (imageWindow) {\n        const [oX, oY] = firstImage.getOrigin();\n        const [rX, rY] = firstImage.getResolution();\n\n        bbox = [\n          oX + (imageWindow[0] * rX),\n          oY + (imageWindow[1] * rY),\n          oX + (imageWindow[2] * rX),\n          oY + (imageWindow[3] * rY),\n        ];\n      }\n\n      // if we have a bbox (or calculated one)\n\n      const usedBBox = bbox || imgBBox;\n\n      if (width) {\n        if (resX) {\n          throw new Error('Both width and resX passed');\n        }\n        resX = (usedBBox[2] - usedBBox[0]) / width;\n      }\n      if (height) {\n        if (resY) {\n          throw new Error('Both width and resY passed');\n        }\n        resY = (usedBBox[3] - usedBBox[1]) / height;\n      }\n    }\n\n    // if resolution is set or calculated, try to get the image with the worst acceptable resolution\n    if (resX || resY) {\n      const allImages = [];\n      for (let i = 0; i < imageCount; ++i) {\n        const image = await this.getImage(i);\n        const { SubfileType: subfileType, NewSubfileType: newSubfileType } = image.fileDirectory;\n        if (i === 0 || subfileType === 2 || newSubfileType & 1) {\n          allImages.push(image);\n        }\n      }\n\n      allImages.sort((a, b) => a.getWidth() - b.getWidth());\n      for (let i = 0; i < allImages.length; ++i) {\n        const image = allImages[i];\n        const imgResX = (imgBBox[2] - imgBBox[0]) / image.getWidth();\n        const imgResY = (imgBBox[3] - imgBBox[1]) / image.getHeight();\n\n        usedImage = image;\n        if ((resX && resX > imgResX) || (resY && resY > imgResY)) {\n          break;\n        }\n      }\n    }\n\n    let wnd = imageWindow;\n    if (bbox) {\n      const [oX, oY] = firstImage.getOrigin();\n      const [imageResX, imageResY] = usedImage.getResolution(firstImage);\n\n      wnd = [\n        Math.round((bbox[0] - oX) / imageResX),\n        Math.round((bbox[1] - oY) / imageResY),\n        Math.round((bbox[2] - oX) / imageResX),\n        Math.round((bbox[3] - oY) / imageResY),\n      ];\n      wnd = [\n        Math.min(wnd[0], wnd[2]),\n        Math.min(wnd[1], wnd[3]),\n        Math.max(wnd[0], wnd[2]),\n        Math.max(wnd[1], wnd[3]),\n      ];\n    }\n\n    return usedImage.readRasters({ ...options, window: wnd });\n  }\n}\n\n/**\n * @typedef {Object} GeoTIFFOptions\n * @property {boolean} [cache=false] whether or not decoded tiles shall be cached.\n */\n\n/**\n * The abstraction for a whole GeoTIFF file.\n * @augments GeoTIFFBase\n */\nclass GeoTIFF extends GeoTIFFBase {\n  /**\n   * @constructor\n   * @param {*} source The datasource to read from.\n   * @param {boolean} littleEndian Whether the image uses little endian.\n   * @param {boolean} bigTiff Whether the image uses bigTIFF conventions.\n   * @param {number} firstIFDOffset The numeric byte-offset from the start of the image\n   *                                to the first IFD.\n   * @param {GeoTIFFOptions} [options] further options.\n   */\n  constructor(source, littleEndian, bigTiff, firstIFDOffset, options = {}) {\n    super();\n    this.source = source;\n    this.littleEndian = littleEndian;\n    this.bigTiff = bigTiff;\n    this.firstIFDOffset = firstIFDOffset;\n    this.cache = options.cache || false;\n    this.ifdRequests = [];\n    this.ghostValues = null;\n  }\n\n  async getSlice(offset, size) {\n    const fallbackSize = this.bigTiff ? 4048 : 1024;\n    return new DataSlice(\n      (await this.source.fetch([{\n        offset,\n        length: typeof size !== 'undefined' ? size : fallbackSize,\n      }]))[0],\n      offset,\n      this.littleEndian,\n      this.bigTiff,\n    );\n  }\n\n  /**\n   * Instructs to parse an image file directory at the given file offset.\n   * As there is no way to ensure that a location is indeed the start of an IFD,\n   * this function must be called with caution (e.g only using the IFD offsets from\n   * the headers or other IFDs).\n   * @param {number} offset the offset to parse the IFD at\n   * @returns {Promise<ImageFileDirectory>} the parsed IFD\n   */\n  async parseFileDirectoryAt(offset) {\n    const entrySize = this.bigTiff ? 20 : 12;\n    const offsetSize = this.bigTiff ? 8 : 2;\n\n    let dataSlice = await this.getSlice(offset);\n    const numDirEntries = this.bigTiff\n      ? dataSlice.readUint64(offset)\n      : dataSlice.readUint16(offset);\n\n    // if the slice does not cover the whole IFD, request a bigger slice, where the\n    // whole IFD fits: num of entries + n x tag length + offset to next IFD\n    const byteSize = (numDirEntries * entrySize) + (this.bigTiff ? 16 : 6);\n    if (!dataSlice.covers(offset, byteSize)) {\n      dataSlice = await this.getSlice(offset, byteSize);\n    }\n\n    const fileDirectory = {};\n\n    // loop over the IFD and create a file directory object\n    let i = offset + (this.bigTiff ? 8 : 2);\n    for (let entryCount = 0; entryCount < numDirEntries; i += entrySize, ++entryCount) {\n      const fieldTag = dataSlice.readUint16(i);\n      const fieldType = dataSlice.readUint16(i + 2);\n      const typeCount = this.bigTiff\n        ? dataSlice.readUint64(i + 4)\n        : dataSlice.readUint32(i + 4);\n\n      let fieldValues;\n      let value;\n      const fieldTypeLength = getFieldTypeLength(fieldType);\n      const valueOffset = i + (this.bigTiff ? 12 : 8);\n\n      // check whether the value is directly encoded in the tag or refers to a\n      // different external byte range\n      if (fieldTypeLength * typeCount <= (this.bigTiff ? 8 : 4)) {\n        fieldValues = getValues(dataSlice, fieldType, typeCount, valueOffset);\n      } else {\n        // resolve the reference to the actual byte range\n        const actualOffset = dataSlice.readOffset(valueOffset);\n        const length = getFieldTypeLength(fieldType) * typeCount;\n\n        // check, whether we actually cover the referenced byte range; if not,\n        // request a new slice of bytes to read from it\n        if (dataSlice.covers(actualOffset, length)) {\n          fieldValues = getValues(dataSlice, fieldType, typeCount, actualOffset);\n        } else {\n          const fieldDataSlice = await this.getSlice(actualOffset, length);\n          fieldValues = getValues(fieldDataSlice, fieldType, typeCount, actualOffset);\n        }\n      }\n\n      // unpack single values from the array\n      if (typeCount === 1 && arrayFields.indexOf(fieldTag) === -1\n        && !(fieldType === fieldTypes.RATIONAL || fieldType === fieldTypes.SRATIONAL)) {\n        value = fieldValues[0];\n      } else {\n        value = fieldValues;\n      }\n\n      // write the tags value to the file directly\n      fileDirectory[fieldTagNames[fieldTag]] = value;\n    }\n    const geoKeyDirectory = parseGeoKeyDirectory(fileDirectory);\n    const nextIFDByteOffset = dataSlice.readOffset(\n      offset + offsetSize + (entrySize * numDirEntries),\n    );\n\n    return new ImageFileDirectory(\n      fileDirectory,\n      geoKeyDirectory,\n      nextIFDByteOffset,\n    );\n  }\n\n  async requestIFD(index) {\n    // see if we already have that IFD index requested.\n    if (this.ifdRequests[index]) {\n      // attach to an already requested IFD\n      return this.ifdRequests[index];\n    } else if (index === 0) {\n      // special case for index 0\n      this.ifdRequests[index] = this.parseFileDirectoryAt(this.firstIFDOffset);\n      return this.ifdRequests[index];\n    } else if (!this.ifdRequests[index - 1]) {\n      // if the previous IFD was not yet loaded, load that one first\n      // this is the recursive call.\n      try {\n        this.ifdRequests[index - 1] = this.requestIFD(index - 1);\n      } catch (e) {\n        // if the previous one already was an index error, rethrow\n        // with the current index\n        if (e instanceof GeoTIFFImageIndexError) {\n          throw new GeoTIFFImageIndexError(index);\n        }\n        // rethrow anything else\n        throw e;\n      }\n    }\n    // if the previous IFD was loaded, we can finally fetch the one we are interested in.\n    // we need to wrap this in an IIFE, otherwise this.ifdRequests[index] would be delayed\n    this.ifdRequests[index] = (async () => {\n      const previousIfd = await this.ifdRequests[index - 1];\n      if (previousIfd.nextIFDByteOffset === 0) {\n        throw new GeoTIFFImageIndexError(index);\n      }\n      return this.parseFileDirectoryAt(previousIfd.nextIFDByteOffset);\n    })();\n    return this.ifdRequests[index];\n  }\n\n  /**\n   * Get the n-th internal subfile of an image. By default, the first is returned.\n   *\n   * @param {number} [index=0] the index of the image to return.\n   * @returns {Promise<GeoTIFFImage>} the image at the given index\n   */\n  async getImage(index = 0) {\n    const ifd = await this.requestIFD(index);\n    return new GeoTIFFImage(\n      ifd.fileDirectory, ifd.geoKeyDirectory,\n      this.dataView, this.littleEndian, this.cache, this.source,\n    );\n  }\n\n  /**\n   * Returns the count of the internal subfiles.\n   *\n   * @returns {Promise<number>} the number of internal subfile images\n   */\n  async getImageCount() {\n    let index = 0;\n    // loop until we run out of IFDs\n    let hasNext = true;\n    while (hasNext) {\n      try {\n        await this.requestIFD(index);\n        ++index;\n      } catch (e) {\n        if (e instanceof GeoTIFFImageIndexError) {\n          hasNext = false;\n        } else {\n          throw e;\n        }\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Get the values of the COG ghost area as a parsed map.\n   * See https://gdal.org/drivers/raster/cog.html#header-ghost-area for reference\n   * @returns {Promise<Object>} the parsed ghost area or null, if no such area was found\n   */\n  async getGhostValues() {\n    const offset = this.bigTiff ? 16 : 8;\n    if (this.ghostValues) {\n      return this.ghostValues;\n    }\n    const detectionString = 'GDAL_STRUCTURAL_METADATA_SIZE=';\n    const heuristicAreaSize = detectionString.length + 100;\n    let slice = await this.getSlice(offset, heuristicAreaSize);\n    if (detectionString === getValues(slice, fieldTypes.ASCII, detectionString.length, offset)) {\n      const valuesString = getValues(slice, fieldTypes.ASCII, heuristicAreaSize, offset);\n      const firstLine = valuesString.split('\\n')[0];\n      const metadataSize = Number(firstLine.split('=')[1].split(' ')[0]) + firstLine.length;\n      if (metadataSize > heuristicAreaSize) {\n        slice = await this.getSlice(offset, metadataSize);\n      }\n      const fullString = getValues(slice, fieldTypes.ASCII, metadataSize, offset);\n      this.ghostValues = {};\n      fullString\n        .split('\\n')\n        .filter((line) => line.length > 0)\n        .map((line) => line.split('='))\n        .forEach(([key, value]) => {\n          this.ghostValues[key] = value;\n        });\n    }\n    return this.ghostValues;\n  }\n\n  /**\n   * Parse a (Geo)TIFF file from the given source.\n   *\n   * @param {*} source The source of data to parse from.\n   * @param {GeoTIFFOptions} [options] Additional options.\n   * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n   *                               to be aborted\n   */\n  static async fromSource(source, options, signal) {\n    const headerData = (await source.fetch([{ offset: 0, length: 1024 }], signal))[0];\n    const dataView = new DataView64(headerData);\n\n    const BOM = dataView.getUint16(0, 0);\n    let littleEndian;\n    if (BOM === 0x4949) {\n      littleEndian = true;\n    } else if (BOM === 0x4D4D) {\n      littleEndian = false;\n    } else {\n      throw new TypeError('Invalid byte order value.');\n    }\n\n    const magicNumber = dataView.getUint16(2, littleEndian);\n    let bigTiff;\n    if (magicNumber === 42) {\n      bigTiff = false;\n    } else if (magicNumber === 43) {\n      bigTiff = true;\n      const offsetByteSize = dataView.getUint16(4, littleEndian);\n      if (offsetByteSize !== 8) {\n        throw new Error('Unsupported offset byte-size.');\n      }\n    } else {\n      throw new TypeError('Invalid magic number.');\n    }\n\n    const firstIFDOffset = bigTiff\n      ? dataView.getUint64(8, littleEndian)\n      : dataView.getUint32(4, littleEndian);\n    return new GeoTIFF(source, littleEndian, bigTiff, firstIFDOffset, options);\n  }\n\n  /**\n   * Closes the underlying file buffer\n   * N.B. After the GeoTIFF has been completely processed it needs\n   * to be closed but only if it has been constructed from a file.\n   */\n  close() {\n    if (typeof this.source.close === 'function') {\n      return this.source.close();\n    }\n    return false;\n  }\n}\n\nexport { GeoTIFF };\nexport default GeoTIFF;\n\n/**\n * Wrapper for GeoTIFF files that have external overviews.\n * @augments GeoTIFFBase\n */\nclass MultiGeoTIFF extends GeoTIFFBase {\n  /**\n   * Construct a new MultiGeoTIFF from a main and several overview files.\n   * @param {GeoTIFF} mainFile The main GeoTIFF file.\n   * @param {GeoTIFF[]} overviewFiles An array of overview files.\n   */\n  constructor(mainFile, overviewFiles) {\n    super();\n    this.mainFile = mainFile;\n    this.overviewFiles = overviewFiles;\n    this.imageFiles = [mainFile].concat(overviewFiles);\n\n    this.fileDirectoriesPerFile = null;\n    this.fileDirectoriesPerFileParsing = null;\n    this.imageCount = null;\n  }\n\n  async parseFileDirectoriesPerFile() {\n    const requests = [this.mainFile.parseFileDirectoryAt(this.mainFile.firstIFDOffset)]\n      .concat(this.overviewFiles.map((file) => file.parseFileDirectoryAt(file.firstIFDOffset)));\n\n    this.fileDirectoriesPerFile = await Promise.all(requests);\n    return this.fileDirectoriesPerFile;\n  }\n\n  /**\n   * Get the n-th internal subfile of an image. By default, the first is returned.\n   *\n   * @param {number} [index=0] the index of the image to return.\n   * @returns {Promise<GeoTIFFImage>} the image at the given index\n   */\n  async getImage(index = 0) {\n    await this.getImageCount();\n    await this.parseFileDirectoriesPerFile();\n    let visited = 0;\n    let relativeIndex = 0;\n    for (let i = 0; i < this.imageFiles.length; i++) {\n      const imageFile = this.imageFiles[i];\n      for (let ii = 0; ii < this.imageCounts[i]; ii++) {\n        if (index === visited) {\n          const ifd = await imageFile.requestIFD(relativeIndex);\n          return new GeoTIFFImage(\n            ifd.fileDirectory, ifd.geoKeyDirectory,\n            imageFile.dataView, imageFile.littleEndian, imageFile.cache, imageFile.source,\n          );\n        }\n        visited++;\n        relativeIndex++;\n      }\n      relativeIndex = 0;\n    }\n\n    throw new RangeError('Invalid image index');\n  }\n\n  /**\n   * Returns the count of the internal subfiles.\n   *\n   * @returns {Promise<number>} the number of internal subfile images\n   */\n  async getImageCount() {\n    if (this.imageCount !== null) {\n      return this.imageCount;\n    }\n    const requests = [this.mainFile.getImageCount()]\n      .concat(this.overviewFiles.map((file) => file.getImageCount()));\n    this.imageCounts = await Promise.all(requests);\n    this.imageCount = this.imageCounts.reduce((count, ifds) => count + ifds, 0);\n    return this.imageCount;\n  }\n}\n\nexport { MultiGeoTIFF };\n\n/**\n * Creates a new GeoTIFF from a remote URL.\n * @param {string} url The URL to access the image from\n * @param {object} [options] Additional options to pass to the source.\n *                           See {@link makeRemoteSource} for details.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise<GeoTIFF>} The resulting GeoTIFF file.\n */\nexport async function fromUrl(url, options = {}, signal) {\n  return GeoTIFF.fromSource(makeRemoteSource(url, options), signal);\n}\n\n/**\n * Creates a new GeoTIFF from a custom {@link BaseClient}.\n * @param {BaseClient} client The client.\n * @param {object} [options] Additional options to pass to the source.\n *                           See {@link makeRemoteSource} for details.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise<GeoTIFF>} The resulting GeoTIFF file.\n */\nexport async function fromCustomClient(client, options = {}, signal) {\n  return GeoTIFF.fromSource(makeCustomSource(client, options), signal);\n}\n\n/**\n * Construct a new GeoTIFF from an\n * [ArrayBuffer]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer}.\n * @param {ArrayBuffer} arrayBuffer The data to read the file from.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise<GeoTIFF>} The resulting GeoTIFF file.\n */\nexport async function fromArrayBuffer(arrayBuffer, signal) {\n  return GeoTIFF.fromSource(makeBufferSource(arrayBuffer), signal);\n}\n\n/**\n * Construct a GeoTIFF from a local file path. This uses the node\n * [filesystem API]{@link https://nodejs.org/api/fs.html} and is\n * not available on browsers.\n *\n * N.B. After the GeoTIFF has been completely processed it needs\n * to be closed but only if it has been constructed from a file.\n * @param {string} path The file path to read from.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise<GeoTIFF>} The resulting GeoTIFF file.\n */\nexport async function fromFile(path, signal) {\n  return GeoTIFF.fromSource(makeFileSource(path), signal);\n}\n\n/**\n * Construct a GeoTIFF from an HTML\n * [Blob]{@link https://developer.mozilla.org/en-US/docs/Web/API/Blob} or\n * [File]{@link https://developer.mozilla.org/en-US/docs/Web/API/File}\n * object.\n * @param {Blob|File} blob The Blob or File object to read from.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise<GeoTIFF>} The resulting GeoTIFF file.\n */\nexport async function fromBlob(blob, signal) {\n  return GeoTIFF.fromSource(makeFileReaderSource(blob), signal);\n}\n\n/**\n * Construct a MultiGeoTIFF from the given URLs.\n * @param {string} mainUrl The URL for the main file.\n * @param {string[]} overviewUrls An array of URLs for the overview images.\n * @param {Object} [options] Additional options to pass to the source.\n *                           See [makeRemoteSource]{@link module:source.makeRemoteSource}\n *                           for details.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise<MultiGeoTIFF>} The resulting MultiGeoTIFF file.\n */\nexport async function fromUrls(mainUrl, overviewUrls = [], options = {}, signal) {\n  const mainFile = await GeoTIFF.fromSource(makeRemoteSource(mainUrl, options), signal);\n  const overviewFiles = await Promise.all(\n    overviewUrls.map((url) => GeoTIFF.fromSource(makeRemoteSource(url, options))),\n  );\n\n  return new MultiGeoTIFF(mainFile, overviewFiles);\n}\n\n/**\n * Main creating function for GeoTIFF files.\n * @param {(Array)} array of pixel values\n * @returns {metadata} metadata\n */\nexport function writeArrayBuffer(values, metadata) {\n  return writeGeotiff(values, metadata);\n}\n\nexport { Pool };\nexport { GeoTIFFImage };\nexport { BaseClient, BaseResponse };\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @param {boolean} [multiWorld] Return all worlds\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n\n/**\n * Wraps a number between some minimum and maximum values.\n * @param {number} n The number to wrap.\n * @param {number} min The minimum of the range (inclusive).\n * @param {number} max The maximum of the range (exclusive).\n * @return {number} The wrapped number.\n */\nexport function wrap(n, min, max) {\n  if (n >= min && n < max) {\n    return n;\n  }\n  const range = max - min;\n  return ((((n - min) % range) + range) % range) + min;\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * The function is called with a `number` view resolution and a\n * {@link module:ol/coordinate~Coordinate} as arguments, and returns the `number` resolution\n * in projection units at the passed coordinate.\n * @typedef {function(number, import(\"../coordinate.js\").Coordinate):number} GetPointResolution\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {GetPointResolution} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * In most cases, you should not need to create instances of this class.\n * Instead, where projection information is required, you can use a string\n * projection code or identifier (e.g. `EPSG:4326`) instead of a projection\n * instance.\n *\n * The library includes support for transforming coordinates between the following\n * projections:\n *\n *  WGS 84 / Geographic - Using codes `EPSG:4326`, `CRS:84`, `urn:ogc:def:crs:EPSG:6.6:4326`,\n *    `urn:ogc:def:crs:OGC:1.3:CRS84`, `urn:ogc:def:crs:OGC:2:84`, `http://www.opengis.net/gml/srs/epsg.xml#4326`,\n *    or `urn:x-ogc:def:crs:EPSG:4326`\n *  WGS 84 / Spherical Mercator - Using codes `EPSG:3857`, `EPSG:102100`, `EPSG:102113`, `EPSG:900913`,\n *    `urn:ogc:def:crs:EPSG:6.18:3:3857`, or `http://www.opengis.net/gml/srs/epsg.xml#3857`\n *  WGS 84 / UTM zones - Using codes `EPSG:32601` through `EPSG:32660` for northern zones\n *    and `EPSG:32701` through `EPSG:32760` for southern zones. Note that the built-in UTM transforms\n *    are lower accuracy (with errors on the order of 0.1 m) than those that you might get in a\n *    library like [proj4js](https://github.com/proj4js/proj4js).\n *\n * For additional projection support, or to use higher accuracy transforms than the built-in ones, you can use\n * the [proj4js](https://github.com/proj4js/proj4js) library. With `proj4js`, after adding any new projection\n * definitions, call the {@link module:ol/proj/proj4.register} function.\n *\n * You can use the {@link module:ol/proj.get} function to retrieve a projection instance\n * for one of the registered projections.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {GetPointResolution|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {GetPointResolution|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default|null} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|null} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    return transforms[sourceCode][destinationCode];\n  }\n  return null;\n}\n","/**\n * @module ol/proj/utm\n */\n\n/**\n * Adapted from https://github.com/Turbo87/utm\n * Copyright (c) 2012-2017 Tobias Bieniek\n *\n * The functions here provide approximate transforms to and from UTM.\n * They are not appropriate for use beyond the validity extend of a UTM\n * zone, and the accuracy of the transform decreases toward the zone\n * edges.\n */\n\nimport {toDegrees, toRadians, wrap} from '../math.js';\nimport Projection from './Projection.js';\n\n/**\n * @typedef {Object} UTMZone\n * @property {number} number The zone number (1 - 60).\n * @property {boolean} north The northern hemisphere.\n */\n\nconst K0 = 0.9996;\n\nconst E = 0.00669438;\nconst E2 = E * E;\nconst E3 = E2 * E;\nconst E_P2 = E / (1 - E);\n\nconst SQRT_E = Math.sqrt(1 - E);\nconst _E = (1 - SQRT_E) / (1 + SQRT_E);\nconst _E2 = _E * _E;\nconst _E3 = _E2 * _E;\nconst _E4 = _E3 * _E;\nconst _E5 = _E4 * _E;\n\nconst M1 = 1 - E / 4 - (3 * E2) / 64 - (5 * E3) / 256;\nconst M2 = (3 * E) / 8 + (3 * E2) / 32 + (45 * E3) / 1024;\nconst M3 = (15 * E2) / 256 + (45 * E3) / 1024;\nconst M4 = (35 * E3) / 3072;\n\nconst P2 = (3 / 2) * _E - (27 / 32) * _E3 + (269 / 512) * _E5;\nconst P3 = (21 / 16) * _E2 - (55 / 32) * _E4;\nconst P4 = (151 / 96) * _E3 - (417 / 128) * _E5;\nconst P5 = (1097 / 512) * _E4;\n\nconst R = 6378137;\n\n/**\n * @param {number} easting Easting value of coordinate.\n * @param {number} northing Northing value of coordinate.\n * @param {UTMZone} zone The UTM zone.\n * @return {import(\"../coordinate.js\").Coordinate} The transformed coordinate.\n */\nfunction toLonLat(easting, northing, zone) {\n  const x = easting - 500000;\n  const y = zone.north ? northing : northing - 10000000;\n\n  const m = y / K0;\n  const mu = m / (R * M1);\n\n  const pRad =\n    mu +\n    P2 * Math.sin(2 * mu) +\n    P3 * Math.sin(4 * mu) +\n    P4 * Math.sin(6 * mu) +\n    P5 * Math.sin(8 * mu);\n\n  const pSin = Math.sin(pRad);\n  const pSin2 = pSin * pSin;\n\n  const pCos = Math.cos(pRad);\n\n  const pTan = pSin / pCos;\n  const pTan2 = pTan * pTan;\n  const pTan4 = pTan2 * pTan2;\n\n  const epSin = 1 - E * pSin2;\n  const epSinSqrt = Math.sqrt(1 - E * pSin2);\n\n  const n = R / epSinSqrt;\n  const r = (1 - E) / epSin;\n\n  const c = E_P2 * pCos ** 2;\n  const c2 = c * c;\n\n  const d = x / (n * K0);\n  const d2 = d * d;\n  const d3 = d2 * d;\n  const d4 = d3 * d;\n  const d5 = d4 * d;\n  const d6 = d5 * d;\n\n  const latitude =\n    pRad -\n    (pTan / r) *\n      (d2 / 2 - (d4 / 24) * (5 + 3 * pTan2 + 10 * c - 4 * c2 - 9 * E_P2)) +\n    (d6 / 720) * (61 + 90 * pTan2 + 298 * c + 45 * pTan4 - 252 * E_P2 - 3 * c2);\n\n  let longitude =\n    (d -\n      (d3 / 6) * (1 + 2 * pTan2 + c) +\n      (d5 / 120) * (5 - 2 * c + 28 * pTan2 - 3 * c2 + 8 * E_P2 + 24 * pTan4)) /\n    pCos;\n\n  longitude = wrap(\n    longitude + toRadians(zoneToCentralLongitude(zone.number)),\n    -Math.PI,\n    Math.PI,\n  );\n\n  return [toDegrees(longitude), toDegrees(latitude)];\n}\n\nconst MIN_LATITUDE = -80;\nconst MAX_LATITUDE = 84;\nconst MIN_LONGITUDE = -180;\nconst MAX_LONGITUDE = 180;\n\n/**\n * @param {number} longitude The longitude.\n * @param {number} latitude The latitude.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../coordinate.js').Coordinate} The UTM coordinate.\n */\nfunction fromLonLat(longitude, latitude, zone) {\n  longitude = wrap(longitude, MIN_LONGITUDE, MAX_LONGITUDE);\n\n  if (latitude < MIN_LATITUDE) {\n    latitude = MIN_LATITUDE;\n  } else if (latitude > MAX_LATITUDE) {\n    latitude = MAX_LATITUDE;\n  }\n\n  const latRad = toRadians(latitude);\n  const latSin = Math.sin(latRad);\n  const latCos = Math.cos(latRad);\n\n  const latTan = latSin / latCos;\n  const latTan2 = latTan * latTan;\n  const latTan4 = latTan2 * latTan2;\n\n  const lonRad = toRadians(longitude);\n  const centralLon = zoneToCentralLongitude(zone.number);\n  const centralLonRad = toRadians(centralLon);\n\n  const n = R / Math.sqrt(1 - E * latSin ** 2);\n  const c = E_P2 * latCos ** 2;\n\n  const a = latCos * wrap(lonRad - centralLonRad, -Math.PI, Math.PI);\n  const a2 = a * a;\n  const a3 = a2 * a;\n  const a4 = a3 * a;\n  const a5 = a4 * a;\n  const a6 = a5 * a;\n\n  const m =\n    R *\n    (M1 * latRad -\n      M2 * Math.sin(2 * latRad) +\n      M3 * Math.sin(4 * latRad) -\n      M4 * Math.sin(6 * latRad));\n\n  const easting =\n    K0 *\n      n *\n      (a +\n        (a3 / 6) * (1 - latTan2 + c) +\n        (a5 / 120) * (5 - 18 * latTan2 + latTan4 + 72 * c - 58 * E_P2)) +\n    500000;\n\n  let northing =\n    K0 *\n    (m +\n      n *\n        latTan *\n        (a2 / 2 +\n          (a4 / 24) * (5 - latTan2 + 9 * c + 4 * c ** 2) +\n          (a6 / 720) * (61 - 58 * latTan2 + latTan4 + 600 * c - 330 * E_P2)));\n\n  if (!zone.north) {\n    northing += 10000000;\n  }\n\n  return [easting, northing];\n}\n\n/**\n * @param {number} zone The zone number.\n * @return {number} The central longitude in degrees.\n */\nfunction zoneToCentralLongitude(zone) {\n  return (zone - 1) * 6 - 180 + 3;\n}\n\n/**\n * @type {Array<RegExp>}\n */\nconst epsgRegExes = [\n  /^EPSG:(\\d+)$/,\n  /^urn:ogc:def:crs:EPSG::(\\d+)$/,\n  /^http:\\/\\/www\\.opengis\\.net\\/def\\/crs\\/EPSG\\/0\\/(\\d+)$/,\n];\n\n/**\n * @param {string} code The projection code.\n * @return {UTMZone|null} The UTM zone info (or null if not UTM).\n */\nexport function zoneFromCode(code) {\n  let epsgId = 0;\n  for (const re of epsgRegExes) {\n    const match = code.match(re);\n    if (match) {\n      epsgId = parseInt(match[1]);\n      break;\n    }\n  }\n  if (!epsgId) {\n    return null;\n  }\n\n  let number = 0;\n  let north = false;\n  if (epsgId > 32700 && epsgId < 32761) {\n    number = epsgId - 32700;\n  } else if (epsgId > 32600 && epsgId < 32661) {\n    north = true;\n    number = epsgId - 32600;\n  }\n  if (!number) {\n    return null;\n  }\n\n  return {number, north};\n}\n\n/**\n * @param {function(number, number, UTMZone): import('../coordinate.js').Coordinate} transformer The transformer.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../proj.js').TransformFunction} The transform function.\n */\nfunction makeTransformFunction(transformer, zone) {\n  return function (input, output, dimension, stride) {\n    const length = input.length;\n    dimension = dimension > 1 ? dimension : 2;\n    stride = stride ?? dimension;\n    if (!output) {\n      if (dimension > 2) {\n        output = input.slice();\n      } else {\n        output = new Array(length);\n      }\n    }\n    for (let i = 0; i < length; i += stride) {\n      const x = input[i];\n      const y = input[i + 1];\n      const coord = transformer(x, y, zone);\n      output[i] = coord[0];\n      output[i + 1] = coord[1];\n    }\n    return output;\n  };\n}\n\n/**\n * @param {string} code The projection code.\n * @return {import('./Projection.js').default|null} A projection or null if unable to create one.\n */\nexport function makeProjection(code) {\n  const zone = zoneFromCode(code);\n  if (!zone) {\n    return null;\n  }\n  return new Projection({code, units: 'm'});\n}\n\n/**\n * @param {import('./Projection.js').default} projection The projection.\n * @return {import('../proj.js').Transforms|null} The transforms lookup or null if unable to handle projection.\n */\nexport function makeTransforms(projection) {\n  const zone = zoneFromCode(projection.getCode());\n  if (!zone) {\n    return null;\n  }\n\n  return {\n    forward: makeTransformFunction(fromLonLat, zone),\n    inverse: makeTransformFunction(toLonLat, zone),\n  };\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {warn} from './console.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport Projection from './proj/Projection.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {\n  makeProjection as makeUTMProjection,\n  makeTransforms as makeUTMTransforms,\n} from './proj/utm.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * @typedef {Object} Transforms\n * @property {TransformFunction} forward The forward transform (from geographic).\n * @property {TransformFunction} inverse The inverse transform (to geographic).\n */\n\n/**\n * @type {Array<function(Projection): Transforms|null>}\n */\nconst transformFactories = [makeUTMTransforms];\n\n/**\n * @type {Array<function(string): Projection|null>}\n */\nconst projectionFactories = [makeUTMProjection];\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @callback TransformFunction\n * @param {Array<number>} input\n * @param {Array<number>} [output]\n * @param {number} [dimension]\n * @param {number} [stride]\n * @return {Array<number>}\n *\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  if (!(typeof projectionLike === 'string')) {\n    return projectionLike;\n  }\n  const projection = getProj(projectionLike);\n  if (projection) {\n    return projection;\n  }\n  for (const makeProjection of projectionFactories) {\n    const projection = makeProjection(projectionLike);\n    if (projection) {\n      return projection;\n    }\n  }\n  return null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (!toEPSG4326 && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimensions that should be transformed.\n     * @param {number} [stride] Stride.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension, stride) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      stride = stride ?? dimension;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += stride) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = stride; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} source Source Projection object.\n * @param {Projection} destination Destination Projection\n *     object.\n * @return {TransformFunction|null} Transform function.\n */\nexport function getTransformFromProjections(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (transformFunc) {\n    return transformFunc;\n  }\n\n  /**\n   * @type {Transforms|null}\n   */\n  let sourceTransforms = null;\n\n  /**\n   * @type {Transforms|null}\n   */\n  let destinationTransforms = null;\n\n  // lazily add projections if we have supported transforms\n  for (const makeTransforms of transformFactories) {\n    if (!sourceTransforms) {\n      sourceTransforms = makeTransforms(source);\n    }\n    if (!destinationTransforms) {\n      destinationTransforms = makeTransforms(destination);\n    }\n  }\n\n  if (!sourceTransforms && !destinationTransforms) {\n    return null;\n  }\n\n  const intermediateCode = 'EPSG:4326';\n  if (!destinationTransforms) {\n    const toDestination = getTransformFunc(intermediateCode, destinationCode);\n    if (toDestination) {\n      transformFunc = composeTransformFuncs(\n        sourceTransforms.inverse,\n        toDestination,\n      );\n    }\n  } else if (!sourceTransforms) {\n    const fromSource = getTransformFunc(sourceCode, intermediateCode);\n    if (fromSource) {\n      transformFunc = composeTransformFuncs(\n        fromSource,\n        destinationTransforms.forward,\n      );\n    }\n  } else {\n    transformFunc = composeTransformFuncs(\n      sourceTransforms.inverse,\n      destinationTransforms.forward,\n    );\n  }\n\n  if (transformFunc) {\n    addProjection(source);\n    addProjection(destination);\n    addTransformFunc(source, destination, transformFunc);\n  }\n\n  return transformFunc;\n}\n\n/**\n * @param {TransformFunction} t1 The first transform function.\n * @param {TransformFunction} t2 The second transform function.\n * @return {TransformFunction} The composed transform function.\n */\nfunction composeTransformFuncs(t1, t2) {\n  return function (input, output, dimensions, stride) {\n    output = t1(input, output, dimensions, stride);\n    return t2(output, output, dimensions, stride);\n  };\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original). If there\n * is no available transform between the two projection, the function will throw\n * an error.\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  if (!transformFunc) {\n    const sourceCode = get(source).getCode();\n    const destinationCode = get(destination).getCode();\n    throw new Error(\n      `No transform available between ${sourceCode} and ${destinationCode}`,\n    );\n  }\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://web.archive.org/web/20210504233957/http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n\n/**\n * Calculate the intersection point of two line segments.\n * Reference: https://stackoverflow.com/a/72474223/2389327\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} segment1 The first line segment as an array of two points.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} segment2 The second line segment as an array of two points.\n * @return {import(\"../../coordinate.js\").Coordinate|undefined} The intersection point or `undefined` if no intersection.\n */\nexport function getIntersectionPoint(segment1, segment2) {\n  const [a, b] = segment1;\n  const [c, d] = segment2;\n  const t =\n    ((a[0] - c[0]) * (c[1] - d[1]) - (a[1] - c[1]) * (c[0] - d[0])) /\n    ((a[0] - b[0]) * (c[1] - d[1]) - (a[1] - b[1]) * (c[0] - d[0]));\n  const u =\n    ((a[0] - c[0]) * (a[1] - b[1]) - (a[1] - c[1]) * (a[0] - b[0])) /\n    ((a[0] - b[0]) * (c[1] - d[1]) - (a[1] - b[1]) * (c[0] - d[0]));\n\n  // Check if lines actually intersect\n  if (0 <= t && t <= 1 && 0 <= u && u <= 1) {\n    return [a[0] + t * (b[0] - a[0]), a[1] + t * (b[1] - a[1])];\n  }\n  return undefined;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {import('../../extent.js').Extent} [coordinatesExtent] Coordinates extent\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n  coordinatesExtent,\n) {\n  coordinatesExtent =\n    coordinatesExtent ??\n    extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (\n    (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) ||\n    (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3])\n  ) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return hashZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {number} Hash.\n */\nexport function hashZXY(z, x, y) {\n  return (x << z) + y;\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e5, 1e5, 1e5, 1e5, 2, 2];\n\n/**\n * A matrix string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  return transformString;\n}\n\n/**\n * Create a transform from a CSS transform matrix string.\n * @param {string} cssTransform The CSS string to parse.\n * @return {!Transform} The transform.\n */\nfunction fromString(cssTransform) {\n  const values = cssTransform.substring(7, cssTransform.length - 1).split(',');\n  return values.map(parseFloat);\n}\n\n/**\n * Compare two matrices for equality.\n * @param {!string} cssTransform1 A CSS transform matrix string.\n * @param {!string} cssTransform2 A CSS transform matrix string.\n * @return {boolean} The two matrices are equal.\n */\nexport function equivalent(cssTransform1, cssTransform2) {\n  const mat1 = fromString(cssTransform1);\n  const mat2 = fromString(cssTransform2);\n  for (let i = 0; i < 6; ++i) {\n    if (Math.round((mat1[i] - mat2[i]) * matrixPrecision[i]) !== 0) {\n      return false;\n    }\n  }\n  return true;\n}\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>|undefined} */\n  let lastArgs;\n\n  let lastThis;\n\n  /**\n   * @this {*} Only need to know if `this` changed, don't care what type\n   * @return {ReturnType} Memoized value\n   */\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!lastArgs || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\nimport Event from './Event.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '10.6.1';\n","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {abstract} from './util.js';\n\n/**\n * A function that takes a {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes a {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * A key assigned to the tile. This is used in conjunction with a source key\n     * to determine if a cached version of this tile may be used by the renderer.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @private\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n    this.setState(TileState.EMPTY);\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state === TileState.EMPTY) {\n      // no more state changes\n      return;\n    }\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.release();\n    super.disposeInternal();\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.lastChild.remove();\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement ||\n    data instanceof ImageBitmap\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * This is set as the cancellation reason when a tile is disposed.\n */\nexport const disposedError = new Error('disposed');\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true},\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @property {AbortController} [controller] An abort controller.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n\n    /**\n     * @type {AbortController|null}\n     * @private\n     */\n    this.controller_ = options.controller || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load the tile data.\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.controller_) {\n      this.controller_.abort(disposedError);\n      this.controller_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (once) {\n    const originalListener = listener;\n    /**\n     * @param {Event|import('./events/Event.js').default} event The event\n     * @return {void|boolean} When the function returns `false`, event propagation will stop.\n     * @this {typeof target}\n     */\n    listener = function (event) {\n      target.removeEventListener(type, listener);\n      return originalListener.call(thisArg ?? this, event);\n    };\n  } else if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [clipExtent] Clip extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        if (src.clipExtent) {\n          stitchContext.save();\n          const xPos = (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale;\n          const yPos = -(src.clipExtent[3] - sourceDataExtent[3]) * stitchScale;\n          const width = getWidth(src.clipExtent) * stitchScale;\n          const height = getHeight(src.clipExtent) * stitchScale;\n          stitchContext.rect(\n            interpolate ? xPos : Math.round(xPos),\n            interpolate ? yPos : Math.round(yPos),\n            interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n            interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n          );\n          stitchContext.clip();\n        }\n\n        const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n        const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n        const srcWidth = getWidth(src.extent) * stitchScale;\n        const srcHeight = getHeight(src.extent) * stitchScale;\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n\n        if (src.clipExtent) {\n          stitchContext.restore();\n        }\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {\n  createTransformFromCoordinateTransform,\n  getTransform,\n  transform,\n} from '../proj.js';\nimport {apply as applyMatrix} from '../transform.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   * @param {import(\"../transform.js\").Transform} [sourceMatrix] Source transform matrix.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n    sourceMatrix,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = sourceMatrix\n      ? createTransformFromCoordinateTransform((input) =>\n          applyMatrix(\n            sourceMatrix,\n            transform(input, this.targetProj_, this.sourceProj_),\n          ),\n        )\n      : getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/vec/mat4\n */\n\n/** @typedef {Array<number>} Mat4 */\n\n/**\n * @return {Mat4} \"4x4 matrix representing a 3D identity transform.\"\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n/**\n * @param {Mat4} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Mat4} \"2D transformation matrix as flattened 4x4 matrix.\"\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @param {Mat4} [out] mat4 frustum matrix will be written into\n * @return {Mat4} out\n */\nexport function orthographic(left, right, bottom, top, near, far, out) {\n  out = out ?? create();\n  const lr = 1 / (left - right),\n    bt = 1 / (bottom - top),\n    nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3\n *\n * @param {Mat4} m The matrix to scale.\n * @param {number} x How much to scale in the x direction.\n * @param {number} y How much to scale in the y direction.\n * @param {number} z How much to scale in the z direction.\n * @param {Mat4} [out] The matrix to write to.\n * @return {Mat4} out\n */\nexport function scale(m, x, y, z, out) {\n  out = out ?? create();\n  out[0] = m[0] * x;\n  out[1] = m[1] * x;\n  out[2] = m[2] * x;\n  out[3] = m[3] * x;\n  out[4] = m[4] * y;\n  out[5] = m[5] * y;\n  out[6] = m[6] * y;\n  out[7] = m[7] * y;\n  out[8] = m[8] * z;\n  out[9] = m[9] * z;\n  out[10] = m[10] * z;\n  out[11] = m[11] * z;\n  out[12] = m[12];\n  out[13] = m[13];\n  out[14] = m[14];\n  out[15] = m[15];\n  return out;\n}\n\n/**\n * Translate a matrix.\n *\n * @param {Mat4} m the matrix to translate\n * @param {number} x How much to translate in the x direction.\n * @param {number} y How much to translate in the y direction.\n * @param {number} z How much to translate in the z direction.\n * @param {Mat4} [out] the receiving matrix\n * @return {Mat4} out\n */\nexport function translate(m, x, y, z, out) {\n  out = out ?? create();\n  let a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23;\n\n  if (m === out) {\n    out[12] = m[0] * x + m[4] * y + m[8] * z + m[12];\n    out[13] = m[1] * x + m[5] * y + m[9] * z + m[13];\n    out[14] = m[2] * x + m[6] * y + m[10] * z + m[14];\n    out[15] = m[3] * x + m[7] * y + m[11] * z + m[15];\n  } else {\n    a00 = m[0];\n    a01 = m[1];\n    a02 = m[2];\n    a03 = m[3];\n    a10 = m[4];\n    a11 = m[5];\n    a12 = m[6];\n    a13 = m[7];\n    a20 = m[8];\n    a21 = m[9];\n    a22 = m[10];\n    a23 = m[11];\n\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n\n    out[12] = a00 * x + a10 * y + a20 * z + m[12];\n    out[13] = a01 * x + a11 * y + a21 * z + m[13];\n    out[14] = a02 * x + a12 * y + a22 * z + m[14];\n    out[15] = a03 * x + a13 * y + a23 * z + m[15];\n  }\n\n  return out;\n}\n\n/**\n * @param {number} x x translation.\n * @param {number} y y translation.\n * @param {number} z z translation.\n * @param {Mat4} [out] optional matrix to store result\n * @return {Mat4} out\n */\nexport function translation(x, y, z, out) {\n  out = out ?? create();\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = x;\n  out[13] = y;\n  out[14] = z;\n  out[15] = 1;\n\n  return out;\n}\n","import * as mat4 from '../vec/mat4.js';\n\n/**\n * @module ol/webgl/Canvas\n */\n\nconst VERTEX_SHADER = `\n  attribute vec4 a_position;\n  attribute vec4 a_texcoord;\n\n  uniform mat4 u_matrix;\n  uniform mat4 u_textureMatrix;\n\n  varying vec2 v_texcoord;\n\n  void main() {\n    gl_Position = u_matrix * a_position;\n    vec2 texcoord = (u_textureMatrix * a_texcoord).xy;\n    v_texcoord = texcoord;\n  }\n`;\n\nconst FRAGMENT_SHADER = `\n  precision mediump float;\n\n  varying vec2 v_texcoord;\n\n  uniform sampler2D u_texture;\n\n  void main() {\n    if (\n      v_texcoord.x < 0.0 ||\n      v_texcoord.y < 0.0 ||\n      v_texcoord.x > 1.0 ||\n      v_texcoord.y > 1.0\n    ) {\n      discard;\n    }\n    gl_FragColor = texture2D(u_texture, v_texcoord);\n  }\n`;\n\n/** @typedef {import(\"../transform.js\").Transform} Matrix */\n\n/**\n * Canvas-like operations implemented in webgl.\n */\nexport class Canvas {\n  /**\n   * @param {WebGLRenderingContext} gl Context to render in.\n   */\n  constructor(gl) {\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = gl;\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.program_ = createProgram(gl, FRAGMENT_SHADER, VERTEX_SHADER);\n\n    this.positionLocation = gl.getAttribLocation(this.program_, 'a_position');\n    this.texcoordLocation = gl.getAttribLocation(this.program_, 'a_texcoord');\n\n    this.matrixLocation = gl.getUniformLocation(this.program_, 'u_matrix');\n    this.textureMatrixLocation = gl.getUniformLocation(\n      this.program_,\n      'u_textureMatrix',\n    );\n    this.textureLocation = gl.getUniformLocation(this.program_, 'u_texture');\n\n    this.positionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\n\n    this.positions = [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1];\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(this.positions),\n      gl.STATIC_DRAW,\n    );\n\n    this.texcoordBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffer);\n\n    this.texcoords = [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1];\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(this.texcoords),\n      gl.STATIC_DRAW,\n    );\n  }\n\n  /**\n   * 2dContext drawImage call implemented in webgl.\n   * Unlike images, textures do not have a width and height associated\n   * with them so we'll pass in the width and height of the texture.\n   *\n   * @param {WebGLTexture} tex Image to draw.\n   * @param {number} texWidth Image width.\n   * @param {number} texHeight Image height.\n   * @param {number} srcX Top-left x-point to read src image.\n   * @param {number} srcY Top-left y-point to read src image.\n   * @param {number} [srcWidth] Width of source to read.\n   * @param {number} [srcHeight] Height of source to read.\n   * @param {number} [dstX] Top-left x-point of destination.\n   * @param {number} [dstY] Top-left y-point of destination.\n   * @param {number} [dstWidth] Width of written image in destination.\n   * @param {number} [dstHeight] Height of written image in destination.\n   * @param {number} [width] Width of canvas.\n   * @param {number} [height] Height of canvas.\n   */\n  drawImage(\n    tex,\n    texWidth,\n    texHeight,\n    srcX,\n    srcY,\n    srcWidth,\n    srcHeight,\n    dstX,\n    dstY,\n    dstWidth,\n    dstHeight,\n    width,\n    height,\n  ) {\n    const gl = this.gl_;\n\n    if (dstX === undefined) {\n      dstX = srcX;\n    }\n    if (dstY === undefined) {\n      dstY = srcY;\n    }\n    if (srcWidth === undefined) {\n      srcWidth = texWidth;\n    }\n    if (srcHeight === undefined) {\n      srcHeight = texHeight;\n    }\n    if (dstWidth === undefined) {\n      dstWidth = srcWidth;\n    }\n    if (dstHeight === undefined) {\n      dstHeight = srcHeight;\n    }\n    if (width === undefined) {\n      width = gl.canvas.width;\n    }\n    if (height === undefined) {\n      height = gl.canvas.height;\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, tex);\n\n    gl.useProgram(this.program_);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\n    gl.enableVertexAttribArray(this.positionLocation);\n    gl.vertexAttribPointer(this.positionLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffer);\n    gl.enableVertexAttribArray(this.texcoordLocation);\n    gl.vertexAttribPointer(this.texcoordLocation, 2, gl.FLOAT, false, 0, 0);\n\n    // matrix for converting pixels to clip space\n    let matrix = mat4.orthographic(0, width, 0, height, -1, 1);\n    matrix = mat4.translate(matrix, dstX, dstY, 0);\n    matrix = mat4.scale(matrix, dstWidth, dstHeight, 1);\n    gl.uniformMatrix4fv(this.matrixLocation, false, matrix);\n\n    let texMatrix = mat4.translation(srcX / texWidth, srcY / texHeight, 0);\n    texMatrix = mat4.scale(\n      texMatrix,\n      srcWidth / texWidth,\n      srcHeight / texHeight,\n      1,\n    );\n\n    gl.uniformMatrix4fv(this.textureMatrixLocation, false, texMatrix);\n    gl.uniform1i(this.textureLocation, 0);\n    gl.drawArrays(gl.TRIANGLES, 0, this.positions.length / 2);\n  }\n}\n\n/**\n * @param {WebGLRenderingContext} gl Rendering Context.\n * @param {GLenum} type Type of shader.\n * @param {string} source source of shader.\n * @return {WebGLShader} [progam] The program.\n */\nfunction createShader(gl, type, source) {\n  const shader = gl.createShader(type);\n\n  if (shader === null) {\n    throw new Error('Shader compilation failed');\n  }\n\n  gl.shaderSource(shader, source);\n\n  gl.compileShader(shader);\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    const log = gl.getShaderInfoLog(shader);\n    if (log === null) {\n      throw new Error('Shader info log creation failed');\n    }\n    throw new Error(log);\n  }\n\n  return shader;\n}\n\n/**\n * @param {WebGLRenderingContext} gl Rendering Context.\n * @param {string} fragmentSource Fragment shader source.\n * @param {string} vertexSource Vertex shader source.\n * @return {WebGLProgram} [progam] The program.\n */\nexport function createProgram(gl, fragmentSource, vertexSource) {\n  const program = gl.createProgram();\n\n  const vertexShader = createShader(gl, gl.VERTEX_SHADER, vertexSource);\n  const fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, fragmentSource);\n  if (program === null) {\n    throw new Error('Program creation failed');\n  }\n\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n\n  gl.linkProgram(program);\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    const log = gl.getProgramInfoLog(program);\n    if (log === null) {\n      throw new Error('Program info log creation failed');\n    }\n    throw new Error();\n  }\n  return program;\n}\n","/**\n * @module ol/reproj/glreproj\n */\nimport {\n  createEmpty,\n  extend,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from '../extent.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport * as mat4 from '../vec/mat4.js';\nimport {Canvas as WebGLCanvas, createProgram} from '../webgl/Canvas.js';\n\nconst EDGE_VERTEX_SHADER = `\n  attribute vec4 a_position;\n\n  uniform mat4 u_matrix;\n\n  void main() {\n     gl_Position = u_matrix * a_position;\n  }\n`;\nconst EDGE_FRAGMENT_SHADER = `\n  precision mediump float;\n\n  uniform vec4 u_val;\n  void main() {\n     gl_FragColor = u_val;\n  }\n`;\n\nconst TRIANGLE_VERTEX_SHADER = `\n  attribute vec4 a_position;\n  attribute vec2 a_texcoord;\n\n  varying vec2 v_texcoord;\n\n  uniform mat4 u_matrix;\n\n  void main() {\n     gl_Position = u_matrix * a_position;\n     v_texcoord = a_texcoord;\n  }\n`;\nconst TRIANGLE_FRAGMENT_SHADER = `\n  precision mediump float;\n\n  varying vec2 v_texcoord;\n\n  uniform sampler2D u_texture;\n\n  void main() {\n    if (v_texcoord.x < 0.0 || v_texcoord.x > 1.0 || v_texcoord.y < 0.0 || v_texcoord.y > 1.0) {\n      discard;\n    }\n    gl_FragColor = texture2D(u_texture, v_texcoord);\n  }\n`;\n\n/**\n * Create an html canvas element and returns its webgl context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement | OffscreenCanvas>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {WebGLContextAttributes} [settings] CanvasRenderingContext2DSettings\n * @return {WebGLRenderingContext} The context.\n */\nexport function createCanvasContextWebGL(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {WebGLRenderingContext} */ (\n    canvas.getContext('webgl', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {WebGLRenderingContext} gl Context.\n */\nexport function releaseGLCanvas(gl) {\n  const canvas = gl.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n}\n\n/**\n * @type {Array<HTMLCanvasElement | OffscreenCanvas>}\n */\nexport const canvasGLPool = [];\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"../extent.js\").Extent} extent Extent.\n * @property {import(\"../extent.js\").Extent} [clipExtent] Clip extent.\n * @property {WebGLTexture} texture Texture.\n * @property {number} width Width of texture.\n * @property {number} height Height of texture.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {WebGLRenderingContext} gl the context to render in.\n * @param {number} width_ Width of the canvas.\n * @param {number} height_ Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"../extent.js\").Extent} targetExtent Target extent (tile).\n * @param {import(\"../reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {number} dataType What kind of data is the textures, must be gl.FLOAT or gl.UNSIGNED_BYTE\n * TODO: Allow setting renderEdges value in the data as this is done in \"data-space\".\n * @param {boolean | Array<number>} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchTexture.\n * @return {{framebuffer: WebGLFramebuffer, width: number, height: number, texture: WebGLTexture}} Canvas with reprojected data.\n */\nexport function render(\n  gl,\n  width_,\n  height_,\n  pixelRatio,\n  sourceResolution,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  dataType,\n  renderEdges,\n  interpolate,\n  drawSingle,\n) {\n  const width = Math.round(pixelRatio * width_);\n  const height = Math.round(pixelRatio * height_);\n  gl.canvas.width = width;\n  gl.canvas.height = height;\n\n  /** @type {WebGLFramebuffer | null} */\n  let resultFrameBuffer;\n  /** @type {WebGLTexture | null} */\n  let resultTexture;\n  {\n    resultTexture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, resultTexture);\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    if (interpolate) {\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    } else {\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    }\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      0,\n      gl.RGBA,\n      width,\n      height,\n      0,\n      gl.RGBA,\n      dataType,\n      null,\n    );\n\n    resultFrameBuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, resultFrameBuffer);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      resultTexture,\n      0,\n    );\n  }\n\n  if (resultFrameBuffer === null) {\n    throw new Error('Could not create framebuffer');\n  }\n  if (resultTexture === null) {\n    throw new Error('Could not create texture');\n  }\n\n  if (sources.length === 0) {\n    return {\n      width,\n      height,\n      framebuffer: resultFrameBuffer,\n      texture: resultTexture,\n    };\n  }\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  /** @type {WebGLTexture | null} */\n  let stitchTexture;\n  /** @type {number} */\n  let stitchWidth;\n  /** @type {number} */\n  let stitchHeight;\n  const stitchScale = 1 / sourceResolution;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchTexture = gl.createTexture();\n    if (resultTexture === null) {\n      throw new Error('Could not create texture');\n    }\n    stitchWidth = Math.round(getWidth(sourceDataExtent) * stitchScale);\n    stitchHeight = Math.round(getHeight(sourceDataExtent) * stitchScale);\n\n    // Make sure we do not exceed the max texture size by lowering the resolution for this image.\n    // https://github.com/openlayers/openlayers/pull/15860#issuecomment-2254123580\n    const maxTexSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n    const largeSide = Math.max(stitchWidth, stitchHeight);\n    const scaleFactor = largeSide > maxTexSize ? maxTexSize / largeSide : 1;\n    const stitchWidthFixed = Math.round(stitchWidth * scaleFactor);\n    const stitchHeightFixed = Math.round(stitchHeight * scaleFactor);\n\n    gl.bindTexture(gl.TEXTURE_2D, stitchTexture);\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    if (interpolate) {\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    } else {\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    }\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      0,\n      gl.RGBA,\n      stitchWidthFixed,\n      stitchHeightFixed,\n      0,\n      gl.RGBA,\n      dataType,\n      null,\n    );\n\n    const fb = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, fb);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      stitchTexture,\n      0,\n    );\n    const webGLCanvas = new WebGLCanvas(gl);\n\n    sources.forEach(function (src, i, arr) {\n      const xPos =\n        (src.extent[0] - sourceDataExtent[0]) * stitchScale * scaleFactor;\n      const yPos =\n        -(src.extent[3] - sourceDataExtent[3]) * stitchScale * scaleFactor;\n      const srcWidth = getWidth(src.extent) * stitchScale * scaleFactor;\n      const srcHeight = getHeight(src.extent) * stitchScale * scaleFactor;\n      gl.bindFramebuffer(gl.FRAMEBUFFER, fb);\n      gl.viewport(0, 0, stitchWidthFixed, stitchHeightFixed);\n\n      if (src.clipExtent) {\n        const xPos =\n          (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale * scaleFactor;\n        const yPos =\n          -(src.clipExtent[3] - sourceDataExtent[3]) *\n          stitchScale *\n          scaleFactor;\n        const width = getWidth(src.clipExtent) * stitchScale * scaleFactor;\n        const height = getHeight(src.clipExtent) * stitchScale * scaleFactor;\n        gl.enable(gl.SCISSOR_TEST);\n        gl.scissor(\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n          interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n        );\n      }\n\n      webGLCanvas.drawImage(\n        src.texture,\n        src.width,\n        src.height,\n        gutter,\n        gutter,\n        src.width - 2 * gutter,\n        src.height - 2 * gutter,\n        interpolate ? xPos : Math.round(xPos),\n        interpolate ? yPos : Math.round(yPos),\n        interpolate ? srcWidth : Math.round(xPos + srcWidth) - Math.round(xPos),\n        interpolate\n          ? srcHeight\n          : Math.round(yPos + srcHeight) - Math.round(yPos),\n        stitchWidthFixed,\n        stitchHeightFixed,\n      );\n\n      gl.disable(gl.SCISSOR_TEST);\n    });\n    gl.deleteFramebuffer(fb);\n  } else {\n    stitchTexture = sources[0].texture;\n    stitchWidth = sources[0].width;\n    stitchHeight = sources[0].width;\n  }\n\n  const targetTopLeft = getTopLeft(targetExtent);\n  const sourceTopLeft = getTopLeft(sourceDataExtent);\n\n  const getUVs = (\n    /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ target,\n  ) => {\n    const u0 =\n      ((target[0][0] - targetTopLeft[0]) / targetResolution) * pixelRatio;\n    const v0 =\n      (-(target[0][1] - targetTopLeft[1]) / targetResolution) * pixelRatio;\n    const u1 =\n      ((target[1][0] - targetTopLeft[0]) / targetResolution) * pixelRatio;\n    const v1 =\n      (-(target[1][1] - targetTopLeft[1]) / targetResolution) * pixelRatio;\n    const u2 =\n      ((target[2][0] - targetTopLeft[0]) / targetResolution) * pixelRatio;\n    const v2 =\n      (-(target[2][1] - targetTopLeft[1]) / targetResolution) * pixelRatio;\n    return {u1, v1, u0, v0, u2, v2};\n  };\n\n  gl.bindFramebuffer(gl.FRAMEBUFFER, resultFrameBuffer);\n  gl.viewport(0, 0, width, height);\n\n  // Draw source to reprojtile\n  {\n    /** @type {Array<number>} */\n    const vertices = [];\n    /** @type {Array<number>} */\n    const texcoords = [];\n\n    const triProgram = createProgram(\n      gl,\n      TRIANGLE_FRAGMENT_SHADER,\n      TRIANGLE_VERTEX_SHADER,\n    );\n    gl.useProgram(triProgram);\n\n    // Bind image\n    const textureLocation = gl.getUniformLocation(triProgram, 'u_texture');\n    gl.bindTexture(gl.TEXTURE_2D, stitchTexture);\n\n    // Tell the shader to get the texture from texture unit 0\n    gl.uniform1i(textureLocation, 0);\n\n    // Calculate vert and tex coordinates.\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const source = triangle.source;\n      const target = triangle.target;\n      // Make sure that everything is on pixel boundaries\n      const {u1, v1, u0, v0, u2, v2} = getUVs(target);\n\n      const su0 =\n        (source[0][0] - sourceTopLeft[0]) / sourceResolution / stitchWidth;\n      const sv0 =\n        -(source[0][1] - sourceTopLeft[1]) / sourceResolution / stitchHeight;\n      const su1 =\n        (source[1][0] - sourceTopLeft[0]) / sourceResolution / stitchWidth;\n      const sv1 =\n        -(source[1][1] - sourceTopLeft[1]) / sourceResolution / stitchHeight;\n      const su2 =\n        (source[2][0] - sourceTopLeft[0]) / sourceResolution / stitchWidth;\n      const sv2 =\n        -(source[2][1] - sourceTopLeft[1]) / sourceResolution / stitchHeight;\n\n      vertices.push(u1, v1, u0, v0, u2, v2);\n      texcoords.push(su1, sv1, su0, sv0, su2, sv2);\n    });\n\n    // Convert pixel space to clip space.\n    const matrix = mat4.orthographic(0, width, height, 0, -1, 1);\n    const matrixLocation = gl.getUniformLocation(triProgram, 'u_matrix');\n    gl.uniformMatrix4fv(matrixLocation, false, matrix);\n\n    const positionLocation = gl.getAttribLocation(triProgram, 'a_position');\n    const positionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\n    gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(positionLocation);\n\n    const texcoordLocation = gl.getAttribLocation(triProgram, 'a_texcoord');\n    const texcoordBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(texcoords), gl.STATIC_DRAW);\n    gl.vertexAttribPointer(texcoordLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(texcoordLocation);\n\n    gl.drawArrays(gl.TRIANGLES, 0, vertices.length / 2);\n  }\n\n  if (renderEdges) {\n    const edgeProgram = createProgram(\n      gl,\n      EDGE_FRAGMENT_SHADER,\n      EDGE_VERTEX_SHADER,\n    );\n    gl.useProgram(edgeProgram);\n    const matrix = mat4.orthographic(0, width, height, 0, -1, 1);\n    const matrixLocation = gl.getUniformLocation(edgeProgram, 'u_matrix');\n    gl.uniformMatrix4fv(matrixLocation, false, matrix);\n\n    const burnval = Array.isArray(renderEdges) ? renderEdges : [0, 0, 0, 255];\n    const burnvalLocation = gl.getUniformLocation(edgeProgram, 'u_val');\n    const isFloat = true;\n    if (isFloat) {\n      gl.uniform4fv(burnvalLocation, burnval);\n    } else {\n      gl.uniform4iv(burnvalLocation, burnval);\n    }\n\n    const positionLocation = gl.getAttribLocation(edgeProgram, 'a_position');\n    const positionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n    gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(positionLocation);\n\n    /** @type {Array<number>} */\n    const lines = triangulation.getTriangles().reduce(function (\n      /** @type {Array<number>} */ lines,\n      triangle,\n    ) {\n      const target = triangle.target;\n      const {u1, v1, u0, v0, u2, v2} = getUVs(target);\n\n      return lines.concat([u1, v1, u0, v0, u0, v0, u2, v2, u2, v2, u1, v1]);\n    }, []);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(lines), gl.STATIC_DRAW);\n    gl.drawArrays(gl.LINES, 0, lines.length / 2);\n  }\n\n  return {\n    width,\n    height,\n    framebuffer: resultFrameBuffer,\n    texture: resultTexture,\n  };\n}\n","/**\n * @module ol/reproj/DataTile\n */\n\nimport DataTile, {asArrayLike, asImageLike, toArray} from '../DataTile.js';\nimport TileState from '../TileState.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceExtentResolution} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\nimport {ERROR_THRESHOLD} from './common.js';\nimport {\n  canvasGLPool,\n  createCanvasContextWebGL,\n  releaseGLCanvas,\n  render as renderReprojected,\n} from './glreproj.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../DataTile.js\").default} TileGetter\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {DataTile} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n * @property {import(\"../proj/Projection.js\").default} targetProj Target projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n * @property {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n * @property {import(\"../tilecoord.js\").TileCoord} [wrappedTileCoord] Coordinate of the tile wrapped in X.\n * @property {number} pixelRatio Pixel ratio.\n * @property {number} gutter Gutter of the source tiles.\n * @property {TileGetter} getTileFunction Function returning source tiles (z, x, y, pixelRatio).\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {number} [errorThreshold] Acceptable reprojection error (in px).\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {import(\"../transform.js\").Transform} [transformMatrix] Source transform matrix.\n * @property {boolean} [renderEdges] Render reprojection edges.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected data tile.\n * See {@link module:ol/source/DataTile~DataTileSource}.\n *\n */\nclass ReprojDataTile extends DataTile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    super({\n      tileCoord: options.tileCoord,\n      loader: () => Promise.resolve(new Uint8ClampedArray(4)),\n      interpolate: options.interpolate,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {boolean | Array<number>}\n     */\n    this.renderEdges_ =\n      options.renderEdges !== undefined ? options.renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter;\n\n    /**\n     * @type {import(\"../DataTile.js\").Data}\n     * @private\n     */\n    this.reprojData_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.reprojError_ = null;\n\n    /**\n     * @type {import('../size.js').Size}\n     * @private\n     */\n    this.reprojSize_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = options.sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = options.targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = options.wrappedTileCoord || options.tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const sourceProj = options.sourceProj;\n    const sourceProjExtent = sourceProj.getExtent();\n    const sourceTileGridExtent = options.sourceTileGrid.getExtent();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceTileGridExtent\n        ? getIntersection(sourceProjExtent, sourceTileGridExtent)\n        : sourceProjExtent\n      : sourceTileGridExtent;\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = this.targetTileGrid_.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const targetProj = options.targetProj;\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      options.errorThreshold !== undefined\n        ? options.errorThreshold\n        : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n      options.transformMatrix,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = this.sourceTileGrid_.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = this.sourceTileGrid_.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n        const getTile = options.getTileFunction;\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTile(this.sourceZ_, srcX, srcY, this.pixelRatio_);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('../size.js').Size} Tile size.\n   * @override\n   */\n  getSize() {\n    return this.reprojSize_;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {import(\"../DataTile.js\").Data} Tile data.\n   * @override\n   */\n  getData() {\n    return this.reprojData_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @override\n   */\n  getError() {\n    return this.reprojError_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const dataSources = [];\n    let imageLike = false;\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const size = tile.getSize();\n      const gutter = this.gutter_;\n      /**\n       * @type {import(\"../DataTile.js\").ArrayLike}\n       */\n      let tileData;\n      const arrayData = asArrayLike(tile.getData());\n      if (arrayData) {\n        tileData = arrayData;\n      } else {\n        imageLike = true;\n        tileData = toArray(asImageLike(tile.getData()));\n      }\n      const pixelSize = [size[0] + 2 * gutter, size[1] + 2 * gutter];\n      const isFloat = tileData instanceof Float32Array;\n      const pixelCount = pixelSize[0] * pixelSize[1];\n      const DataType = isFloat ? Float32Array : Uint8ClampedArray;\n      const tileDataR = new DataType(tileData.buffer);\n      const bytesPerElement = DataType.BYTES_PER_ELEMENT;\n      const bytesPerPixel = (bytesPerElement * tileDataR.length) / pixelCount;\n      const bytesPerRow = tileDataR.byteLength / pixelSize[1];\n      const bandCount = Math.floor(\n        bytesPerRow / bytesPerElement / pixelSize[0],\n      );\n      const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n      extent[0] += source.offset;\n      extent[2] += source.offset;\n      const clipExtent = this.clipExtent_?.slice();\n      if (clipExtent) {\n        clipExtent[0] += source.offset;\n        clipExtent[2] += source.offset;\n      }\n      dataSources.push({\n        extent: extent,\n        clipExtent: clipExtent,\n        data: tileDataR,\n        dataType: DataType,\n        bytesPerPixel: bytesPerPixel,\n        pixelSize: pixelSize,\n        bandCount: bandCount,\n      });\n    });\n    this.sourceTiles_.length = 0;\n\n    if (dataSources.length === 0) {\n      this.state = TileState.ERROR;\n      this.changed();\n      return;\n    }\n\n    const z = this.wrappedTileCoord_[0];\n    const size = this.targetTileGrid_.getTileSize(z);\n    const targetWidth = typeof size === 'number' ? size : size[0];\n    const targetHeight = typeof size === 'number' ? size : size[1];\n    const outWidth = targetWidth * this.pixelRatio_;\n    const outHeight = targetHeight * this.pixelRatio_;\n    const targetResolution = this.targetTileGrid_.getResolution(z);\n    const sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n\n    const bandCount = dataSources[0].bandCount;\n    const dataR = new dataSources[0].dataType(bandCount * outWidth * outHeight);\n\n    const gl = createCanvasContextWebGL(outWidth, outHeight, canvasGLPool, {\n      premultipliedAlpha: false,\n      antialias: false,\n    });\n\n    let willInterpolate;\n    const format = gl.RGBA;\n    let textureType;\n    if (dataSources[0].dataType == Float32Array) {\n      textureType = gl.FLOAT;\n      gl.getExtension('WEBGL_color_buffer_float');\n      gl.getExtension('OES_texture_float');\n      gl.getExtension('EXT_float_blend');\n      const extension = gl.getExtension('OES_texture_float_linear');\n      const canInterpolate = extension !== null;\n      willInterpolate = canInterpolate && this.interpolate;\n    } else {\n      textureType = gl.UNSIGNED_BYTE;\n      willInterpolate = this.interpolate;\n    }\n\n    const BANDS_PR_REPROJ = 4;\n    const reprojs = Math.ceil(bandCount / BANDS_PR_REPROJ);\n    for (let reproj = reprojs - 1; reproj >= 0; --reproj) {\n      const sources = [];\n      for (let i = 0, len = dataSources.length; i < len; ++i) {\n        const dataSource = dataSources[i];\n\n        const pixelSize = dataSource.pixelSize;\n        const width = pixelSize[0];\n        const height = pixelSize[1];\n\n        const data = new dataSource.dataType(BANDS_PR_REPROJ * width * height);\n        const dataS = dataSource.data;\n        let offset = reproj * BANDS_PR_REPROJ;\n        for (let j = 0, len = data.length; j < len; j += BANDS_PR_REPROJ) {\n          data[j] = dataS[offset];\n          data[j + 1] = dataS[offset + 1];\n          data[j + 2] = dataS[offset + 2];\n          data[j + 3] = dataS[offset + 3];\n          offset += bandCount;\n        }\n\n        const texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n\n        if (willInterpolate) {\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        } else {\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        }\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texImage2D(\n          gl.TEXTURE_2D,\n          0,\n          format,\n          width,\n          height,\n          0,\n          format,\n          textureType,\n          data,\n        );\n\n        sources.push({\n          extent: dataSource.extent,\n          clipExtent: dataSource.clipExtent,\n          texture: texture,\n          width: width,\n          height: height,\n        });\n      }\n\n      const {framebuffer, width, height} = renderReprojected(\n        gl,\n        targetWidth,\n        targetHeight,\n        this.pixelRatio_,\n        sourceResolution,\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        textureType,\n        this.renderEdges_,\n        willInterpolate,\n      );\n\n      // The texture is always RGBA.\n      const rows = width;\n      const cols = height * BANDS_PR_REPROJ;\n      const data = new dataSources[0].dataType(rows * cols);\n      gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n      gl.readPixels(0, 0, width, height, gl.RGBA, textureType, data);\n\n      let offset = reproj * BANDS_PR_REPROJ;\n      for (let i = 0, len = data.length; i < len; i += BANDS_PR_REPROJ) {\n        // The data read by `readPixels` is flipped in the y-axis so flip it again.\n        const flipY = (rows - 1 - ((i / cols) | 0)) * cols + (i % cols);\n        dataR[offset] = data[flipY];\n        dataR[offset + 1] = data[flipY + 1];\n        dataR[offset + 2] = data[flipY + 2];\n        dataR[offset + 3] = data[flipY + 3];\n        offset += bandCount;\n      }\n    }\n\n    releaseGLCanvas(gl);\n    canvasGLPool.push(gl.canvas);\n\n    if (imageLike) {\n      const context = createCanvasContext2D(targetWidth, targetHeight);\n      const imageData = new ImageData(dataR, targetWidth);\n      context.putImageData(imageData, 0, 0);\n      this.reprojData_ = context.canvas;\n    } else {\n      this.reprojData_ = dataR;\n    }\n    this.reprojSize_ = [Math.round(outWidth), Math.round(outHeight)];\n    this.state = TileState.LOADED;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    let leftToLoad = 0;\n\n    this.sourcesListenerKeys_ = [];\n    this.sourceTiles_.forEach(({tile}) => {\n      const state = tile.getState();\n      if (state !== TileState.IDLE && state !== TileState.LOADING) {\n        return;\n      }\n      leftToLoad++;\n\n      const sourceListenKey = listen(tile, EventType.CHANGE, () => {\n        const state = tile.getState();\n        if (\n          state == TileState.LOADED ||\n          state == TileState.ERROR ||\n          state == TileState.EMPTY\n        ) {\n          unlistenByKey(sourceListenKey);\n          leftToLoad--;\n          if (leftToLoad === 0) {\n            this.unlistenSources_();\n            this.reproject_();\n          }\n        }\n      });\n      this.sourcesListenerKeys_.push(sourceListenKey);\n    });\n\n    if (leftToLoad === 0) {\n      setTimeout(this.reproject_.bind(this), 0);\n    } else {\n      this.sourceTiles_.forEach(function ({tile}) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojDataTile;\n","/**\n * @module ol/tilegrid\n */\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {toSize} from './size.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * a simple string (e.g. `'© Acme Inc.'`)\n * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible ?? true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n  if (!Array.isArray(attributionLike)) {\n    attributionLike = [attributionLike];\n  }\n  return (frameState) => attributionLike;\n}\n\nexport default Source;\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {abstract, getUid} from '../util.js';\nimport Source from './Source.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @template {import(\"../Tile.js\").default} [TileType=import(\"../Tile.js\").default]\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     * @protected\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || getUid(this);\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {TileType|null} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    const gridProjection =\n      projection !== undefined ? projection : this.getProjection();\n    const tileGrid =\n      projection !== undefined\n        ? this.getTileGridForProjection(gridProjection)\n        : this.tileGrid || this.getTileGridForProjection(gridProjection);\n    if (this.getWrapX() && gridProjection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, gridProjection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached reprojected tiles from the source. The next render cycle will create new tiles.\n   * @api\n   */\n  clear() {}\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/DataTile\n */\nimport DataTile from '../DataTile.js';\nimport TileState from '../TileState.js';\nimport EventType from '../events/EventType.js';\nimport {toPromise} from '../functions.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojDataTile from '../reproj/DataTile.js';\nimport {toSize} from '../size.js';\nimport {\n  createXYZ,\n  extentFromProjection,\n  getForProjection as getTileGridForProjection,\n} from '../tilegrid.js';\nimport {getUid} from '../util.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\n\n/**\n * @typedef {'anonymous'|'use-credentials'} CrossOriginAttribute\n */\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {AbortSignal} signal An abort controller signal.\n * @property {CrossOriginAttribute} [crossOrigin] The cross-origin attribute for images.\n * @property {number} [maxY] The maximum y coordinate at the given z level.  Will be undefined if the\n * underlying tile grid does not have a known extent.\n */\n\n/**\n * Data tile loading function.  The function is called with z, x, and y tile coordinates and\n * returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * @typedef {function(number, number, number, LoaderOptions) : (import(\"../DataTile.js\").Data|Promise<import(\"../DataTile.js\").Data>)} Loader\n */\n\n/**\n * @typedef {Object} Options\n * @property {Loader} [loader] Data loader.  Called with z, x, and y tile coordinates.\n * Returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The pixel width and height of the source tiles.\n * This may be different than the rendered pixel size if a `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around data tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported data should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Tile projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"./Source.js\").State} [state] The source state.\n * @property {boolean} [wrapX=false] Render tiles beyond the antimeridian.\n * @property {number} [transition] Transition time when fading in new tiles (in milliseconds).\n * @property {number} [bandCount=4] Number of bands represented in the data.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {CrossOriginAttribute} [crossOrigin='anonymous'] The crossOrigin property to pass to loaders for image data.\n * @property {string} [key] Key for use in caching tiles.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * A source for typed array data tiles.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @template {import(\"../Tile.js\").default} [TileType=DataTile]\n * @extends TileSource<TileType>\n * @api\n */\nclass DataTileSource extends TileSource {\n  /**\n   * @param {Options} options DataTile source options.\n   */\n  constructor(options) {\n    const projection =\n      options.projection === undefined ? 'EPSG:3857' : options.projection;\n\n    let tileGrid = options.tileGrid;\n    if (tileGrid === undefined && projection) {\n      tileGrid = createXYZ({\n        extent: extentFromProjection(projection),\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize,\n      });\n    }\n\n    super({\n      cacheSize: 0.1, // don't cache on the source\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: projection,\n      tileGrid: tileGrid,\n      state: options.state,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {import('../size.js').Size|null}\n     */\n    this.tileSize_ = options.tileSize ? toSize(options.tileSize) : null;\n\n    /**\n     * @private\n     * @type {Array<import('../size.js').Size>|null}\n     */\n    this.tileSizes_ = null;\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n    /**\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @private\n     */\n    this.handleTileChange_ = this.handleTileChange_.bind(this);\n\n    /**\n     * @type {number}\n     */\n    this.bandCount = options.bandCount === undefined ? 4 : options.bandCount; // assume RGBA if undefined\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection_ = {};\n\n    /**\n     * @private\n     * @type {CrossOriginAttribute}\n     */\n    this.crossOrigin_ = options.crossOrigin || 'anonymous';\n\n    /**\n     * @type {import(\"../transform.js\").Transform|null}\n     */\n    this.transformMatrix = null;\n  }\n\n  /**\n   * Set the source tile sizes.  The length of the array is expected to match the number of\n   * levels in the tile grid.\n   * @protected\n   * @param {Array<import('../size.js').Size>} tileSizes An array of tile sizes.\n   */\n  setTileSizes(tileSizes) {\n    this.tileSizes_ = tileSizes;\n  }\n\n  /**\n   * Get the source tile size at the given zoom level.  This may be different than the rendered tile\n   * size.\n   * @protected\n   * @param {number} z Tile zoom level.\n   * @return {import('../size.js').Size} The source tile size.\n   */\n  getTileSize(z) {\n    if (this.tileSizes_) {\n      return this.tileSizes_[z];\n    }\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    const tileGrid = this.getTileGrid();\n    return tileGrid ? toSize(tileGrid.getTileSize(z)) : [256, 256];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutterForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (\n      (!thisProj || equivalent(thisProj, projection)) &&\n      !this.transformMatrix\n    ) {\n      return this.gutter_;\n    }\n\n    return 0;\n  }\n\n  /**\n   * @param {Loader} loader The data loader.\n   * @protected\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} targetProj The output projection.\n   * @param {import(\"../proj/Projection.js\").default} sourceProj The input projection.\n   * @return {!TileType} Tile.\n   */\n  getReprojTile_(z, x, y, targetProj, sourceProj) {\n    const sourceTileGrid =\n      this.tileGrid || this.getTileGridForProjection(sourceProj || targetProj);\n    const reprojTilePixelRatio = Math.max.apply(\n      null,\n      sourceTileGrid.getResolutions().map((r, z) => {\n        const tileSize = toSize(sourceTileGrid.getTileSize(z));\n        const textureSize = this.getTileSize(z);\n        return Math.max(\n          textureSize[0] / tileSize[0],\n          textureSize[1] / tileSize[1],\n        );\n      }),\n    );\n\n    const targetTileGrid = this.getTileGridForProjection(targetProj);\n    const tileCoord = [z, x, y];\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      targetProj,\n    );\n\n    const options = Object.assign(\n      {\n        sourceProj: sourceProj || targetProj,\n        sourceTileGrid,\n        targetProj,\n        targetTileGrid,\n        tileCoord,\n        wrappedTileCoord,\n        pixelRatio: reprojTilePixelRatio,\n        gutter: this.gutter_,\n        getTileFunction: (z, x, y, pixelRatio) =>\n          this.getTile(z, x, y, pixelRatio),\n        transformMatrix: this.transformMatrix,\n      },\n      /** @type {import(\"../reproj/DataTile.js\").Options} */ (this.tileOptions),\n    );\n    const tile = /** @type {TileType} */ (\n      /** @type {*} */ (new ReprojDataTile(options))\n    );\n    tile.key = this.getKey();\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {TileType|null} Tile (or null if outside source extent).\n   * @override\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      projection &&\n      ((sourceProjection && !equivalent(sourceProjection, projection)) ||\n        this.transformMatrix)\n    ) {\n      return this.getReprojTile_(z, x, y, projection, sourceProjection);\n    }\n\n    const size = this.getTileSize(z);\n\n    const sourceLoader = this.loader_;\n\n    const controller = new AbortController();\n\n    /**\n     * @type {LoaderOptions}\n     */\n    const loaderOptions = {\n      signal: controller.signal,\n      crossOrigin: this.crossOrigin_,\n    };\n\n    const tileCoord = this.getTileCoordForTileUrlFunction([z, x, y]);\n    if (!tileCoord) {\n      return null;\n    }\n\n    const requestZ = tileCoord[0];\n    const requestX = tileCoord[1];\n    const requestY = tileCoord[2];\n    const range = this.getTileGrid()?.getFullTileRange(requestZ);\n    if (range) {\n      loaderOptions.maxY = range.getHeight() - 1;\n    }\n    function loader() {\n      return toPromise(function () {\n        return sourceLoader(requestZ, requestX, requestY, loaderOptions);\n      });\n    }\n\n    /**\n     * @type {import(\"../DataTile.js\").Options}\n     */\n    const options = Object.assign(\n      {\n        tileCoord: [z, x, y],\n        loader: loader,\n        size: size,\n        controller: controller,\n      },\n      this.tileOptions,\n    );\n\n    const tile = /** @type {TileType} */ (\n      /** @type {*} */ (new DataTile(options))\n    );\n    tile.key = this.getKey();\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange_);\n\n    return tile;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   */\n  handleTileChange_(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @override\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (\n      this.tileGrid &&\n      (!thisProj || equivalent(thisProj, projection)) &&\n      !this.transformMatrix\n    ) {\n      return this.tileGrid;\n    }\n\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection_)) {\n      this.tileGridForProjection_[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection_[projKey];\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection_)) {\n        this.tileGridForProjection_[projKey] = tilegrid;\n      }\n    }\n  }\n}\n\nexport default DataTileSource;\n","/**\n * @module ol/source/GeoTIFF\n */\nimport {\n  Pool,\n  fromBlob as tiffFromBlob,\n  fromUrl as tiffFromUrl,\n  fromUrls as tiffFromUrls,\n  globals as geotiffGlobals,\n} from 'geotiff';\nimport {error as logError} from '../console.js';\nimport {applyTransform, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {fromCode as unitsFromCode} from '../proj/Units.js';\nimport {\n  Projection,\n  createTransformFromCoordinateTransform,\n  get as getCachedProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport {\n  apply as applyMatrix,\n  create as createMatrix,\n  makeInverse,\n  multiply as multiplyTransform,\n} from '../transform.js';\nimport DataTile from './DataTile.js';\n\n/**\n * Determine if an image type is a mask.\n * See https://www.awaresystems.be/imaging/tiff/tifftags/newsubfiletype.html\n * @param {GeoTIFFImage} image The image.\n * @return {boolean} The image is a mask.\n */\nfunction isMask(image) {\n  const fileDirectory = image.fileDirectory;\n  const type = fileDirectory.NewSubfileType || 0;\n  return (type & 4) === 4;\n}\n\n/**\n * @param {true|false|'auto'} preference The convertToRGB option.\n * @param {GeoTIFFImage} image The image.\n * @return {boolean} Use the `image.readRGB()` method.\n */\nfunction readRGB(preference, image) {\n  if (!preference) {\n    return false;\n  }\n  if (preference === true) {\n    return true;\n  }\n  if (image.getSamplesPerPixel() !== 3) {\n    return false;\n  }\n  const interpretation = image.fileDirectory.PhotometricInterpretation;\n  const interpretations = geotiffGlobals.photometricInterpretations;\n  return (\n    interpretation === interpretations.CMYK ||\n    interpretation === interpretations.YCbCr ||\n    interpretation === interpretations.CIELab ||\n    interpretation === interpretations.ICCLab\n  );\n}\n\n/**\n * @typedef {Object} SourceInfo\n * @property {string} [url] URL for the source GeoTIFF.\n * @property {Array<string>} [overviews] List of any overview URLs, only applies if the url parameter is given.\n * @property {Blob} [blob] Blob containing the source GeoTIFF. `blob` and `url` are mutually exclusive.\n * @property {number} [min=0] The minimum source data value.  Rendered values are scaled from 0 to 1 based on\n * the configured min and max.  If not provided and raster statistics are available, those will be used instead.\n * If neither are available, the minimum for the data type will be used.  To disable this behavior, set\n * the `normalize` option to `false` in the constructor.\n * @property {number} [max] The maximum source data value.  Rendered values are scaled from 0 to 1 based on\n * the configured min and max.  If not provided and raster statistics are available, those will be used instead.\n * If neither are available, the maximum for the data type will be used.  To disable this behavior, set\n * the `normalize` option to `false` in the constructor.\n * @property {number} [nodata] Values to discard (overriding any nodata values in the metadata).\n * When provided, an additional alpha band will be added to the data.  Often the GeoTIFF metadata\n * will include information about nodata values, so you should only need to set this property if\n * you find that it is not already extracted from the metadata.\n * @property {Array<number>} [bands] Band numbers to be read from (where the first band is `1`). If not provided, all bands will\n * be read. For example, if a GeoTIFF has blue (1), green (2), red (3), and near-infrared (4) bands, and you only need the\n * near-infrared band, configure `bands: [4]`.\n */\n\n/**\n * @typedef {Object} GeoKeys\n * @property {number} GTModelTypeGeoKey Model type.\n * @property {number} GTRasterTypeGeoKey Raster type.\n * @property {number} GeogAngularUnitsGeoKey Angular units.\n * @property {number} GeogInvFlatteningGeoKey Inverse flattening.\n * @property {number} GeogSemiMajorAxisGeoKey Semi-major axis.\n * @property {number} GeographicTypeGeoKey Geographic coordinate system code.\n * @property {number} ProjLinearUnitsGeoKey Projected linear unit code.\n * @property {number} ProjectedCSTypeGeoKey Projected coordinate system code.\n */\n\n/**\n * @typedef {import(\"geotiff\").GeoTIFF} GeoTIFF\n */\n\n/**\n * @typedef {import(\"geotiff\").MultiGeoTIFF} MultiGeoTIFF\n */\n\n/**\n * @typedef {Object} GDALMetadata\n * @property {string} STATISTICS_MINIMUM The minimum value (as a string).\n * @property {string} STATISTICS_MAXIMUM The maximum value (as a string).\n */\n\nconst STATISTICS_MAXIMUM = 'STATISTICS_MAXIMUM';\nconst STATISTICS_MINIMUM = 'STATISTICS_MINIMUM';\n\nconst defaultTileSize = 256;\n\n/**\n * @typedef {import(\"geotiff\").GeoTIFFImage} GeoTIFFImage\n */\n\nlet workerPool;\nfunction getWorkerPool() {\n  if (!workerPool) {\n    workerPool = new Pool();\n  }\n  return workerPool;\n}\n\n/**\n * Get the bounding box of an image.  If the image does not have an affine transform,\n * the pixel bounds are returned.\n * @param {GeoTIFFImage} image The image.\n * @return {Array<number>} The image bounding box.\n */\nfunction getBoundingBox(image) {\n  try {\n    return image.getBoundingBox(true);\n  } catch {\n    return [0, 0, image.getWidth(), image.getHeight()];\n  }\n}\n\n/**\n * Get the origin of an image.  If the image does not have an affine transform,\n * the top-left corner of the pixel bounds is returned.\n * @param {GeoTIFFImage} image The image.\n * @return {Array<number>} The image origin.\n */\nfunction getOrigin(image) {\n  try {\n    return image.getOrigin().slice(0, 2);\n  } catch {\n    return [0, image.getHeight()];\n  }\n}\n\n/**\n * Get the resolution of an image.  If the image does not have an affine transform,\n * the width of the image is compared with the reference image.\n * @param {GeoTIFFImage} image The image.\n * @param {GeoTIFFImage} referenceImage The reference image.\n * @return {Array<number>} The map x and y units per pixel.\n */\nfunction getResolutions(image, referenceImage) {\n  try {\n    return image.getResolution(referenceImage);\n  } catch {\n    return [\n      referenceImage.getWidth() / image.getWidth(),\n      referenceImage.getHeight() / image.getHeight(),\n    ];\n  }\n}\n\n/**\n * @param {GeoTIFFImage} image A GeoTIFF.\n * @return {import(\"../proj/Projection.js\").default} The image projection.\n */\nfunction getProjection(image) {\n  const geoKeys = image.geoKeys;\n  if (!geoKeys) {\n    return null;\n  }\n\n  if (\n    geoKeys.ProjectedCSTypeGeoKey &&\n    geoKeys.ProjectedCSTypeGeoKey !== 32767\n  ) {\n    const code = 'EPSG:' + geoKeys.ProjectedCSTypeGeoKey;\n    let projection = getCachedProjection(code);\n    if (!projection) {\n      const units = unitsFromCode(geoKeys.ProjLinearUnitsGeoKey);\n      if (units) {\n        projection = new Projection({\n          code: code,\n          units: units,\n        });\n      }\n    }\n    return projection;\n  }\n\n  if (geoKeys.GeographicTypeGeoKey && geoKeys.GeographicTypeGeoKey !== 32767) {\n    const code = 'EPSG:' + geoKeys.GeographicTypeGeoKey;\n    let projection = getCachedProjection(code);\n    if (!projection) {\n      const units = unitsFromCode(geoKeys.GeogAngularUnitsGeoKey);\n      if (units) {\n        projection = new Projection({\n          code: code,\n          units: units,\n        });\n      }\n    }\n    return projection;\n  }\n\n  return null;\n}\n\n/**\n * @param {GeoTIFF|MultiGeoTIFF} tiff A GeoTIFF.\n * @return {Promise<Array<GeoTIFFImage>>} Resolves to a list of images.\n */\nfunction getImagesForTIFF(tiff) {\n  return tiff.getImageCount().then(function (count) {\n    const requests = new Array(count);\n    for (let i = 0; i < count; ++i) {\n      requests[i] = tiff.getImage(i);\n    }\n    return Promise.all(requests);\n  });\n}\n\n/**\n * @param {SourceInfo} source The GeoTIFF source.\n * @param {Object} options Options for the GeoTIFF source.\n * @return {Promise<Array<GeoTIFFImage>>} Resolves to a list of images.\n */\nfunction getImagesForSource(source, options) {\n  let request;\n  if (source.blob) {\n    request = tiffFromBlob(source.blob);\n  } else if (source.overviews) {\n    request = tiffFromUrls(source.url, source.overviews, options);\n  } else {\n    request = tiffFromUrl(source.url, options);\n  }\n  return request.then(getImagesForTIFF);\n}\n\n/**\n * @param {number|Array<number>|Array<Array<number>>} expected Expected value.\n * @param {number|Array<number>|Array<Array<number>>} got Actual value.\n * @param {number} tolerance Accepted tolerance in fraction of expected between expected and got.\n * @param {string} message The error message.\n * @param {function(Error):void} rejector A function to be called with any error.\n */\nfunction assertEqual(expected, got, tolerance, message, rejector) {\n  if (Array.isArray(expected)) {\n    const length = expected.length;\n    if (!Array.isArray(got) || length != got.length) {\n      const error = new Error(message);\n      rejector(error);\n      throw error;\n    }\n    for (let i = 0; i < length; ++i) {\n      assertEqual(expected[i], got[i], tolerance, message, rejector);\n    }\n    return;\n  }\n\n  got = /** @type {number} */ (got);\n  if (Math.abs(expected - got) > tolerance * expected) {\n    throw new Error(message);\n  }\n}\n\n/**\n * @param {Array} array The data array.\n * @return {number} The minimum value.\n */\nfunction getMinForDataType(array) {\n  if (array instanceof Int8Array) {\n    return -128;\n  }\n  if (array instanceof Int16Array) {\n    return -32768;\n  }\n  if (array instanceof Int32Array) {\n    return -2147483648;\n  }\n  if (array instanceof Float32Array) {\n    return 1.2e-38;\n  }\n  return 0;\n}\n\n/**\n * @param {Array} array The data array.\n * @return {number} The maximum value.\n */\nfunction getMaxForDataType(array) {\n  if (array instanceof Int8Array) {\n    return 127;\n  }\n  if (array instanceof Uint8Array) {\n    return 255;\n  }\n  if (array instanceof Uint8ClampedArray) {\n    return 255;\n  }\n  if (array instanceof Int16Array) {\n    return 32767;\n  }\n  if (array instanceof Uint16Array) {\n    return 65535;\n  }\n  if (array instanceof Int32Array) {\n    return 2147483647;\n  }\n  if (array instanceof Uint32Array) {\n    return 4294967295;\n  }\n  if (array instanceof Float32Array) {\n    return 3.4e38;\n  }\n  return 255;\n}\n\n/**\n * @typedef {Object} GeoTIFFSourceOptions\n * @property {boolean} [forceXHR=false] Whether to force the usage of the browsers XMLHttpRequest API.\n * @property {Object<string, string>} [headers] additional key-value pairs of headers to be passed with each request. Key is the header name, value the header value.\n * @property {string} [credentials] How credentials shall be handled. See\n * https://developer.mozilla.org/en-US/docs/Web/API/fetch for reference and possible values\n * @property {number} [maxRanges] The maximum amount of ranges to request in a single multi-range request.\n * By default only a single range is used.\n * @property {boolean} [allowFullFile=false] Whether or not a full file is accepted when only a portion is\n * requested. Only use this when you know the source image to be small enough to fit in memory.\n * @property {number} [blockSize=65536] The block size to use.\n * @property {number} [cacheSize=100] The number of blocks that shall be held in a LRU cache.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<SourceInfo>} sources List of information about GeoTIFF sources.\n * Multiple sources can be combined when their resolution sets are equal after applying a scale.\n * The list of sources defines a mapping between input bands as they are read from each GeoTIFF and\n * the output bands that are provided by data tiles. To control which bands to read from each GeoTIFF,\n * use the {@link import(\"./GeoTIFF.js\").SourceInfo bands} property. If, for example, you specify two\n * sources, one with 3 bands and {@link import(\"./GeoTIFF.js\").SourceInfo nodata} configured, and\n * another with 1 band, the resulting data tiles will have 5 bands: 3 from the first source, 1 alpha\n * band from the first source, and 1 band from the second source.\n * @property {GeoTIFFSourceOptions} [sourceOptions] Additional options to be passed to [geotiff.js](https://geotiffjs.github.io/geotiff.js/module-geotiff.html)'s `fromUrl` or `fromUrls` methods.\n * @property {true|false|'auto'} [convertToRGB=false] By default, bands from the sources are read as-is. When\n * reading GeoTIFFs with the purpose of displaying them as RGB images, setting this to `true` will\n * convert other color spaces (YCbCr, CMYK) to RGB.  Setting the option to `'auto'` will make it so CMYK, YCbCr,\n * CIELab, and ICCLab images will automatically be converted to RGB.\n * @property {boolean} [normalize=true] By default, the source data is normalized to values between\n * 0 and 1 with scaling factors based on the raster statistics or `min` and `max` properties of each source.\n * If instead you want to work with the raw values in a style expression, set this to `false`.  Setting this option\n * to `false` will make it so any `min` and `max` properties on sources are ignored.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Source projection.  If not provided, the GeoTIFF metadata\n * will be read for projection information.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {boolean} [wrapX=false] Render tiles beyond the tile grid extent.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * the linear interpolation is used to resample the data.  If false, nearest neighbor is used.\n */\n\n/**\n * @classdesc\n * A source for working with GeoTIFF data.\n * **Note for users of the full build**: The `GeoTIFF` source requires the\n * [geotiff.js](https://github.com/geotiffjs/geotiff.js) library to be loaded as well.\n *\n * @api\n */\nclass GeoTIFFSource extends DataTile {\n  /**\n   * @param {Options} options Data tile options.\n   */\n  constructor(options) {\n    super({\n      state: 'loading',\n      tileGrid: null,\n      projection: options.projection || null,\n      transition: options.transition,\n      interpolate: options.interpolate !== false,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @type {Array<SourceInfo>}\n     * @private\n     */\n    this.sourceInfo_ = options.sources;\n\n    const numSources = this.sourceInfo_.length;\n\n    /**\n     * @type {Object}\n     * @private\n     */\n    this.sourceOptions_ = options.sourceOptions;\n\n    /**\n     * @type {Array<Array<GeoTIFFImage>>}\n     * @private\n     */\n    this.sourceImagery_ = new Array(numSources);\n\n    /**\n     * @type {Array<Array<GeoTIFFImage>>}\n     * @private\n     */\n    this.sourceMasks_ = new Array(numSources);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.resolutionFactors_ = new Array(numSources);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.samplesPerPixel_;\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.nodataValues_;\n\n    /**\n     * @type {Array<Array<GDALMetadata>>}\n     * @private\n     */\n    this.metadata_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.normalize_ = options.normalize !== false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.addAlpha_ = false;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {true|false|'auto'}\n     * @private\n     */\n    this.convertToRGB_ = options.convertToRGB || false;\n\n    this.setKey(this.sourceInfo_.map((source) => source.url).join(','));\n\n    const self = this;\n    const requests = new Array(numSources);\n    for (let i = 0; i < numSources; ++i) {\n      requests[i] = getImagesForSource(\n        this.sourceInfo_[i],\n        this.sourceOptions_,\n      );\n    }\n    Promise.all(requests)\n      .then(function (sources) {\n        self.configure_(sources);\n      })\n      .catch(function (error) {\n        logError(error);\n        self.error_ = error;\n        self.setState('error');\n      });\n  }\n\n  /**\n   * @return {Error} A source loading error. When the source state is `error`, use this function\n   * to get more information about the error. To debug a faulty configuration, you may want to use\n   * a listener like\n   * ```js\n   * geotiffSource.on('change', () => {\n   *   if (geotiffSource.getState() === 'error') {\n   *     console.error(geotiffSource.getError());\n   *   }\n   * });\n   * ```\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Determine the projection of the images in this GeoTIFF.\n   * The default implementation looks at the ProjectedCSTypeGeoKey and the GeographicTypeGeoKey\n   * of each image in turn.\n   * You can override this method in a subclass to support more projections.\n   *\n   * @param {Array<Array<GeoTIFFImage>>} sources Each source is a list of images\n   * from a single GeoTIFF.\n   */\n  determineProjection(sources) {\n    const firstSource = sources[0];\n    for (let i = firstSource.length - 1; i >= 0; --i) {\n      const image = firstSource[i];\n      const projection = getProjection(image);\n      if (projection) {\n        this.projection = projection;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Determine any transform matrix for the images in this GeoTIFF.\n   *\n   * @param {Array<Array<GeoTIFFImage>>} sources Each source is a list of images\n   * from a single GeoTIFF.\n   */\n  determineTransformMatrix(sources) {\n    const firstSource = sources[0];\n    for (let i = firstSource.length - 1; i >= 0; --i) {\n      const image = firstSource[i];\n      const modelTransformation = image.fileDirectory.ModelTransformation;\n      if (modelTransformation) {\n        // eslint-disable-next-line no-unused-vars\n        const [a, b, c, d, e, f, g, h] = modelTransformation;\n        const matrix = multiplyTransform(\n          multiplyTransform(\n            [\n              1 / Math.sqrt(a * a + e * e),\n              0,\n              0,\n              -1 / Math.sqrt(b * b + f * f),\n              d,\n              h,\n            ],\n            [a, e, b, f, 0, 0],\n          ),\n          [1, 0, 0, 1, -d, -h],\n        );\n        this.transformMatrix = matrix;\n        this.addAlpha_ = true;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Configure the tile grid based on images within the source GeoTIFFs.  Each GeoTIFF\n   * must have the same internal tiled structure.\n   * @param {Array<Array<GeoTIFFImage>>} sources Each source is a list of images\n   * from a single GeoTIFF.\n   * @private\n   */\n  configure_(sources) {\n    let extent;\n    let origin;\n    let commonRenderTileSizes;\n    let commonSourceTileSizes;\n    let resolutions;\n    const samplesPerPixel = new Array(sources.length);\n    const nodataValues = new Array(sources.length);\n    const metadata = new Array(sources.length);\n    let minZoom = 0;\n\n    const sourceCount = sources.length;\n    for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n      const images = [];\n      const masks = [];\n      sources[sourceIndex].forEach((item) => {\n        if (isMask(item)) {\n          masks.push(item);\n        } else {\n          images.push(item);\n        }\n      });\n\n      const imageCount = images.length;\n      if (masks.length > 0 && masks.length !== imageCount) {\n        throw new Error(\n          `Expected one mask per image found ${masks.length} masks and ${imageCount} images`,\n        );\n      }\n\n      let sourceExtent;\n      let sourceOrigin;\n      const sourceTileSizes = new Array(imageCount);\n      const renderTileSizes = new Array(imageCount);\n      const sourceResolutions = new Array(imageCount);\n\n      nodataValues[sourceIndex] = new Array(imageCount);\n      metadata[sourceIndex] = new Array(imageCount);\n\n      for (let imageIndex = 0; imageIndex < imageCount; ++imageIndex) {\n        const image = images[imageIndex];\n        const nodataValue = image.getGDALNoData();\n        metadata[sourceIndex][imageIndex] = image.getGDALMetadata(0);\n        nodataValues[sourceIndex][imageIndex] = nodataValue;\n\n        const wantedSamples = this.sourceInfo_[sourceIndex].bands;\n        samplesPerPixel[sourceIndex] = wantedSamples\n          ? wantedSamples.length\n          : image.getSamplesPerPixel();\n        const level = imageCount - (imageIndex + 1);\n\n        if (!sourceExtent) {\n          sourceExtent = getBoundingBox(image);\n        }\n\n        if (!sourceOrigin) {\n          sourceOrigin = getOrigin(image);\n        }\n\n        const imageResolutions = getResolutions(image, images[0]);\n        sourceResolutions[level] = imageResolutions[0];\n\n        const sourceTileSize = [image.getTileWidth(), image.getTileHeight()];\n\n        // request larger blocks for untiled layouts\n        if (\n          sourceTileSize[0] !== sourceTileSize[1] &&\n          sourceTileSize[1] < defaultTileSize\n        ) {\n          sourceTileSize[0] = defaultTileSize;\n          sourceTileSize[1] = defaultTileSize;\n        }\n\n        sourceTileSizes[level] = sourceTileSize;\n\n        const aspectRatio = imageResolutions[0] / Math.abs(imageResolutions[1]);\n        renderTileSizes[level] = [\n          sourceTileSize[0],\n          sourceTileSize[1] / aspectRatio,\n        ];\n      }\n\n      if (!extent) {\n        extent = sourceExtent;\n      } else {\n        getIntersection(extent, sourceExtent, extent);\n      }\n\n      if (!origin) {\n        origin = sourceOrigin;\n      } else {\n        const message = `Origin mismatch for source ${sourceIndex}, got [${sourceOrigin}] but expected [${origin}]`;\n        assertEqual(origin, sourceOrigin, 0, message, this.viewRejector);\n      }\n\n      if (!resolutions) {\n        resolutions = sourceResolutions;\n        this.resolutionFactors_[sourceIndex] = 1;\n      } else {\n        if (resolutions.length - minZoom > sourceResolutions.length) {\n          minZoom = resolutions.length - sourceResolutions.length;\n        }\n        const resolutionFactor =\n          resolutions[resolutions.length - 1] /\n          sourceResolutions[sourceResolutions.length - 1];\n        this.resolutionFactors_[sourceIndex] = resolutionFactor;\n        const scaledSourceResolutions = sourceResolutions.map(\n          (resolution) => (resolution *= resolutionFactor),\n        );\n        const message = `Resolution mismatch for source ${sourceIndex}, got [${scaledSourceResolutions}] but expected [${resolutions}]`;\n        assertEqual(\n          resolutions.slice(minZoom, resolutions.length),\n          scaledSourceResolutions,\n          0.02,\n          message,\n          this.viewRejector,\n        );\n      }\n\n      if (!commonRenderTileSizes) {\n        commonRenderTileSizes = renderTileSizes;\n      } else {\n        assertEqual(\n          commonRenderTileSizes.slice(minZoom, commonRenderTileSizes.length),\n          renderTileSizes,\n          0.01,\n          `Tile size mismatch for source ${sourceIndex}`,\n          this.viewRejector,\n        );\n      }\n\n      if (!commonSourceTileSizes) {\n        commonSourceTileSizes = sourceTileSizes;\n      } else {\n        assertEqual(\n          commonSourceTileSizes.slice(minZoom, commonSourceTileSizes.length),\n          sourceTileSizes,\n          0,\n          `Tile size mismatch for source ${sourceIndex}`,\n          this.viewRejector,\n        );\n      }\n\n      this.sourceImagery_[sourceIndex] = images.reverse();\n      this.sourceMasks_[sourceIndex] = masks.reverse();\n    }\n\n    for (let i = 0, ii = this.sourceImagery_.length; i < ii; ++i) {\n      const sourceImagery = this.sourceImagery_[i];\n      while (sourceImagery.length < resolutions.length) {\n        sourceImagery.unshift(undefined);\n      }\n    }\n\n    if (!this.getProjection()) {\n      this.determineProjection(sources);\n    }\n    this.determineTransformMatrix(sources);\n\n    this.samplesPerPixel_ = samplesPerPixel;\n    this.nodataValues_ = nodataValues;\n    this.metadata_ = metadata;\n\n    // decide if we need to add an alpha band to handle nodata\n    outer: for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n      // option 1: source is configured with a nodata value\n      if (this.sourceInfo_[sourceIndex].nodata !== undefined) {\n        this.addAlpha_ = true;\n        break;\n      }\n      if (this.sourceMasks_[sourceIndex].length) {\n        this.addAlpha_ = true;\n        break;\n      }\n\n      const values = nodataValues[sourceIndex];\n\n      // option 2: check image metadata for limited bands\n      const bands = this.sourceInfo_[sourceIndex].bands;\n      if (bands) {\n        for (let i = 0; i < bands.length; ++i) {\n          if (values[bands[i] - 1] !== null) {\n            this.addAlpha_ = true;\n            break outer;\n          }\n        }\n        continue;\n      }\n\n      // option 3: check image metadata for all bands\n      for (let imageIndex = 0; imageIndex < values.length; ++imageIndex) {\n        if (values[imageIndex] !== null) {\n          this.addAlpha_ = true;\n          break outer;\n        }\n      }\n    }\n\n    let bandCount = this.addAlpha_ ? 1 : 0;\n    for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n      bandCount += samplesPerPixel[sourceIndex];\n    }\n    this.bandCount = bandCount;\n\n    const tileGrid = new TileGrid({\n      extent: extent,\n      minZoom: minZoom,\n      origin: origin,\n      resolutions: resolutions,\n      tileSizes: commonRenderTileSizes,\n    });\n\n    this.tileGrid = tileGrid;\n    this.setTileSizes(commonSourceTileSizes);\n\n    this.setLoader(this.loadTile_.bind(this));\n    this.setState('ready');\n\n    const zoom = 1;\n    if (resolutions.length === 2) {\n      resolutions = [resolutions[0], resolutions[1], resolutions[1] / 2];\n    } else if (resolutions.length === 1) {\n      resolutions = [resolutions[0] * 2, resolutions[0], resolutions[0] / 2];\n    }\n\n    let viewExtent = extent;\n    if (this.transformMatrix) {\n      const matrix = makeInverse(createMatrix(), this.transformMatrix.slice());\n      const transformFn = createTransformFromCoordinateTransform((input) =>\n        applyMatrix(matrix, input),\n      );\n      viewExtent = applyTransform(extent, transformFn);\n    }\n\n    this.viewResolver({\n      showFullExtent: true,\n      projection: this.projection,\n      resolutions: resolutions,\n      center: toUserCoordinate(getCenter(viewExtent), this.projection),\n      extent: toUserExtent(viewExtent, this.projection),\n      zoom: zoom,\n    });\n  }\n\n  /**\n   * @param {number} z The z tile index.\n   * @param {number} x The x tile index.\n   * @param {number} y The y tile index.\n   * @param {import('./DataTile.js').LoaderOptions} options The loader options.\n   * @return {Promise} The composed tile data.\n   * @private\n   */\n  loadTile_(z, x, y, options) {\n    const sourceTileSize = this.getTileSize(z);\n    const sourceCount = this.sourceImagery_.length;\n    const requests = new Array(sourceCount * 2);\n    const nodataValues = this.nodataValues_;\n    const sourceInfo = this.sourceInfo_;\n    const pool = getWorkerPool();\n    for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n      const source = sourceInfo[sourceIndex];\n      const resolutionFactor = this.resolutionFactors_[sourceIndex];\n      const pixelBounds = [\n        Math.round(x * (sourceTileSize[0] * resolutionFactor)),\n        Math.round(y * (sourceTileSize[1] * resolutionFactor)),\n        Math.round((x + 1) * (sourceTileSize[0] * resolutionFactor)),\n        Math.round((y + 1) * (sourceTileSize[1] * resolutionFactor)),\n      ];\n      const image = this.sourceImagery_[sourceIndex][z];\n      let samples;\n      if (source.bands) {\n        samples = source.bands.map(function (bandNumber) {\n          return bandNumber - 1;\n        });\n      }\n\n      /** @type {number|Array<number>} */\n      let fillValue;\n      if ('nodata' in source && source.nodata !== null) {\n        fillValue = source.nodata;\n      } else {\n        if (!samples) {\n          fillValue = nodataValues[sourceIndex];\n        } else {\n          fillValue = samples.map(function (sampleIndex) {\n            return nodataValues[sourceIndex][sampleIndex];\n          });\n        }\n      }\n\n      const readOptions = {\n        window: pixelBounds,\n        width: sourceTileSize[0],\n        height: sourceTileSize[1],\n        samples: samples,\n        fillValue: fillValue,\n        pool: pool,\n        interleave: false,\n        signal: options.signal,\n      };\n      if (readRGB(this.convertToRGB_, image)) {\n        requests[sourceIndex] = image.readRGB(readOptions);\n      } else {\n        requests[sourceIndex] = image.readRasters(readOptions);\n      }\n\n      // requests after `sourceCount` are for mask data (if any)\n      const maskIndex = sourceCount + sourceIndex;\n      const mask = this.sourceMasks_[sourceIndex][z];\n      if (!mask) {\n        requests[maskIndex] = Promise.resolve(null);\n        continue;\n      }\n\n      requests[maskIndex] = mask.readRasters({\n        window: pixelBounds,\n        width: sourceTileSize[0],\n        height: sourceTileSize[1],\n        samples: [0],\n        pool: pool,\n        interleave: false,\n      });\n    }\n\n    return Promise.all(requests)\n      .then(this.composeTile_.bind(this, sourceTileSize))\n      .catch(function (error) {\n        logError(error);\n        throw error;\n      });\n  }\n\n  /**\n   * @param {import(\"../size.js\").Size} sourceTileSize The source tile size.\n   * @param {Array} sourceSamples The source samples.\n   * @return {import(\"../DataTile.js\").Data} The composed tile data.\n   * @private\n   */\n  composeTile_(sourceTileSize, sourceSamples) {\n    const metadata = this.metadata_;\n    const sourceInfo = this.sourceInfo_;\n    const sourceCount = this.sourceImagery_.length;\n    const bandCount = this.bandCount;\n    const samplesPerPixel = this.samplesPerPixel_;\n    const nodataValues = this.nodataValues_;\n    const normalize = this.normalize_;\n    const addAlpha = this.addAlpha_;\n\n    const pixelCount = sourceTileSize[0] * sourceTileSize[1];\n    const dataLength = pixelCount * bandCount;\n\n    /** @type {Uint8Array|Float32Array} */\n    let data;\n    if (normalize) {\n      data = new Uint8Array(dataLength);\n    } else {\n      data = new Float32Array(dataLength);\n    }\n\n    let dataIndex = 0;\n    for (let pixelIndex = 0; pixelIndex < pixelCount; ++pixelIndex) {\n      let transparent = addAlpha;\n      for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n        const source = sourceInfo[sourceIndex];\n\n        let min = source.min;\n        let max = source.max;\n        let gain, bias;\n        if (normalize) {\n          const stats = metadata[sourceIndex][0];\n          if (min === undefined) {\n            if (stats && STATISTICS_MINIMUM in stats) {\n              min = parseFloat(stats[STATISTICS_MINIMUM]);\n            } else {\n              min = getMinForDataType(sourceSamples[sourceIndex][0]);\n            }\n          }\n          if (max === undefined) {\n            if (stats && STATISTICS_MAXIMUM in stats) {\n              max = parseFloat(stats[STATISTICS_MAXIMUM]);\n            } else {\n              max = getMaxForDataType(sourceSamples[sourceIndex][0]);\n            }\n          }\n\n          gain = 255 / (max - min);\n          bias = -min * gain;\n        }\n\n        for (\n          let sampleIndex = 0;\n          sampleIndex < samplesPerPixel[sourceIndex];\n          ++sampleIndex\n        ) {\n          const sourceValue =\n            sourceSamples[sourceIndex][sampleIndex][pixelIndex];\n\n          let value;\n          if (normalize) {\n            value = clamp(gain * sourceValue + bias, 0, 255);\n          } else {\n            value = sourceValue;\n          }\n\n          if (!addAlpha) {\n            data[dataIndex] = value;\n          } else {\n            let nodata = source.nodata;\n            if (nodata === undefined) {\n              let bandIndex;\n              if (source.bands) {\n                bandIndex = source.bands[sampleIndex] - 1;\n              } else {\n                bandIndex = sampleIndex;\n              }\n              nodata = nodataValues[sourceIndex][bandIndex];\n            }\n\n            const nodataIsNaN = isNaN(nodata);\n            if (\n              (!nodataIsNaN && sourceValue !== nodata) ||\n              (nodataIsNaN && !isNaN(sourceValue))\n            ) {\n              transparent = false;\n              data[dataIndex] = value;\n            }\n          }\n          dataIndex++;\n        }\n        if (!transparent) {\n          const maskIndex = sourceCount + sourceIndex;\n          const mask = sourceSamples[maskIndex];\n          if (mask && !mask[0][pixelIndex]) {\n            transparent = true;\n          }\n        }\n      }\n      if (addAlpha) {\n        if (!transparent) {\n          data[dataIndex] = 255;\n        }\n        dataIndex++;\n      }\n    }\n\n    return data;\n  }\n}\n\n/**\n * Get a promise for view properties based on the source.  Use the result of this function\n * as the `view` option in a map constructor.\n *\n *     const source = new GeoTIFF(options);\n *\n *     const map = new Map({\n *       target: 'map',\n *       layers: [\n *         new TileLayer({\n *           source: source,\n *         }),\n *       ],\n *       view: source.getView(),\n *     });\n *\n * @function\n * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n * @api\n *\n */\nGeoTIFFSource.prototype.getView;\n\nexport default GeoTIFFSource;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {PointerEvent|KeyboardEvent|WheelEvent} [EVENT=PointerEvent|KeyboardEvent|WheelEvent]\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     * @private\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     * @private\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   * @override\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   * @override\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport EventType from './events/EventType.js';\nimport Target from './events/Target.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport PointerEventType from './pointer/EventType.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * @private\n     */\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import('./tilecoord.js').TileCoord, number): number} PriorityFunction\n */\n\n/**\n * @typedef {[import('./Tile.js').default, string, import('./tilecoord.js').TileCoord, number]} TileQueueElement\n */\n\n/**\n * @extends PriorityQueue<TileQueueElement>}\n */\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      (element) => tilePriorityFunction.apply(null, element),\n      (element) => element[0].getKey(),\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {TileQueueElement} element Element.\n   * @return {boolean} The element was added to the queue.\n   * @override\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      const tile = this.dequeue()[0];\n      const tileKey = tile.getKey();\n      const state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destinationStride] Stride of destination coordinates; if unspecified, assumed to be 2.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n  destinationStride,\n) {\n  dest = dest ? dest : [];\n  destinationStride = destinationStride ? destinationStride : 2;\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n\n    for (let k = 2; k < destinationStride; k++) {\n      dest[i++] = flatCoordinates[j + k];\n    }\n  }\n\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {memoizeOne} from '../functions.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {abstract} from '../util.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/** @type {import('../coordinate.js').Coordinate} */\nconst tmpPoint = [NaN, NaN];\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return this.closestPointXY(x, y, tmpPoint, Number.MIN_VALUE) === 0;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            const transformed = transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            const projTransform = getTransform(sourceProj, destination);\n            if (projTransform) {\n              return projTransform(transformed, transformed, stride);\n            }\n            return transformed;\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {abstract} from '../util.js';\nimport Geometry from './Geometry.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(\n        this.flatCoordinates,\n        this.flatCoordinates,\n        this.layout.startsWith('XYZ') ? 3 : 2,\n        this.stride,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  const x0 = flatCoordinates[end - stride];\n  const y0 = flatCoordinates[end - stride + 1];\n  let dx1 = 0;\n  let dy1 = 0;\n  for (; offset < end; offset += stride) {\n    const dx2 = flatCoordinates[offset] - x0;\n    const dy2 = flatCoordinates[offset + 1] - y0;\n    twiceArea += dy1 * dx2 - dx1 * dy2;\n    dx1 = dx2;\n    dy1 = dy2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {squaredDistance as squaredDx} from '../math.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport {\n  add as addCoordinate,\n  equals,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {VOID} from './functions.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_?.length) {\n      if (this.resolutions_.length === 1) {\n        return this.resolutions_[0];\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z0-9]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/** @type {Object<string|number, number>} */\nexport const fontWeights = {\n  normal: 400,\n  bold: 700,\n};\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: '400',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] =\n        typeof value === 'string' ? value.trim() : value;\n    }\n  }\n  if (isNaN(Number(style.weight)) && style.weight in fontWeights) {\n    style.weight = fontWeights[style.weight];\n  }\n  style.families = style.family\n    .split(/,\\s?/)\n    .map((f) => f.trim().replace(/^['\"]|['\"]$/g, ''));\n  return style;\n};\n","/**\n * @module ol/control/Control\n */\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {VOID} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.element?.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.element?.remove();\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_ ?? map.getOverlayContainerStopEvent();\n      if (this.element) {\n        target.appendChild(this.element);\n      }\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {toPromise} from '../functions.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {string|Array<string>|undefined} [attributions] Optional attribution(s) that will always be\n * displayed regardless of the layers rendered.\n * **Caution:** Attributions are rendered dynamically using `innerHTML`, which can lead to potential\n * [**XSS (Cross-Site Scripting)**](https://en.wikipedia.org/wiki/Cross-site_scripting) vulnerabilities.\n * Use this feature only for trusted content\n * or ensure that the content is properly sanitized before inserting it.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {string | Array<string> | undefined}\n     */\n    this.attributions_ = options.attributions;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const layers = this.getMap().getAllLayers();\n    const visibleAttributions = new Set(\n      layers.flatMap((layer) => layer.getAttributions(frameState)),\n    );\n    if (this.attributions_ !== undefined) {\n      Array.isArray(this.attributions_)\n        ? this.attributions_.forEach((item) => visibleAttributions.add(item))\n        : visibleAttributions.add(this.attributions_);\n    }\n\n    if (!this.overrideCollapsible_) {\n      const collapsible = !layers.some(\n        (layer) => layer.getSource()?.getAttributionsCollapsible() === false,\n      );\n      this.setCollapsible(collapsible);\n    }\n    return Array.from(visibleAttributions);\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  async updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = await Promise.all(\n      this.collectSourceAttributions_(frameState).map((attribution) =>\n        toPromise(() => attribution),\n      ),\n    );\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    /**\n     * @private\n     */\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * {@link module:ol/control/Zoom~Zoom}\n * {@link module:ol/control/Rotate~Rotate}\n * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n\n  return rootNode instanceof ShadowRoot\n    ? rootNode.host.contains(activeElement)\n    : targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const tabIndexCandidate =\n    rootNode instanceof ShadowRoot ? rootNode.host : targetElement;\n\n  return tabIndexCandidate.hasAttribute('tabindex') ? focus(event) : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    'pointerId' in originalEvent &&\n    originalEvent.button == 0 &&\n    !(WEBKIT && MAC && originalEvent.ctrlKey)\n  );\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return 'pointerId' in pointerEvent && pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return 'pointerId' in pointerEvt && pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return 'pointerId' in pointerEvt && pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.originalEvent;\n  return (\n    'pointerId' in pointerEvent &&\n    pointerEvent.isPrimary &&\n    pointerEvent.button === 0\n  );\n};\n","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/interaction/DragPan\n */\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    if (!this.map_) {\n      return;\n    }\n\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_,\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {mouseActionButton} from '../events/condition.js';\nimport RenderBox from '../render/Box.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ?? {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea ?? 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ?? mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ =\n      options.boxEndCondition ?? this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return false;\n    }\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n\n    this.box_.setMap(null);\n    this.startPixel_ = null;\n\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   * @override\n   */\n  setActive(active) {\n    if (!active) {\n      this.box_.setMap(null);\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setActive(active);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @override\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n\n    if (oldMap) {\n      this.box_.setMap(null);\n\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setMap(map);\n  }\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport DragBox from './DragBox.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @override\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * Mutliplier for the DOM_DELTA_LINE delta value.\n * @type {number}\n */\nconst DELTA_LINE_MULTIPLIER = 40;\n\n/**\n * Mutliplier for the DOM_DELTA_PAGE delta value.\n * @type {number}\n */\nconst DELTA_PAGE_MULTIPLIER = 300;\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../pixel.js\").Pixel}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.pixel;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta = wheelEvent.deltaY;\n\n    switch (wheelEvent.deltaMode) {\n      case WheelEvent.DOM_DELTA_LINE:\n        delta *= DELTA_LINE_MULTIPLIER;\n        break;\n      case WheelEvent.DOM_DELTA_PAGE:\n        delta *= DELTA_PAGE_MULTIPLIER;\n        break;\n      default:\n      // pass\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(\n        -delta / this.deltaPerZoom_,\n        this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      );\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(\n      view,\n      delta,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      this.duration_,\n    );\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport Kinetic from '../Kinetic.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * {@link module:ol/interaction/DragRotate~DragRotate}\n * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * {@link module:ol/interaction/DragPan~DragPan}\n * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {abstract} from '../util.js';\nimport LayerProperty from './Property.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Group\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getIntersection} from '../extent.js';\nimport {clear} from '../obj.js';\nimport {getUid} from '../util.js';\nimport BaseLayer from './Base.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} GroupEventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {GroupEventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/layer/Layer\n */\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {intersects} from '../extent.js';\nimport RenderEventType from '../render/EventType.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n      if (!layerState) {\n        return false;\n      }\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    const getAttributions = this.getSource()?.getAttributions();\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        this.handlePrecompose_,\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} renderEvent Render event\n   * @private\n   */\n  handlePrecompose_(renderEvent) {\n    const layerStatesArray =\n      /** @type {import(\"../render/Event.js\").default} */ (renderEvent)\n        .frameState.layerStatesArray;\n    const layerState = this.getLayerState(false);\n    assert(\n      !layerStatesArray.some(\n        (arrayLayerState) => arrayLayerState.layer === layerState.layer,\n      ),\n      'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n    );\n    layerStatesArray.push(layerState);\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * This will clear the renderer so that a new one can be created next time it is needed\n   */\n  clearRenderer() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.clearRenderer();\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/color\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {clamp, toFixed} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Color to indicate that no color should be rendered. This is meant to be used for per-reference\n * comparisons only.\n * @type {Color}\n */\nexport const NO_COLOR = [NaN, NaN, NaN, 0];\n\nlet colorParseContext;\n/**\n * @return {CanvasRenderingContext2D} The color parse context\n */\nfunction getColorParseContext() {\n  if (!colorParseContext) {\n    colorParseContext = createCanvasContext2D(1, 1, undefined, {\n      willReadFrequently: true,\n      desynchronized: true,\n    });\n  }\n  return colorParseContext;\n}\n\nconst rgbModernRegEx =\n  /^rgba?\\(\\s*(\\d+%?)\\s+(\\d+%?)\\s+(\\d+%?)(?:\\s*\\/\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst rgbLegacyAbsoluteRegEx =\n  /^rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)(?:\\s*,\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst rgbLegacyPercentageRegEx =\n  /^rgba?\\(\\s*(\\d+%)\\s*,\\s*(\\d+%)\\s*,\\s*(\\d+%)(?:\\s*,\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst hexRegEx = /^#([\\da-f]{3,4}|[\\da-f]{6}|[\\da-f]{8})$/i;\n\n/**\n * @param {string} s Color component as number or percentage.\n * @param {number} divider Divider for percentage.\n * @return {number} Color component.\n */\nfunction toColorComponent(s, divider) {\n  return s.endsWith('%')\n    ? Number(s.substring(0, s.length - 1)) / divider\n    : Number(s);\n}\n\n/**\n * @param {string} color Color string.\n */\nfunction throwInvalidColor(color) {\n  throw new Error('failed to parse \"' + color + '\" as color');\n}\n\n/**\n * @param {string} color Color string.\n * @return {Color} RGBa color array.\n */\nfunction parseRgba(color) {\n  // Fast lane for rgb(a) colors\n  if (color.toLowerCase().startsWith('rgb')) {\n    const rgb =\n      color.match(rgbLegacyAbsoluteRegEx) ||\n      color.match(rgbModernRegEx) ||\n      color.match(rgbLegacyPercentageRegEx);\n    if (rgb) {\n      const alpha = rgb[4];\n      const rgbDivider = 100 / 255;\n      return [\n        clamp((toColorComponent(rgb[1], rgbDivider) + 0.5) | 0, 0, 255),\n        clamp((toColorComponent(rgb[2], rgbDivider) + 0.5) | 0, 0, 255),\n        clamp((toColorComponent(rgb[3], rgbDivider) + 0.5) | 0, 0, 255),\n        alpha !== undefined ? clamp(toColorComponent(alpha, 100), 0, 1) : 1,\n      ];\n    }\n    throwInvalidColor(color);\n  }\n  // Fast lane for hex colors (also with alpha)\n  if (color.startsWith('#')) {\n    if (hexRegEx.test(color)) {\n      const hex = color.substring(1);\n      const step = hex.length <= 4 ? 1 : 2;\n      const colorFromHex = [0, 0, 0, 255];\n      for (let i = 0, ii = hex.length; i < ii; i += step) {\n        let colorComponent = parseInt(hex.substring(i, i + step), 16);\n        if (step === 1) {\n          colorComponent += colorComponent << 4;\n        }\n        colorFromHex[i / step] = colorComponent;\n      }\n      colorFromHex[3] = colorFromHex[3] / 255;\n      return colorFromHex;\n    }\n    throwInvalidColor(color);\n  }\n  // Use canvas color serialization to parse the color into hex or rgba\n  // See https://www.w3.org/TR/2021/SPSD-2dcontext-20210128/#serialization-of-a-color\n  const context = getColorParseContext();\n  context.fillStyle = '#abcdef';\n  let invalidCheckFillStyle = context.fillStyle;\n  context.fillStyle = color;\n  if (context.fillStyle === invalidCheckFillStyle) {\n    context.fillStyle = '#fedcba';\n    invalidCheckFillStyle = context.fillStyle;\n    context.fillStyle = color;\n    if (context.fillStyle === invalidCheckFillStyle) {\n      throwInvalidColor(color);\n    }\n  }\n  const colorString = context.fillStyle;\n  if (colorString.startsWith('#') || colorString.startsWith('rgba')) {\n    return parseRgba(colorString);\n  }\n  context.clearRect(0, 0, 1, 1);\n  context.fillRect(0, 0, 1, 1);\n  const colorFromImage = Array.from(context.getImageData(0, 0, 1, 1).data);\n  colorFromImage[3] = toFixed(colorFromImage[3] / 255, 3);\n  return colorFromImage;\n}\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n// The functions b1, b2, a1, a2, rgbaToLcha and lchaToRgba below are adapted from\n// https://stackoverflow.com/a/67219995/2389327\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction b1(v) {\n  return v > 0.0031308 ? Math.pow(v, 1 / 2.4) * 269.025 - 14.025 : v * 3294.6;\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction b2(v) {\n  return v > 0.2068965 ? Math.pow(v, 3) : (v - 4 / 29) * (108 / 841);\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction a1(v) {\n  return v > 10.314724 ? Math.pow((v + 14.025) / 269.025, 2.4) : v / 3294.6;\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction a2(v) {\n  return v > 0.0088564 ? Math.pow(v, 1 / 3) : v / (108 / 841) + 4 / 29;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const r = a1(color[0]);\n  const g = a1(color[1]);\n  const b = a1(color[2]);\n  const y = a2(r * 0.222488403 + g * 0.716873169 + b * 0.06060791);\n  const l = 500 * (a2(r * 0.452247074 + g * 0.399439023 + b * 0.148375274) - y);\n  const q = 200 * (y - a2(r * 0.016863605 + g * 0.117638439 + b * 0.865350722));\n  const h = Math.atan2(q, l) * (180 / Math.PI);\n  return [\n    116 * y - 16,\n    Math.sqrt(l * l + q * q),\n    h < 0 ? h + 360 : h,\n    color[3],\n  ];\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const l = (color[0] + 16) / 116;\n  const c = color[1];\n  const h = (color[2] * Math.PI) / 180;\n  const y = b2(l);\n  const x = b2(l + (c / 500) * Math.cos(h));\n  const z = b2(l - (c / 200) * Math.sin(h));\n  const r = b1(x * 3.021973625 - y * 1.617392459 - z * 0.404875592);\n  const g = b1(x * -0.943766287 + y * 1.916279586 + z * 0.027607165);\n  const b = b1(x * 0.069407491 - y * 0.22898585 + z * 1.159737864);\n  return [\n    clamp((r + 0.5) | 0, 0, 255),\n    clamp((g + 0.5) | 0, 0, 255),\n    clamp((b + 0.5) | 0, 0, 255),\n    color[3],\n  ];\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (s === 'none') {\n    return NO_COLOR;\n  }\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throwInvalidColor(s);\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throwInvalidColor(s);\n    }\n  }\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch {\n    return false;\n  }\n}\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {fromString as colorFromString} from '../color.js';\nimport {toSize} from '../size.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   * `['get', attributeName]` fetches a feature property value, similar to `feature.get('attributeName')`.\n *   * `['get', attributeName, keyOrArrayIndex, ...]` (Canvas only) Access nested properties and array items of a\n *     feature property. The result is `undefined` when there is nothing at the specified key or index.\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   * `['resolution']` returns the current resolution\n *   * `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` The current zoom level (WebGL only).\n *   * `['line-metric']` returns the M component of the current point on a line (WebGL only); in case where the geometry layout of the line\n *      does not contain an M component (e.g. XY or XYZ), 0 is returned; 0 is also returned for geometries other than lines.\n *      Please note that the M component will be linearly interpolated between the two points composing a segment.\n *\n * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['has', attributeName, keyOrArrayIndex, ...]` returns `true` if feature properties include the (nested) key `attributeName`,\n *     `false` otherwise.\n *     Note that for WebGL layers, the hardcoded value `-9999999` is used to distinguish when a property is not defined.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const SizeType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n  [SizeType]: 'size',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * @param {number} type The type.\n * @return {boolean} The type is one of the specific types (not any or a union type).\n */\nfunction isSpecific(type) {\n  return type in typeNames;\n}\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    if (!isSpecific(type)) {\n      throw new Error(\n        `literal expressions must have a specific type, got ${typeName(type)}`,\n      );\n    }\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n * @property {boolean} mapState The style uses the map state (view state or time elapsed).\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n    mapState: false,\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {number} expectedType The expected type.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, expectedType, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded ? 'true' : 'false');\n      }\n      if (!includesType(expectedType, BooleanType)) {\n        throw new Error(\n          `got a boolean, but expected ${typeName(expectedType)}`,\n        );\n      }\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      if (isType(expectedType, SizeType)) {\n        return new LiteralExpression(SizeType, toSize(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded.toString());\n      }\n      if (!includesType(expectedType, NumberType)) {\n        throw new Error(`got a number, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      if (isType(expectedType, ColorType)) {\n        return new LiteralExpression(ColorType, colorFromString(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (!includesType(expectedType, StringType)) {\n        throw new Error(`got a string, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, expectedType, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('expected an array of numbers');\n    }\n  }\n\n  if (isType(expectedType, SizeType)) {\n    if (encoded.length !== 2) {\n      throw new Error(\n        `expected an array of two values for a size, got ${encoded.length}`,\n      );\n    }\n    return new LiteralExpression(SizeType, encoded);\n  }\n\n  if (isType(expectedType, ColorType)) {\n    if (encoded.length === 3) {\n      return new LiteralExpression(ColorType, [...encoded, 1]);\n    }\n    if (encoded.length === 4) {\n      return new LiteralExpression(ColorType, encoded);\n    }\n    throw new Error(\n      `expected an array of 3 or 4 values for a color, got ${encoded.length}`,\n    );\n  }\n\n  if (!includesType(expectedType, NumberArrayType)) {\n    throw new Error(\n      `got an array of numbers, but expected ${typeName(expectedType)}`,\n    );\n  }\n\n  return new LiteralExpression(NumberArrayType, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  LineMetric: 'line-metric',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n  Has: 'has',\n};\n\n/**\n * @typedef {function(Array, number, ParsingContext):Expression} Parser\n *\n * Second argument is the expected type.\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Var]: createCallExpressionParser(hasArgsCount(1, 1), withVarArgs),\n  [Ops.Has]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Id]: createCallExpressionParser(usesFeatureId, withNoArgs),\n  [Ops.Concat]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(StringType),\n  ),\n  [Ops.GeometryType]: createCallExpressionParser(usesGeometryType, withNoArgs),\n  [Ops.LineMetric]: createCallExpressionParser(withNoArgs),\n  [Ops.Resolution]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Zoom]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Time]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Any]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.NotEqual]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.GreaterThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Multiply]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Coalesce]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Divide]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createCallExpressionParser(\n    hasArgsCount(1, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createCallExpressionParser(\n    hasArgsCount(4, Infinity),\n    hasEvenArgs,\n    withMatchArgs,\n  ),\n  [Ops.Between]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createCallExpressionParser(\n    hasArgsCount(6, Infinity),\n    hasEvenArgs,\n    withInterpolateArgs,\n  ),\n  [Ops.Case]: createCallExpressionParser(\n    hasArgsCount(3, Infinity),\n    hasOddArgs,\n    withCaseArgs,\n  ),\n  [Ops.In]: createCallExpressionParser(hasArgsCount(2, 2), withInArgs),\n  [Ops.Number]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.String]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createCallExpressionParser(\n    hasArgsCount(1, 4),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createCallExpressionParser(\n    hasArgsCount(1, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withPaletteArgs,\n  ),\n  [Ops.ToString]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, number, ParsingContext):Array<Expression>|void} ArgValidator\n *\n * An argument validator applies various checks to an encoded expression arguments and\n * returns the parsed arguments if any.  The second argument is the return type of the call expression.\n */\n\n/**\n * @type {ArgValidator}\n */\nfunction withGetArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n  const args = new Array(argsCount);\n  for (let i = 0; i < argsCount; ++i) {\n    const key = encoded[i + 1];\n    switch (typeof key) {\n      case 'number': {\n        args[i] = new LiteralExpression(NumberType, key);\n        break;\n      }\n      case 'string': {\n        args[i] = new LiteralExpression(StringType, key);\n        break;\n      }\n      default: {\n        throw new Error(\n          `expected a string key or numeric array index for a get operation, got ${key}`,\n        );\n      }\n    }\n    if (i === 0) {\n      context.properties.add(String(key));\n    }\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withVarArgs(encoded, returnType, context) {\n  const name = encoded[1];\n  if (typeof name !== 'string') {\n    throw new Error('expected a string argument for var operation');\n  }\n  context.variables.add(name);\n\n  return [new LiteralExpression(StringType, name)];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesFeatureId(encoded, returnType, context) {\n  context.featureId = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesGeometryType(encoded, returnType, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesMapState(encoded, returnType, context) {\n  context.mapState = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withNoArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction hasArgsCount(minArgs, maxArgs) {\n  return function (encoded, returnType, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withArgsOfReturnType(encoded, returnType, context) {\n  const argCount = encoded.length - 1;\n  /**\n   * @type {Array<Expression>}\n   */\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    const expression = parse(encoded[i + 1], returnType, context);\n    args[i] = expression;\n  }\n  return args;\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsOfType(argType) {\n  return function (encoded, returnType, context) {\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], argType, context);\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasOddArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `expected an odd number of arguments for ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasEvenArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `expected an even number of arguments for operation ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withMatchArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n\n  const inputType = StringType | NumberType | BooleanType;\n\n  const input = parse(encoded[1], inputType, context);\n\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    try {\n      const match = parse(encoded[i + 2], input.type, context);\n      args[i] = match;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of match expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 3], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} of match expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [input, ...args, fallback];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInterpolateArgs(encoded, returnType, context) {\n  const interpolationType = encoded[1];\n  /**\n   * @type {number}\n   */\n  let base;\n  switch (interpolationType[0]) {\n    case 'linear':\n      base = 1;\n      break;\n    case 'exponential':\n      const b = interpolationType[1];\n      if (typeof b !== 'number' || b <= 0) {\n        throw new Error(\n          `expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(b)} instead`,\n        );\n      }\n      base = b;\n      break;\n    default:\n      throw new Error(\n        `invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n      );\n  }\n\n  const interpolation = new LiteralExpression(NumberType, base);\n\n  let input;\n  try {\n    input = parse(encoded[2], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse argument 1 in interpolate expression: ${err.message}`,\n    );\n  }\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    try {\n      const stop = parse(encoded[i + 3], NumberType, context);\n      args[i] = stop;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} for interpolate expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 4], returnType, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 3} for interpolate expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withCaseArgs(encoded, returnType, context) {\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    try {\n      const condition = parse(encoded[i + 1], BooleanType, context);\n      args[i] = condition;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i} of case expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 2], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of case expression: ${err.message}`,\n      );\n    }\n  }\n\n  args[args.length - 1] = fallback;\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInArgs(encoded, returnType, context) {\n  let haystack = encoded[2];\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `the second argument for the \"in\" operator must be an array`,\n    );\n  }\n  /**\n   * @type {number}\n   */\n  let needleType;\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `for the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `failed to parse \"in\" expression: the literal operator must be followed by an array`,\n      );\n    }\n    haystack = haystack[1];\n    needleType = StringType;\n  } else {\n    needleType = NumberType;\n  }\n\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    try {\n      const arg = parse(haystack[i], needleType, context);\n      args[i] = arg;\n    } catch (err) {\n      throw new Error(\n        `failed to parse haystack item ${i} for \"in\" expression: ${err.message}`,\n      );\n    }\n  }\n\n  const needle = parse(encoded[1], needleType, context);\n  return [needle, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withPaletteArgs(encoded, returnType, context) {\n  let index;\n  try {\n    index = parse(encoded[1], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse first argument in palette expression: ${err.message}`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('the second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    let color;\n    try {\n      color = parse(colors[i], ColorType, context);\n    } catch (err) {\n      throw new Error(\n        `failed to parse color at index ${i} in palette expression: ${err.message}`,\n      );\n    }\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `the palette color at index ${i} must be a literal value`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {Array<ArgValidator>} validators A chain of argument validators.  The last validator is expected\n * to return the parsed arguments.\n * @return {Parser} The parser.\n */\nfunction createCallExpressionParser(...validators) {\n  return function (encoded, returnType, context) {\n    const operator = encoded[0];\n\n    /**\n     * @type {Array<Expression>}\n     */\n    let args;\n    for (let i = 0; i < validators.length; i++) {\n      const parsed = validators[i](encoded, returnType, context);\n      if (i == validators.length - 1) {\n        if (!parsed) {\n          throw new Error(\n            'expected last argument validator to return the parsed args',\n          );\n        }\n        args = parsed;\n      }\n    }\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {number} returnType The expected return type of the call expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, returnType, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`unknown operator: ${operator}`);\n  }\n  return parser(encoded, returnType, context);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  fromString,\n  lchaToRgba,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\nimport {ColorType, LiteralExpression, Ops, parse} from './expression.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, type, context);\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var:\n    case Ops.Has: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => {\n        const args = expression.args;\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          value = value[key];\n        }\n        return value;\n      };\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    case Ops.Has: {\n      return (context) => {\n        const args = expression.args;\n        if (!(name in context.properties)) {\n          return false;\n        }\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          if (!value || !Object.hasOwn(value, key)) {\n            return false;\n          }\n          value = value[key];\n        }\n        return true;\n      };\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length - 1; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return lchaToRgba(lcha);\n}\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Image\n */\nimport ImageState from './ImageState.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {Loader|null}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              (CREATE_IMAGE_BITMAP && image instanceof ImageBitmap) ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 1024;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `1024`. Change this value when\n   * your map uses more than 1024 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport {decodeFallback} from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport EventTarget from '../events/Target.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const ctx = createCanvasContext2D(\n      Math.ceil(image.width * pixelRatio),\n      Math.ceil(image.height * pixelRatio),\n    );\n    const canvas = ctx.canvas;\n\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          const onChange = () => {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          };\n          this.addEventListener(EventType.CHANGE, onChange);\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {toString} from './color.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {fontWeights, getFontParameters} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\nconst genericFontFamilies = new Set([\n  'serif',\n  'sans-serif',\n  'monospace',\n  'cursive',\n  'fantasy',\n  'system-ui',\n  'ui-serif',\n  'ui-sans-serif',\n  'ui-monospace',\n  'ui-rounded',\n  'emoji',\n  'math',\n  'fangsong',\n]);\n\n/**\n * @param {string} style Css font-style\n * @param {string} weight Css font-weight\n * @param {string} family Css font-family\n * @return {string} Font key.\n */\nfunction getFontKey(style, weight, family) {\n  return `${style} ${weight} 16px \"${family}\"`;\n}\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  let timeout, fontFaceSet;\n\n  /**\n   * @param {string} fontSpec Css font spec\n   * @return {Promise<boolean>} Font with style and weight is available\n   */\n  async function isAvailable(fontSpec) {\n    await fontFaceSet.ready;\n    const fontFaces = await fontFaceSet.load(fontSpec);\n    if (fontFaces.length === 0) {\n      return false;\n    }\n    const font = getFontParameters(fontSpec);\n    const checkFamily = font.families[0].toLowerCase();\n    const checkWeight = font.weight;\n    return fontFaces.some(\n      /**\n       * @param {import('../css.js').FontParameters} f Font.\n       * @return {boolean} Font matches.\n       */\n      (f) => {\n        const family = f.family.replace(/^['\"]|['\"]$/g, '').toLowerCase();\n        const weight = fontWeights[f.weight] || f.weight;\n        return (\n          family === checkFamily &&\n          f.style === font.style &&\n          weight == checkWeight\n        );\n      },\n    );\n  }\n\n  async function check() {\n    await fontFaceSet.ready;\n    let done = true;\n    const checkedFontsProperties = checkedFonts.getProperties();\n    const fonts = Object.keys(checkedFontsProperties).filter(\n      (key) => checkedFontsProperties[key] < retries,\n    );\n    for (let i = fonts.length - 1; i >= 0; --i) {\n      const font = fonts[i];\n      let currentRetries = checkedFontsProperties[font];\n      if (currentRetries < retries) {\n        if (await isAvailable(font)) {\n          clear(textHeights);\n          checkedFonts.set(font, retries);\n        } else {\n          currentRetries += 10;\n          checkedFonts.set(font, currentRetries, true);\n          if (currentRetries < retries) {\n            done = false;\n          }\n        }\n      }\n    }\n    timeout = undefined;\n    if (!done) {\n      timeout = setTimeout(check, 100);\n    }\n  }\n\n  return async function (fontSpec) {\n    if (!fontFaceSet) {\n      fontFaceSet = WORKER_OFFSCREEN_CANVAS ? self.fonts : document.fonts;\n    }\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    let needCheck = false;\n    for (const family of families) {\n      if (genericFontFamilies.has(family)) {\n        continue;\n      }\n      const key = getFontKey(font.style, font.weight, family);\n      if (checkedFonts.get(key) !== undefined) {\n        continue;\n      }\n      checkedFonts.set(key, 0, true);\n      needCheck = true;\n    }\n    if (needCheck) {\n      clearTimeout(timeout);\n      timeout = setTimeout(check, 100);\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/Image\n */\nimport {toSize} from '../size.js';\nimport {abstract} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\nimport IconImage from './IconImage.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport ImageStyle from './Image.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    /**\n     * @private\n     */\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    const fillKey = this.fill_?.getKey();\n    const cacheKey =\n      `${pixelRatio},${this.angle_},${this.radius},${this.radius2_},${this.points_},${fillKey}` +\n      Object.values(this.renderOptions_).join(',');\n    let image = /** @type {HTMLCanvasElement} */ (\n      iconImageCache.get(cacheKey, null, null)?.getImage(1)\n    );\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const size = Math.ceil(renderOptions.size * pixelRatio);\n      const context = createCanvasContext2D(size, size);\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      iconImageCache.set(\n        cacheKey,\n        null,\n        null,\n        new IconImage(image, undefined, null, ImageState.LOADED, null),\n      );\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is a {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {string} Key of the fill for cache lookup.\n   */\n  getKey() {\n    const fill = this.getColor();\n    if (!fill) {\n      return '';\n    }\n    return fill instanceof CanvasPattern || fill instanceof CanvasGradient\n      ? getUid(fill)\n      : typeof fill === 'object' && 'src' in fill\n        ? fill.src + ':' + fill.offset\n        : asArray(fill).toString();\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Icon\n */\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\nimport ImageStyle from './Image.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @private\n     */\n    this.initialOptions_;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   * @override\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   * @override\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport {assert} from '../asserts.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * **declutter**: Overlapping symbols and text are decluttered.\n * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport {toSize} from '../size.js';\nimport Fill from './Fill.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {boolean} [keepUpright=true] Whether the text can be rotated 180° to prevent being rendered upside down.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.keepUpright_ = options.keepUpright;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      keepUpright: this.getKeepUpright(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Determine whether the text can be rendered upside down.\n   * @return {boolean|undefined} Keep text upright.\n   * @api\n   */\n  getKeepUpright() {\n    return this.keepUpright_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set whether the text can be rendered upside down.\n   *\n   * @param {boolean} keepUpright Keep text upright.\n   * @api\n   */\n  setKeepUpright(keepUpright) {\n    this.keepUpright_ = keepUpright;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/render/canvas/style\n */\n\nimport {NO_COLOR} from '../../color.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    if (flatStyle[prefix + 'fill-color'] === 'none') {\n      // avoids hit detection\n      return (context) => null;\n    }\n\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === NO_COLOR) {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === NO_COLOR) {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluateKeepUpright = booleanEvaluator(\n    flatStyle,\n    prefix + 'keep-upright',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    if (evaluateKeepUpright) {\n      text.setKeepUpright(evaluateKeepUpright(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], ColorType, context);\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport RBush from 'rbush';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport Layer from './Layer.js';\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/Vector.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @extends {Layer<VectorSourceType, RendererType>}\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/VectorLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<FeatureType, VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   * @override\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {import(\"../render.js\").OrderFunction|null|undefined} Render order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   * @override\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style === undefined ? createDefaultStyle : style;\n    const styleLike = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(styleLike);\n    this.changed();\n  }\n\n  /**\n   * @param {boolean|string|number} declutter Declutter images and text.\n   * @api\n   */\n  setDeclutter(declutter) {\n    this.declutter_ = declutter ? String(declutter) : undefined;\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type {Array<import(\"../style/flat.js\").Rule>}\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {wrapX} from '../coordinate.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {inView} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport ObjectEventType from '../ObjectEventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {replaceChildren} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport {inView} from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport MapRenderer from './Map.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @private\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText,\n      map,\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(\n      (a, b) => a.zIndex - b.zIndex,\n    );\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    if (!frameState.declutter) {\n      return;\n    }\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/Map\n */\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport BaseObject from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {equals} from './array.js';\nimport {assert} from './asserts.js';\nimport {warn} from './console.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport EventType from './events/EventType.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport Layer from './layer/Layer.js';\nimport PointerEventType from './pointer/EventType.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport RenderEventType from './render/EventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport {hasArea} from './size.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {getUid} from './util.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default<import('./render/canvas/Executor.js').DeclutterEntry>>|null} declutter\n * Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n *  `tabindex` atribute must be set on the custom element's host element.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderComplete_ = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @private\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {PointerEvent|KeyboardEvent|WheelEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = mapBrowserEvent.originalEvent;\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n\n      const currentDoc =\n        rootNode instanceof ShadowRoot\n          ? rootNode.host === target\n            ? rootNode.host.ownerDocument\n            : rootNode\n          : rootNode === doc\n            ? doc.documentElement\n            : rootNode;\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !currentDoc.contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    if (frameState) {\n      for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n        postRenderFunctions[i](this, frameState);\n      }\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      this.viewport_.remove();\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_,\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this),\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false,\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n      );\n\n      let keyboardEventTarget;\n      if (!this.keyboardEventTarget_) {\n        // check if map target is in shadowDOM, if yes use host element as target\n        const targetRoot = targetElement.getRootNode();\n        const targetCandidate =\n          targetRoot instanceof ShadowRoot ? targetRoot.host : targetElement;\n        keyboardEventTarget = targetCandidate;\n      } else {\n        keyboardEventTarget = this.keyboardEventTarget_;\n      }\n\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this,\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this,\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    if (!this.frameState_) {\n      return;\n    }\n    const layerStates = this.frameState_.layerStatesArray;\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      (this.hasListener(MapEventType.LOADSTART) ||\n        this.hasListener(MapEventType.LOADEND) ||\n        this.hasListener(RenderEventType.RENDERCOMPLETE)) &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.tileQueue_.getCount() &&\n      !this.getLoadingOrNotReady();\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n   *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n   *  `tabindex` atribute must be set on the custom element's host element.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>|null} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [Math.max(0, width), Math.max(0, height)];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/webgl\n */\n\nimport {SAFARI_BUG_237906} from './has.js';\n\n/**\n * Constants taken from goog.webgl\n */\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STREAM_DRAW = 0x88e0;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STATIC_DRAW = 0x88e4;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const DYNAMIC_DRAW = 0x88e8;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n/**\n  end of goog.webgl constants\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object} [attributes] Attributes.\n * @return {WebGLRenderingContext|null} WebGL rendering context.\n */\nexport function getContext(canvas, attributes) {\n  attributes = Object.assign(\n    {\n      preserveDrawingBuffer: true,\n      antialias: SAFARI_BUG_237906 ? false : true, // https://bugs.webkit.org/show_bug.cgi?id=237906\n    },\n    attributes,\n  );\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch {\n      // pass\n    }\n  }\n  return null;\n}\n\n/**\n * @type {Array<string>|null}\n */\nlet supportedExtensions = null;\n\n/**\n * @return {Array<string>|null} List of supported WebGL extensions.\n */\nexport function getSupportedExtensions() {\n  if (!supportedExtensions) {\n    const canvas = document.createElement('canvas');\n    const gl = getContext(canvas);\n    if (gl) {\n      supportedExtensions = gl.getSupportedExtensions();\n    }\n  }\n  return supportedExtensions;\n}\n","/**\n * @module ol/webgl/Buffer\n */\nimport {assert} from '../asserts.js';\nimport {\n  ARRAY_BUFFER,\n  DYNAMIC_DRAW,\n  ELEMENT_ARRAY_BUFFER,\n  STATIC_DRAW,\n  STREAM_DRAW,\n} from '../webgl.js';\n\n/**\n * Used to describe the intended usage for the data: `STATIC_DRAW`, `STREAM_DRAW`\n * or `DYNAMIC_DRAW`.\n * @enum {number}\n */\nexport const BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW,\n};\n\n/**\n * @classdesc\n * Object used to store an array of data as well as usage information for that data.\n * Stores typed arrays internally, either Float32Array or Uint16/32Array depending on\n * the buffer type (ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER) and available extensions.\n *\n * To populate the array, you can either use:\n * A size using `#ofSize(buffer)`\n * An `ArrayBuffer` object using `#fromArrayBuffer(buffer)`\n * A plain array using `#fromArray(array)`\n *\n * Note:\n * See the documentation of [WebGLRenderingContext.bufferData](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData)\n * for more info on buffer usage.\n */\nclass WebGLArrayBuffer {\n  /**\n   * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n   * @param {number} [usage] Intended usage, either `STATIC_DRAW`, `STREAM_DRAW` or `DYNAMIC_DRAW`.\n   * Default is `STATIC_DRAW`.\n   */\n  constructor(type, usage) {\n    /**\n     * @private\n     * @type {Float32Array|Uint32Array|null}\n     */\n    this.array_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.type_ = type;\n\n    assert(\n      type === ARRAY_BUFFER || type === ELEMENT_ARRAY_BUFFER,\n      'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.usage_ = usage !== undefined ? usage : BufferUsage.STATIC_DRAW;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size (all values will be zeroes).\n   * @param {number} size Array size\n   * @return {WebGLArrayBuffer} This\n   */\n  ofSize(size) {\n    this.array_ = new (getArrayClassForType(this.type_))(size);\n    return this;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size.\n   * @param {Array<number>} array Numerical array\n   * @return {WebGLArrayBuffer} This\n   */\n  fromArray(array) {\n    this.array_ = getArrayClassForType(this.type_).from(array);\n    return this;\n  }\n\n  /**\n   * Populates the buffer with a raw binary array buffer.\n   * @param {ArrayBuffer} buffer Raw binary buffer to populate the array with. Note that this buffer must have been\n   * initialized for the same typed array class.\n   * @return {WebGLArrayBuffer} This\n   */\n  fromArrayBuffer(buffer) {\n    this.array_ = new (getArrayClassForType(this.type_))(buffer);\n    return this;\n  }\n\n  /**\n   * @return {number} Buffer type.\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Will return null if the buffer was not initialized\n   * @return {Float32Array|Uint32Array|null} Array.\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * @param {Float32Array|Uint32Array} array Array.\n   */\n  setArray(array) {\n    const ArrayType = getArrayClassForType(this.type_);\n    if (!(array instanceof ArrayType)) {\n      throw new Error(`Expected ${ArrayType}`);\n    }\n    this.array_ = array;\n  }\n\n  /**\n   * @return {number} Usage.\n   */\n  getUsage() {\n    return this.usage_;\n  }\n\n  /**\n   * Will return 0 if the buffer is not initialized\n   * @return {number} Array size\n   */\n  getSize() {\n    return this.array_ ? this.array_.length : 0;\n  }\n}\n\n/**\n * Returns a typed array constructor based on the given buffer type\n * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n * @return {Float32ArrayConstructor|Uint32ArrayConstructor} The typed array class to use for this buffer.\n */\nexport function getArrayClassForType(type) {\n  switch (type) {\n    case ARRAY_BUFFER:\n      return Float32Array;\n    case ELEMENT_ARRAY_BUFFER:\n      return Uint32Array;\n    default:\n      return Float32Array;\n  }\n}\n\nexport default WebGLArrayBuffer;\n","/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored',\n};\n","/**\n * @module ol/webgl/PostProcessingPass\n */\n\nimport {getUid} from '../util.js';\n\nconst DEFAULT_VERTEX_SHADER = `\n  precision mediump float;\n\n  attribute vec2 a_position;\n  varying vec2 v_texCoord;\n  varying vec2 v_screenCoord;\n\n  uniform vec2 u_screenSize;\n\n  void main() {\n    v_texCoord = a_position * 0.5 + 0.5;\n    v_screenCoord = v_texCoord * u_screenSize;\n    gl_Position = vec4(a_position, 0.0, 1.0);\n  }\n`;\n\nconst DEFAULT_FRAGMENT_SHADER = `\n  precision mediump float;\n\n  uniform sampler2D u_image;\n  uniform float u_opacity;\n\n  varying vec2 v_texCoord;\n\n  void main() {\n    gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n  }\n`;\n\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {WebGLUniformLocation} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\n * premultiplied.\n *\n * Default shaders are shown hereafter:\n *\n * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *   uniform float u_opacity;\n *\n *   varying vec2 v_texCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n *   }\n *   ```\n */\nclass WebGLPostProcessingPass {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     */\n    this.gl_ = options.webGlContext;\n    const gl = this.gl_;\n\n    /**\n     * @private\n     */\n    this.scaleRatio_ = options.scaleRatio || 1;\n\n    /**\n     * @type {WebGLTexture}\n     * @private\n     */\n    this.renderTargetTexture_ = gl.createTexture();\n\n    /**\n     * @type {import('../size.js').Size|null}\n     * @private\n     */\n    this.renderTargetTextureSize_ = null;\n\n    /**\n     * @private\n     */\n    this.frameBuffer_ = gl.createFramebuffer();\n    /**\n     * @private\n     */\n    this.depthBuffer_ = gl.createRenderbuffer();\n\n    // compile the program for the frame buffer\n    // TODO: make compilation errors show up\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(\n      vertexShader,\n      options.vertexShader || DEFAULT_VERTEX_SHADER,\n    );\n    gl.compileShader(vertexShader);\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(\n      fragmentShader,\n      options.fragmentShader || DEFAULT_FRAGMENT_SHADER,\n    );\n    gl.compileShader(fragmentShader);\n    /**\n     * @private\n     */\n    this.renderTargetProgram_ = gl.createProgram();\n    gl.attachShader(this.renderTargetProgram_, vertexShader);\n    gl.attachShader(this.renderTargetProgram_, fragmentShader);\n    gl.linkProgram(this.renderTargetProgram_);\n\n    // bind the vertices buffer for the frame buffer\n    /**\n     * @private\n     */\n    this.renderTargetVerticesBuffer_ = gl.createBuffer();\n    const verticesArray = [-1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1];\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(verticesArray),\n      gl.STATIC_DRAW,\n    );\n\n    /**\n     * @private\n     */\n    this.renderTargetAttribLocation_ = gl.getAttribLocation(\n      this.renderTargetProgram_,\n      'a_position',\n    );\n    /**\n     * @private\n     */\n    this.renderTargetUniformLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_screenSize',\n    );\n    /**\n     * @private\n     */\n    this.renderTargetOpacityLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_opacity',\n    );\n    /**\n     * @private\n     */\n    this.renderTargetTextureLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_image',\n    );\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    options.uniforms &&\n      Object.keys(options.uniforms).forEach((name) => {\n        this.uniforms_.push({\n          value: options.uniforms[name],\n          location: gl.getUniformLocation(this.renderTargetProgram_, name),\n        });\n      });\n  }\n\n  getRenderTargetTexture() {\n    return this.renderTargetTexture_;\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Initialize the render target texture of the post process, make sure it is at the\n   * right size and bind it as a render target for the next draw calls.\n   * The last step to be initialized will be the one where the primitives are rendered.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   */\n  init(frameState) {\n    const gl = this.getGL();\n    const textureSize = [\n      gl.drawingBufferWidth * this.scaleRatio_,\n      gl.drawingBufferHeight * this.scaleRatio_,\n    ];\n\n    // rendering goes to my buffer\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n    gl.bindRenderbuffer(gl.RENDERBUFFER, this.getDepthBuffer());\n    gl.viewport(0, 0, textureSize[0], textureSize[1]);\n\n    // if size has changed: adjust canvas & render target texture\n    if (\n      !this.renderTargetTextureSize_ ||\n      this.renderTargetTextureSize_[0] !== textureSize[0] ||\n      this.renderTargetTextureSize_[1] !== textureSize[1]\n    ) {\n      this.renderTargetTextureSize_ = textureSize;\n\n      // create a new texture\n      const level = 0;\n      const internalFormat = gl.RGBA;\n      const border = 0;\n      const format = gl.RGBA;\n      const type = gl.UNSIGNED_BYTE;\n      const data = null;\n      gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        textureSize[0],\n        textureSize[1],\n        border,\n        format,\n        type,\n        data,\n      );\n\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n      // bind the texture to the framebuffer\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        this.renderTargetTexture_,\n        0,\n      );\n\n      gl.renderbufferStorage(\n        gl.RENDERBUFFER,\n        gl.DEPTH_COMPONENT16,\n        textureSize[0],\n        textureSize[1],\n      );\n      gl.framebufferRenderbuffer(\n        gl.FRAMEBUFFER,\n        gl.DEPTH_ATTACHMENT,\n        gl.RENDERBUFFER,\n        this.depthBuffer_,\n      );\n    }\n  }\n\n  /**\n   * Render to the next postprocessing pass (or to the canvas if final pass).\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   */\n  apply(frameState, nextPass, preCompose, postCompose) {\n    const gl = this.getGL();\n    const size = frameState.size;\n\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER,\n      nextPass ? nextPass.getFrameBuffer() : null,\n    );\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n\n    if (!nextPass) {\n      // clear the canvas if we are the first to render to it\n      // and preserveDrawingBuffer is true\n      const canvasId = getUid(gl.canvas);\n      if (!frameState.renderTargets[canvasId]) {\n        const attributes = gl.getContextAttributes();\n        if (attributes && attributes.preserveDrawingBuffer) {\n          gl.clearColor(0.0, 0.0, 0.0, 0.0);\n          gl.clearDepth(1.0);\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        }\n\n        frameState.renderTargets[canvasId] = true;\n      }\n    }\n\n    gl.disable(gl.DEPTH_TEST);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n\n    gl.useProgram(this.renderTargetProgram_);\n    gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n    gl.vertexAttribPointer(\n      this.renderTargetAttribLocation_,\n      2,\n      gl.FLOAT,\n      false,\n      0,\n      0,\n    );\n    gl.uniform2f(this.renderTargetUniformLocation_, size[0], size[1]);\n    gl.uniform1i(this.renderTargetTextureLocation_, 0);\n\n    const opacity = frameState.layerStatesArray[frameState.layerIndex].opacity;\n    gl.uniform1f(this.renderTargetOpacityLocation_, opacity);\n\n    this.applyUniforms(frameState);\n\n    if (preCompose) {\n      preCompose(gl, frameState);\n    }\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n    if (postCompose) {\n      postCompose(gl, frameState);\n    }\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer\n   */\n  getFrameBuffer() {\n    return this.frameBuffer_;\n  }\n\n  /**\n   * @return {WebGLRenderbuffer} Depth buffer\n   */\n  getDepthBuffer() {\n    return this.depthBuffer_;\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 1;\n    this.uniforms_.forEach(function (uniform) {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.texture = gl.createTexture();\n        }\n        gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        if (value instanceof ImageData) {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            value.width,\n            value.height,\n            0,\n            gl.UNSIGNED_BYTE,\n            new Uint8Array(value.data),\n          );\n        } else {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value,\n          );\n        }\n\n        // fill texture slots\n        gl.uniform1i(uniform.location, textureSlot++);\n      } else if (Array.isArray(value)) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(uniform.location, value[0], value[1]);\n            return;\n          case 3:\n            gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n            return;\n          case 4:\n            gl.uniform4f(\n              uniform.location,\n              value[0],\n              value[1],\n              value[2],\n              value[3],\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(uniform.location, value);\n      }\n    });\n  }\n}\n\nexport default WebGLPostProcessingPass;\n","/**\n * @module ol/webgl/Helper\n */\nimport Disposable from '../Disposable.js';\nimport {clear} from '../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {getUid} from '../util.js';\nimport {create, fromTransform} from '../vec/mat4.js';\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport {\n  FLOAT,\n  UNSIGNED_BYTE,\n  UNSIGNED_INT,\n  UNSIGNED_SHORT,\n  getContext,\n} from '../webgl.js';\nimport WebGLPostProcessingPass from './PostProcessingPass.js';\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer Buffer.\n * @property {WebGLBuffer} webGlBuffer WebGlBuffer.\n */\n\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport const ShaderType = {\n  FRAGMENT_SHADER: 0x8b30,\n  VERTEX_SHADER: 0x8b31,\n};\n\n/**\n * Names of uniforms made available to all shaders.\n * Please note: changing these *will* break custom shaders!\n * @enum {string}\n */\nexport const DefaultUniform = {\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  SCREEN_TO_WORLD_MATRIX: 'u_screenToWorldMatrix',\n  TIME: 'u_time',\n  ZOOM: 'u_zoom',\n  RESOLUTION: 'u_resolution',\n  ROTATION: 'u_rotation',\n  VIEWPORT_SIZE_PX: 'u_viewportSizePx',\n  PIXEL_RATIO: 'u_pixelRatio',\n  HIT_DETECTION: 'u_hitDetection',\n};\n\n/**\n * Attribute types, either `UNSIGNED_BYTE`, `UNSIGNED_SHORT`, `UNSIGNED_INT` or `FLOAT`\n * Note: an attribute stored in a `Float32Array` should be of type `FLOAT`.\n * @enum {number}\n */\nexport const AttributeType = {\n  UNSIGNED_BYTE: UNSIGNED_BYTE,\n  UNSIGNED_SHORT: UNSIGNED_SHORT,\n  UNSIGNED_INT: UNSIGNED_INT,\n  FLOAT: FLOAT,\n};\n\n/**\n * Description of an attribute in a buffer\n * @typedef {Object} AttributeDescription\n * @property {string} name Attribute name to use in shaders\n * @property {number} size Number of components per attributes\n * @property {AttributeType} [type] Attribute type, i.e. number of bytes used to store the value. This is\n * determined by the class of typed array which the buffer uses (eg. `Float32Array` for a `FLOAT` attribute).\n * Default is `FLOAT`.\n */\n\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|WebGLTexture|import(\"../transform\").Transform} UniformLiteralValue\n */\n\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../Map.js\").FrameState):UniformLiteralValue} UniformValue\n */\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n * @property {string} [canvasCacheKey] The cache key for the canvas.\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue} [value] Value\n * @property {UniformValue} [prevValue] The previous value.\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @typedef {Object} CanvasCacheItem\n * @property {WebGLRenderingContext} context The context of this canvas.\n * @property {number} users The count of users of this canvas.\n */\n\n/**\n * @type {Object<string,CanvasCacheItem>}\n */\nconst canvasCache = {};\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {string} The shared cache key.\n */\nfunction getSharedCanvasCacheKey(key) {\n  return 'shared/' + key;\n}\n\nlet uniqueCanvasCacheKeyCount = 0;\n\n/**\n * @return {string} The unique cache key.\n */\nfunction getUniqueCanvasCacheKey() {\n  const key = 'unique/' + uniqueCanvasCacheKeyCount;\n  uniqueCanvasCacheKeyCount += 1;\n  return key;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {WebGLRenderingContext} The canvas.\n */\nfunction getOrCreateContext(key) {\n  let cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    canvas.style.position = 'absolute';\n    canvas.style.left = '0';\n    const context = getContext(canvas);\n    cacheItem = {users: 0, context};\n    canvasCache[key] = cacheItem;\n  }\n\n  cacheItem.users += 1;\n  return cacheItem.context;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n */\nfunction releaseCanvas(key) {\n  const cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    return;\n  }\n\n  cacheItem.users -= 1;\n  if (cacheItem.users > 0) {\n    return;\n  }\n\n  const gl = cacheItem.context;\n  const extension = gl.getExtension('WEBGL_lose_context');\n  if (extension) {\n    extension.loseContext();\n  }\n  const canvas = gl.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n\n  delete canvasCache[key];\n}\n\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   `gl_Position`: position of the vertex in screen space\n *\n *   Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls; note how a frameState is required to set up a program,\n *   // as several default uniforms are computed from it (projection matrix, zoom level, etc.)\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   const program = this.context.getProgram(fragmentShader, vertexShader);\n *   helper.useProgram(this.program, frameState);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   helper.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   const verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   const indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   helper.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   helper.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Specify the attribute names with\n *   {@link module:ol/webgl/Helper~WebGLHelper#enableAttributes} (see code snippet below).\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   helper.enableAttributes([\n *     {\n *        name: 'a_position',\n *        size: 2\n *     },\n *     {\n *       name: 'a_offset',\n *       size: 2\n *     },\n *     {\n *       name: 'a_texCoord',\n *       size: 2\n *     }\n *   ])\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   helper.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   helper.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   helper.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n */\nclass WebGLHelper extends Disposable {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n    options = options || {};\n\n    /** @private */\n    this.boundHandleWebGLContextLost_ = this.handleWebGLContextLost.bind(this);\n\n    /** @private */\n    this.boundHandleWebGLContextRestored_ =\n      this.handleWebGLContextRestored.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.canvasCacheKey_ = options.canvasCacheKey\n      ? getSharedCanvasCacheKey(options.canvasCacheKey)\n      : getUniqueCanvasCacheKey();\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = getOrCreateContext(this.canvasCacheKey_);\n\n    /**\n     * @private\n     * @type {!Object<string, BufferCacheEntry>}\n     */\n    this.bufferCache_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object>}\n     */\n    this.extensionCache_ = {};\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.currentProgram_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.needsToBeRecreated_ = false;\n\n    const canvas = this.gl_.canvas;\n\n    canvas.addEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_,\n    );\n    canvas.addEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_,\n    );\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetRotateMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetScaleMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, WebGLUniformLocation>>}\n     */\n    this.uniformLocationsByProgram_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.attribLocationsByProgram_ = {};\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass.\n     * If the uniform is a texture, the WebGL Texture object will be stored here.\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    if (options.uniforms) {\n      this.setUniforms(options.uniforms);\n    }\n\n    /**\n     * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n     * options. If no post process was given, a default one is used (so as not to have to make an exception to\n     * the frame buffer logic).\n     * @type {Array<WebGLPostProcessingPass>}\n     * @private\n     */\n    this.postProcessPasses_ = options.postProcesses\n      ? options.postProcesses.map(\n          (options) =>\n            new WebGLPostProcessingPass({\n              webGlContext: this.gl_,\n              scaleRatio: options.scaleRatio,\n              vertexShader: options.vertexShader,\n              fragmentShader: options.fragmentShader,\n              uniforms: options.uniforms,\n            }),\n        )\n      : [new WebGLPostProcessingPass({webGlContext: this.gl_})];\n\n    /**\n     * @type {string|null}\n     * @private\n     */\n    this.shaderCompileErrors_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.startTime_ = Date.now();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxAttributeCount_ = this.gl_.getParameter(\n      this.gl_.MAX_VERTEX_ATTRIBS,\n    );\n  }\n\n  /**\n   * @param {Object<string, UniformValue>} uniforms Uniform definitions.\n   */\n  setUniforms(uniforms) {\n    this.uniforms_ = [];\n    this.addUniforms(uniforms);\n  }\n\n  /**\n   * @param {Object<string, UniformValue>} uniforms Uniform definitions.\n   */\n  addUniforms(uniforms) {\n    for (const name in uniforms) {\n      this.uniforms_.push({\n        name: name,\n        value: uniforms[name],\n      });\n    }\n  }\n\n  /**\n   * @param {string} canvasCacheKey The canvas cache key.\n   * @return {boolean} The provided key matches the one this helper was constructed with.\n   */\n  canvasCacheKeyMatches(canvasCacheKey) {\n    return this.canvasCacheKey_ === getSharedCanvasCacheKey(canvasCacheKey);\n  }\n\n  /**\n   * Get a WebGL extension.  If the extension is not supported, null is returned.\n   * Extensions are cached after they are enabled for the first time.\n   * @param {string} name The extension name.\n   * @return {Object|null} The extension or null if not supported.\n   */\n  getExtension(name) {\n    if (name in this.extensionCache_) {\n      return this.extensionCache_[name];\n    }\n    const extension = this.gl_.getExtension(name);\n    this.extensionCache_[name] = extension;\n    return extension;\n  }\n\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  bindBuffer(buffer) {\n    const gl = this.gl_;\n    const bufferKey = getUid(buffer);\n    let bufferCache = this.bufferCache_[bufferKey];\n    if (!bufferCache) {\n      const webGlBuffer = gl.createBuffer();\n      bufferCache = {\n        buffer: buffer,\n        webGlBuffer: webGlBuffer,\n      };\n      this.bufferCache_[bufferKey] = bufferCache;\n    }\n    gl.bindBuffer(buffer.getType(), bufferCache.webGlBuffer);\n  }\n\n  /**\n   * Update the data contained in the buffer array; this is required for the\n   * new data to be rendered\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  flushBufferData(buffer) {\n    const gl = this.gl_;\n    this.bindBuffer(buffer);\n    gl.bufferData(buffer.getType(), buffer.getArray(), buffer.getUsage());\n  }\n\n  /**\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\n   */\n  deleteBuffer(buf) {\n    const bufferKey = getUid(buf);\n    // Note: gl.deleteBuffer is not called here since we let WebGL garbage collect it automatically\n    delete this.bufferCache_[bufferKey];\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    const canvas = this.gl_.canvas;\n    canvas.removeEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_,\n    );\n    canvas.removeEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_,\n    );\n\n    releaseCanvas(this.canvasCacheKey_);\n\n    delete this.gl_;\n  }\n\n  /**\n   * Clear the buffer & set the viewport to draw.\n   * Post process passes will be initialized here, the first one being bound as a render target for\n   * subsequent draw calls.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   * @param {boolean} [enableDepth] If true, enables depth testing.\n   */\n  prepareDraw(frameState, disableAlphaBlend, enableDepth) {\n    const gl = this.gl_;\n    const canvas = this.getCanvas();\n    const size = frameState.size;\n    const pixelRatio = frameState.pixelRatio;\n\n    if (\n      canvas.width !== size[0] * pixelRatio ||\n      canvas.height !== size[1] * pixelRatio\n    ) {\n      canvas.width = size[0] * pixelRatio;\n      canvas.height = size[1] * pixelRatio;\n      canvas.style.width = size[0] + 'px';\n      canvas.style.height = size[1] + 'px';\n    }\n\n    // loop backwards in post processes list\n    for (let i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n      this.postProcessPasses_[i].init(frameState);\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.depthRange(0.0, 1.0);\n    gl.clearDepth(1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n    if (enableDepth) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthFunc(gl.LEQUAL);\n    } else {\n      gl.disable(gl.DEPTH_TEST);\n    }\n  }\n\n  /**\n   * @param {WebGLFramebuffer|null} frameBuffer The frame buffer.\n   * @param {WebGLTexture} [texture] The texture.\n   */\n  bindFrameBuffer(frameBuffer, texture) {\n    const gl = this.getGL();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    if (texture) {\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        texture,\n        0,\n      );\n    }\n  }\n\n  /**\n   * Bind the frame buffer from the initial render.\n   */\n  bindInitialFrameBuffer() {\n    const gl = this.getGL();\n    const frameBuffer = this.postProcessPasses_[0].getFrameBuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    const texture = this.postProcessPasses_[0].getRenderTargetTexture();\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      texture,\n      0,\n    );\n  }\n\n  /**\n   * Prepare a program to use a texture.\n   * @param {WebGLTexture} texture The texture.\n   * @param {number} slot The texture slot.\n   * @param {string} uniformName The corresponding uniform name.\n   */\n  bindTexture(texture, slot, uniformName) {\n    const gl = this.gl_;\n    gl.activeTexture(gl.TEXTURE0 + slot);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.uniform1i(this.getUniformLocation(uniformName), slot);\n  }\n\n  /**\n   * Set up an attribute array buffer for use in the vertex shader.\n   * @param {import(\"./Buffer\").default} buffer The buffer.\n   * @param {string} attributeName The attribute name.\n   * @param {number} size The number of components per attribute vertex.\n   */\n  bindAttribute(buffer, attributeName, size) {\n    const gl = this.getGL();\n    this.bindBuffer(buffer);\n    const index = this.getAttributeLocation(attributeName);\n    gl.enableVertexAttribArray(index);\n    gl.vertexAttribPointer(index, size, gl.FLOAT, false, 0, 0);\n  }\n\n  /**\n   * Clear the render target & bind it for future draw operations.\n   * This is similar to `prepareDraw`, only post processes will not be applied.\n   * Note: the whole viewport will be drawn to the render target, regardless of its size.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {import(\"./RenderTarget.js\").default} renderTarget Render target to draw to\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   * @param {boolean} [enableDepth] If true, enables depth testing.\n   */\n  prepareDrawToRenderTarget(\n    frameState,\n    renderTarget,\n    disableAlphaBlend,\n    enableDepth,\n  ) {\n    const gl = this.gl_;\n    const size = renderTarget.getSize();\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget.getFramebuffer());\n    gl.bindRenderbuffer(gl.RENDERBUFFER, renderTarget.getDepthbuffer());\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.bindTexture(gl.TEXTURE_2D, renderTarget.getTexture());\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.depthRange(0.0, 1.0);\n    gl.clearDepth(1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n    if (enableDepth) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthFunc(gl.LEQUAL);\n    } else {\n      gl.disable(gl.DEPTH_TEST);\n    }\n  }\n\n  /**\n   * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   */\n  drawElements(start, end) {\n    const gl = this.gl_;\n    this.getExtension('OES_element_index_uint');\n\n    const elementType = gl.UNSIGNED_INT;\n    const elementSize = 4;\n\n    const numItems = end - start;\n    const offsetInBytes = start * elementSize;\n    gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n  }\n\n  /**\n   * Apply the successive post process passes which will eventually render to the actual canvas.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   */\n  finalizeDraw(frameState, preCompose, postCompose) {\n    // apply post processes using the next one as target\n    for (let i = 0, ii = this.postProcessPasses_.length; i < ii; i++) {\n      if (i === ii - 1) {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          null,\n          preCompose,\n          postCompose,\n        );\n      } else {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          this.postProcessPasses_[i + 1],\n        );\n      }\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getCanvas() {\n    return /** @type {HTMLCanvasElement} */ (this.gl_.canvas);\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyFrameState(frameState) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    this.setUniformFloatValue(\n      DefaultUniform.TIME,\n      (Date.now() - this.startTime_) * 0.001,\n    );\n    this.setUniformFloatValue(DefaultUniform.ZOOM, frameState.viewState.zoom);\n    this.setUniformFloatValue(\n      DefaultUniform.RESOLUTION,\n      frameState.viewState.resolution,\n    );\n    this.setUniformFloatValue(DefaultUniform.PIXEL_RATIO, pixelRatio);\n    this.setUniformFloatVec2(DefaultUniform.VIEWPORT_SIZE_PX, [\n      size[0],\n      size[1],\n    ]);\n    this.setUniformFloatValue(DefaultUniform.ROTATION, rotation);\n  }\n\n  /**\n   * Sets the `u_hitDetection` uniform.\n   * @param {boolean} enabled Whether to enable the hit detection code path\n   */\n  applyHitDetectionUniform(enabled) {\n    const loc = this.getUniformLocation(DefaultUniform.HIT_DETECTION);\n    this.getGL().uniform1i(loc, enabled ? 1 : 0);\n\n    // hit detection uses a fixed pixel ratio\n    if (enabled) {\n      this.setUniformFloatValue(DefaultUniform.PIXEL_RATIO, 0.5);\n    }\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyUniforms(frameState) {\n    const gl = this.gl_;\n\n    let value;\n    let textureSlot = 0;\n    this.uniforms_.forEach((uniform) => {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (\n        value instanceof HTMLCanvasElement ||\n        value instanceof HTMLImageElement ||\n        value instanceof ImageData ||\n        value instanceof WebGLTexture\n      ) {\n        // create a texture & put data\n        if (value instanceof WebGLTexture && !uniform.texture) {\n          uniform.prevValue = undefined;\n          uniform.texture = value;\n        } else if (!uniform.texture) {\n          uniform.prevValue = undefined;\n          uniform.texture = gl.createTexture();\n        }\n        this.bindTexture(uniform.texture, textureSlot, uniform.name);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        const imageReady =\n          !(value instanceof HTMLImageElement) ||\n          /** @type {HTMLImageElement} */ (value).complete;\n        if (\n          !(value instanceof WebGLTexture) &&\n          imageReady &&\n          uniform.prevValue !== value\n        ) {\n          uniform.prevValue = value;\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value,\n          );\n        }\n        textureSlot++;\n      } else if (Array.isArray(value) && value.length === 6) {\n        this.setUniformMatrixValue(\n          uniform.name,\n          fromTransform(this.tmpMat4_, value),\n        );\n      } else if (Array.isArray(value) && value.length <= 4) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n            );\n            return;\n          case 3:\n            gl.uniform3f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n              value[2],\n            );\n            return;\n          case 4:\n            gl.uniform4f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n              value[2],\n              value[3],\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(this.getUniformLocation(uniform.name), value);\n      }\n    });\n  }\n\n  /**\n   * Set up a program for use. The program will be set as the current one. Then, the uniforms used\n   * in the program will be set based on the current frame state and the helper configuration.\n   * @param {WebGLProgram} program Program.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   */\n  useProgram(program, frameState) {\n    this.disableAllAttributes_();\n    const gl = this.gl_;\n    gl.useProgram(program);\n    this.currentProgram_ = program;\n    if (frameState) {\n      this.applyFrameState(frameState);\n      this.applyUniforms(frameState);\n    }\n  }\n\n  /**\n   * Will attempt to compile a vertex or fragment shader based on source\n   * On error, the shader will be returned but\n   * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n   * Use `gl.getShaderInfoLog(shader)` to have details\n   * @param {string} source Shader source\n   * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n   * @return {WebGLShader} Shader object\n   */\n  compileShader(source, type) {\n    const gl = this.gl_;\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    return shader;\n  }\n\n  /**\n   * Create a program for a vertex and fragment shader.  Throws if shader compilation fails.\n   * @param {string} fragmentShaderSource Fragment shader source.\n   * @param {string} vertexShaderSource Vertex shader source.\n   * @return {WebGLProgram} Program\n   */\n  getProgram(fragmentShaderSource, vertexShaderSource) {\n    const gl = this.gl_;\n\n    const fragmentShader = this.compileShader(\n      fragmentShaderSource,\n      gl.FRAGMENT_SHADER,\n    );\n\n    const vertexShader = this.compileShader(\n      vertexShaderSource,\n      gl.VERTEX_SHADER,\n    );\n\n    const program = gl.createProgram();\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      const message = `Fragment shader compilation failed: ${gl.getShaderInfoLog(\n        fragmentShader,\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(fragmentShader);\n\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      const message = `Vertex shader compilation failed: ${gl.getShaderInfoLog(\n        vertexShader,\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(vertexShader);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      const message = `GL program linking failed: ${gl.getProgramInfoLog(\n        program,\n      )}`;\n      throw new Error(message);\n    }\n\n    return program;\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Uniform name\n   * @return {WebGLUniformLocation} uniformLocation\n   */\n  getUniformLocation(name) {\n    const programUid = getUid(this.currentProgram_);\n    if (this.uniformLocationsByProgram_[programUid] === undefined) {\n      this.uniformLocationsByProgram_[programUid] = {};\n    }\n    if (this.uniformLocationsByProgram_[programUid][name] === undefined) {\n      this.uniformLocationsByProgram_[programUid][name] =\n        this.gl_.getUniformLocation(this.currentProgram_, name);\n    }\n    return this.uniformLocationsByProgram_[programUid][name];\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Attribute name\n   * @return {number} attribLocation\n   */\n  getAttributeLocation(name) {\n    const programUid = getUid(this.currentProgram_);\n    if (this.attribLocationsByProgram_[programUid] === undefined) {\n      this.attribLocationsByProgram_[programUid] = {};\n    }\n    if (this.attribLocationsByProgram_[programUid][name] === undefined) {\n      this.attribLocationsByProgram_[programUid][name] =\n        this.gl_.getAttribLocation(this.currentProgram_, name);\n    }\n    return this.attribLocationsByProgram_[programUid][name];\n  }\n\n  /**\n   * Sets the given transform to apply the rotation/translation/scaling of the given frame state.\n   * The resulting transform can be used to convert world space coordinates to view coordinates in the [-1, 1] range.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../transform\").Transform} transform Transform to update.\n   * @return {import(\"../transform\").Transform} The updated transform object.\n   */\n  makeProjectionTransform(frameState, transform) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const resolution = frameState.viewState.resolution;\n    const center = frameState.viewState.center;\n    composeTransform(\n      transform,\n      0,\n      0,\n      2 / (resolution * size[0]),\n      2 / (resolution * size[1]),\n      -rotation,\n      -center[0],\n      -center[1],\n    );\n    return transform;\n  }\n\n  /**\n   * Give a value for a standard float uniform\n   * @param {string} uniform Uniform name\n   * @param {number} value Value\n   */\n  setUniformFloatValue(uniform, value) {\n    this.gl_.uniform1f(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec2 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec2(uniform, value) {\n    this.gl_.uniform2fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec4(uniform, value) {\n    this.gl_.uniform4fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a standard matrix4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Matrix value\n   */\n  setUniformMatrixValue(uniform, value) {\n    this.gl_.uniformMatrix4fv(this.getUniformLocation(uniform), false, value);\n  }\n\n  /**\n   * Disable all vertex attributes.\n   * @private\n   */\n  disableAllAttributes_() {\n    for (let i = 0; i < this.maxAttributeCount_; i++) {\n      this.gl_.disableVertexAttribArray(i);\n    }\n  }\n\n  /**\n   * Will set the currently bound buffer to an attribute of the shader program. Used by `#enableAttributes`\n   * internally.\n   * @param {string} attribName Attribute name\n   * @param {number} size Number of components per attributes\n   * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n   * @param {number} stride Stride in bytes (0 means attribs are packed)\n   * @param {number} offset Offset in bytes\n   * @private\n   */\n  enableAttributeArray_(attribName, size, type, stride, offset) {\n    const location = this.getAttributeLocation(attribName);\n    // the attribute has not been found in the shaders or is not used; do not enable it\n    if (location < 0) {\n      return;\n    }\n    this.gl_.enableVertexAttribArray(location);\n    this.gl_.vertexAttribPointer(location, size, type, false, stride, offset);\n  }\n\n  /**\n   * Will enable the following attributes to be read from the currently bound buffer,\n   * i.e. tell the GPU where to read the different attributes in the buffer. An error in the\n   * size/type/order of attributes will most likely break the rendering and throw a WebGL exception.\n   * @param {Array<AttributeDescription>} attributes Ordered list of attributes to read from the buffer\n   */\n  enableAttributes(attributes) {\n    const stride = computeAttributesStride(attributes);\n    let offset = 0;\n    for (let i = 0; i < attributes.length; i++) {\n      const attr = attributes[i];\n      this.enableAttributeArray_(\n        attr.name,\n        attr.size,\n        attr.type || FLOAT,\n        stride,\n        offset,\n      );\n      offset += attr.size * getByteSizeFromType(attr.type);\n    }\n  }\n\n  /**\n   * WebGL context was lost\n   * @param {WebGLContextEvent} event The context loss event.\n   * @private\n   */\n  handleWebGLContextLost(event) {\n    clear(this.bufferCache_);\n    this.currentProgram_ = null;\n\n    event.preventDefault();\n  }\n\n  /**\n   * WebGL context was restored\n   * @private\n   */\n  handleWebGLContextRestored() {\n    this.needsToBeRecreated_ = true;\n  }\n\n  /**\n   * Returns whether this helper needs to be recreated, as the context was lost and then restored.\n   * @return {boolean} Whether this helper needs to be recreated.\n   */\n  needsToBeRecreated() {\n    return this.needsToBeRecreated_;\n  }\n\n  /**\n   * Will create or reuse a given webgl texture and apply the given size. If no image data\n   * specified, the texture will be empty, otherwise image data will be used and the `size`\n   * parameter will be ignored.  If a Uint8Array is provided for data, a size must also be provided.\n   * Note: wrap parameters are set to clamp to edge, min filter is set to linear.\n   * @param {Array<number>} size Expected size of the texture\n   * @param {ImageData|HTMLImageElement|HTMLCanvasElement|Uint8Array|null} data Image data/object to bind to the texture\n   * @param {WebGLTexture} [texture] Existing texture to reuse\n   * @param {boolean} [nearest] Use gl.NEAREST for min/mag filter.\n   * @return {WebGLTexture} The generated texture\n   */\n  createTexture(size, data, texture, nearest) {\n    const gl = this.gl_;\n    texture = texture || gl.createTexture();\n    const filter = nearest ? gl.NEAREST : gl.LINEAR;\n\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    const level = 0;\n    const internalFormat = gl.RGBA;\n    const border = 0;\n    const format = gl.RGBA;\n    const type = gl.UNSIGNED_BYTE;\n\n    if (data instanceof Uint8Array) {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        size[0],\n        size[1],\n        border,\n        format,\n        type,\n        data,\n      );\n    } else if (data) {\n      gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, format, type, data);\n    } else {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        size[0],\n        size[1],\n        border,\n        format,\n        type,\n        null,\n      );\n    }\n    return texture;\n  }\n}\n\n/**\n * Compute a stride in bytes based on a list of attributes\n * @param {Array<AttributeDescription>} attributes Ordered list of attributes\n * @return {number} Stride, ie amount of values for each vertex in the vertex buffer\n */\nexport function computeAttributesStride(attributes) {\n  let stride = 0;\n  for (let i = 0; i < attributes.length; i++) {\n    const attr = attributes[i];\n    stride += attr.size * getByteSizeFromType(attr.type);\n  }\n  return stride;\n}\n\n/**\n * Computes the size in byte of an attribute type.\n * @param {AttributeType} type Attribute type\n * @return {number} The size in bytes\n */\nfunction getByteSizeFromType(type) {\n  switch (type) {\n    case AttributeType.UNSIGNED_BYTE:\n      return Uint8Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_SHORT:\n      return Uint16Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_INT:\n      return Uint32Array.BYTES_PER_ELEMENT;\n    case AttributeType.FLOAT:\n    default:\n      return Float32Array.BYTES_PER_ELEMENT;\n  }\n}\n\nexport default WebGLHelper;\n","/**\n * @module ol/ImageTile\n */\nimport {listenImage} from './Image.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenImage_();\n    this.image_ = null;\n    super.disposeInternal();\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/Tile\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {releaseCanvas} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\nimport {ERROR_THRESHOLD} from './common.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {import(\"../ImageTile.js\").default} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceProj.getExtent()\n      : undefined;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (tile && tile.getState() == TileState.LOADED) {\n        const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n        extent[0] += source.offset;\n        extent[2] += source.offset;\n        const clipExtent = this.clipExtent_?.slice();\n        if (clipExtent) {\n          clipExtent[0] += source.offset;\n          clipExtent[2] += source.offset;\n        }\n        sources.push({\n          extent: extent,\n          clipExtent: clipExtent,\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(({tile}) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(tile, EventType.CHANGE, (e) => {\n            const state = tile.getState();\n            if (\n              state == TileState.LOADED ||\n              state == TileState.ERROR ||\n              state == TileState.EMPTY\n            ) {\n              unlistenByKey(sourceListenKey);\n              leftToLoad--;\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          });\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function ({tile}, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/webgl/BaseTileRepresentation\n */\n\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport EventType from '../events/EventType.js';\nimport EventTarget from '../events/Target.js';\nimport {abstract} from '../util.js';\n\n/**\n * @typedef {import(\"../Tile.js\").default} BaseTileType\n */\n\n/**\n * @template {BaseTileType} TileType\n * @typedef {Object} TileRepresentationOptions\n * @property {TileType} tile The tile.\n * @property {import(\"../tilegrid/TileGrid.js\").default} grid Tile grid.\n * @property {import(\"../webgl/Helper.js\").default} helper WebGL helper.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n */\n\n/**\n * @classdesc\n * Base class for representing a tile in a webgl context\n * @template {import(\"../Tile.js\").default} TileType\n * @abstract\n */\nclass BaseTileRepresentation extends EventTarget {\n  /**\n   * @param {TileRepresentationOptions<TileType>} options The tile representation options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @type {TileType}\n     */\n    this.tile;\n\n    /**\n     * @private\n     */\n    this.handleTileChange_ = this.handleTileChange_.bind(this);\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.gutter = options.gutter || 0;\n\n    /**\n     * @type {import(\"../webgl/Helper.js\").default}\n     * @protected\n     */\n    this.helper = options.helper;\n\n    this.loaded = false;\n    this.ready = false;\n  }\n\n  /**\n   * @param {TileType} tile Tile.\n   */\n  setTile(tile) {\n    if (tile !== this.tile) {\n      if (this.tile) {\n        this.tile.removeEventListener(EventType.CHANGE, this.handleTileChange_);\n      }\n      this.tile = tile;\n      this.loaded = tile.getState() === TileState.LOADED;\n      if (this.loaded) {\n        this.uploadTile();\n      } else {\n        if (tile instanceof ImageTile) {\n          const image = tile.getImage();\n          if (image instanceof Image && !image.crossOrigin) {\n            image.crossOrigin = 'anonymous';\n          }\n        }\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange_);\n      }\n    }\n  }\n\n  /**\n   * @abstract\n   * @protected\n   */\n  uploadTile() {\n    abstract();\n  }\n\n  setReady() {\n    this.ready = true;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  handleTileChange_() {\n    if (this.tile.getState() === TileState.LOADED) {\n      this.loaded = true;\n      this.uploadTile();\n    }\n  }\n\n  /**\n   * @param {import(\"./Helper.js\").default} helper The WebGL helper.\n   */\n  setHelper(helper) {\n    this.helper = helper;\n    if (this.helper && this.loaded) {\n      this.uploadTile();\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.setHelper(null);\n    this.tile.removeEventListener(EventType.CHANGE, this.handleTileChange_);\n  }\n}\n\nexport default BaseTileRepresentation;\n","/**\n * @module ol/webgl/TileTexture\n */\n\nimport DataTile, {asArrayLike, asImageLike} from '../DataTile.js';\nimport ImageTile from '../ImageTile.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport {toSize} from '../size.js';\nimport {ARRAY_BUFFER, STATIC_DRAW} from '../webgl.js';\nimport BaseTileRepresentation from './BaseTileRepresentation.js';\nimport WebGLArrayBuffer from './Buffer.js';\n\n/**\n * @param {WebGLRenderingContext} gl The WebGL context.\n * @param {WebGLTexture} texture The texture.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction bindAndConfigure(gl, texture, interpolate) {\n  const resampleFilter = interpolate ? gl.LINEAR : gl.NEAREST;\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, resampleFilter);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, resampleFilter);\n}\n\n/**\n * @param {WebGLRenderingContext} gl The WebGL context.\n * @param {WebGLTexture} texture The texture.\n * @param {import(\"../DataTile.js\").ImageLike} image The image.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction uploadImageTexture(gl, texture, image, interpolate) {\n  bindAndConfigure(gl, texture, interpolate);\n\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n}\n\n/**\n * @param {import(\"./Helper.js\").default} helper The WebGL helper.\n * @param {WebGLTexture} texture The texture.\n * @param {import(\"../DataTile.js\").ArrayLike} data The pixel data.\n * @param {import(\"../size.js\").Size} size The pixel size.\n * @param {number} bandCount The band count.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction uploadDataTexture(\n  helper,\n  texture,\n  data,\n  size,\n  bandCount,\n  interpolate,\n) {\n  const gl = helper.getGL();\n  let textureType;\n  let canInterpolate;\n  if (data instanceof Float32Array) {\n    textureType = gl.FLOAT;\n    helper.getExtension('OES_texture_float');\n    const extension = helper.getExtension('OES_texture_float_linear');\n    canInterpolate = extension !== null;\n  } else {\n    textureType = gl.UNSIGNED_BYTE;\n    canInterpolate = true;\n  }\n  bindAndConfigure(gl, texture, interpolate && canInterpolate);\n\n  const bytesPerRow = data.byteLength / size[1];\n  let unpackAlignment = 1;\n  if (bytesPerRow % 8 === 0) {\n    unpackAlignment = 8;\n  } else if (bytesPerRow % 4 === 0) {\n    unpackAlignment = 4;\n  } else if (bytesPerRow % 2 === 0) {\n    unpackAlignment = 2;\n  }\n\n  let format;\n  switch (bandCount) {\n    case 1: {\n      format = gl.LUMINANCE;\n      break;\n    }\n    case 2: {\n      format = gl.LUMINANCE_ALPHA;\n      break;\n    }\n    case 3: {\n      format = gl.RGB;\n      break;\n    }\n    case 4: {\n      format = gl.RGBA;\n      break;\n    }\n    default: {\n      throw new Error(`Unsupported number of bands: ${bandCount}`);\n    }\n  }\n\n  const oldUnpackAlignment = gl.getParameter(gl.UNPACK_ALIGNMENT);\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, unpackAlignment);\n  gl.texImage2D(\n    gl.TEXTURE_2D,\n    0,\n    format,\n    size[0],\n    size[1],\n    0,\n    format,\n    textureType,\n    data,\n  );\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, oldUnpackAlignment);\n}\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @typedef {import(\"../DataTile.js\").default|ImageTile|ReprojTile} TileType\n */\n\n/**\n * @extends {BaseTileRepresentation<TileType>}\n */\nclass TileTexture extends BaseTileRepresentation {\n  /**\n   * @param {import(\"./BaseTileRepresentation.js\").TileRepresentationOptions<TileType>} options The tile texture options.\n   */\n  constructor(options) {\n    super(options);\n\n    /**\n     * @type {Array<WebGLTexture>}\n     */\n    this.textures = [];\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.renderSize_ = toSize(\n      options.grid.getTileSize(options.tile.tileCoord[0]),\n    );\n\n    /**\n     * @type {number}\n     */\n    this.bandCount = NaN;\n\n    const coords = new WebGLArrayBuffer(ARRAY_BUFFER, STATIC_DRAW);\n    coords.fromArray([\n      0, // P0\n      1,\n      1, // P1\n      1,\n      1, // P2\n      0,\n      0, // P3\n      0,\n    ]);\n    this.helper.flushBufferData(coords);\n\n    /**\n     * @type {WebGLArrayBuffer}\n     */\n    this.coords = coords;\n\n    this.setTile(options.tile);\n  }\n\n  /**\n   * @override\n   * @param {import(\"./Helper.js\").default} helper The WebGL helper.\n   */\n  setHelper(helper) {\n    const gl = this.helper?.getGL();\n    if (gl) {\n      this.helper.deleteBuffer(this.coords);\n      for (let i = 0; i < this.textures.length; ++i) {\n        gl.deleteTexture(this.textures[i]);\n      }\n    }\n\n    super.setHelper(helper);\n\n    if (helper) {\n      helper.flushBufferData(this.coords);\n    }\n  }\n\n  /**\n   * @override\n   */\n  uploadTile() {\n    const helper = this.helper;\n    const gl = helper.getGL();\n    const tile = this.tile;\n\n    this.textures.length = 0;\n\n    /**\n     * @type {import(\"../DataTile.js\").Data}\n     */\n    let data;\n\n    if (tile instanceof ImageTile || tile instanceof ReprojTile) {\n      data = tile.getImage();\n    } else {\n      data = tile.getData();\n    }\n\n    const image = asImageLike(data);\n    if (image) {\n      const texture = gl.createTexture();\n      this.textures.push(texture);\n      this.bandCount = 4;\n      uploadImageTexture(gl, texture, image, tile.interpolate);\n      this.setReady();\n      return;\n    }\n\n    data = asArrayLike(data);\n\n    const sourceTileSize = /** @type {DataTile} */ (tile).getSize();\n    const pixelSize = [\n      sourceTileSize[0] + 2 * this.gutter,\n      sourceTileSize[1] + 2 * this.gutter,\n    ];\n    const isFloat = data instanceof Float32Array;\n    const pixelCount = pixelSize[0] * pixelSize[1];\n    const DataType = isFloat ? Float32Array : Uint8Array;\n    const bytesPerElement = DataType.BYTES_PER_ELEMENT;\n    const bytesPerRow = data.byteLength / pixelSize[1];\n\n    this.bandCount = Math.floor(bytesPerRow / bytesPerElement / pixelSize[0]);\n    const textureCount = Math.ceil(this.bandCount / 4);\n\n    if (textureCount === 1) {\n      const texture = gl.createTexture();\n      this.textures.push(texture);\n      uploadDataTexture(\n        helper,\n        texture,\n        data,\n        pixelSize,\n        this.bandCount,\n        tile.interpolate,\n      );\n      this.setReady();\n      return;\n    }\n\n    const textureDataArrays = new Array(textureCount);\n    for (let textureIndex = 0; textureIndex < textureCount; ++textureIndex) {\n      const texture = gl.createTexture();\n      this.textures.push(texture);\n\n      const bandCount =\n        textureIndex < textureCount - 1 ? 4 : ((this.bandCount - 1) % 4) + 1;\n      textureDataArrays[textureIndex] = new DataType(pixelCount * bandCount);\n    }\n\n    let dataIndex = 0;\n    let rowOffset = 0;\n    const colCount = pixelSize[0] * this.bandCount;\n    for (let rowIndex = 0; rowIndex < pixelSize[1]; ++rowIndex) {\n      for (let colIndex = 0; colIndex < colCount; ++colIndex) {\n        const dataValue = data[rowOffset + colIndex];\n\n        const pixelIndex = Math.floor(dataIndex / this.bandCount);\n        const bandIndex = colIndex % this.bandCount;\n        const textureIndex = Math.floor(bandIndex / 4);\n        const textureData = textureDataArrays[textureIndex];\n        const bandCount = textureData.length / pixelCount;\n        const textureBandIndex = bandIndex % 4;\n        textureData[pixelIndex * bandCount + textureBandIndex] = dataValue;\n\n        ++dataIndex;\n      }\n      rowOffset += bytesPerRow / bytesPerElement;\n    }\n\n    for (let textureIndex = 0; textureIndex < textureCount; ++textureIndex) {\n      const texture = this.textures[textureIndex];\n      const textureData = textureDataArrays[textureIndex];\n      const bandCount = textureData.length / pixelCount;\n      uploadDataTexture(\n        helper,\n        texture,\n        textureData,\n        pixelSize,\n        bandCount,\n        tile.interpolate,\n      );\n    }\n\n    this.setReady();\n  }\n\n  /**\n   * @param {import(\"../DataTile.js\").ImageLike} image The image.\n   * @param {number} renderCol The column index (in rendered tile space).\n   * @param {number} renderRow The row index (in rendered tile space).\n   * @return {Uint8ClampedArray|null} The data.\n   * @private\n   */\n  getImagePixelData_(image, renderCol, renderRow) {\n    const gutter = this.gutter;\n    const renderWidth = this.renderSize_[0];\n    const renderHeight = this.renderSize_[1];\n\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    const sourceWidth = image.width;\n    const sourceHeight = image.height;\n\n    const sourceWidthWithoutGutter = sourceWidth - 2 * gutter;\n    const sourceHeightWithoutGutter = sourceHeight - 2 * gutter;\n\n    const sourceCol =\n      gutter + Math.floor(sourceWidthWithoutGutter * (renderCol / renderWidth));\n\n    const sourceRow =\n      gutter +\n      Math.floor(sourceHeightWithoutGutter * (renderRow / renderHeight));\n\n    let data;\n    try {\n      pixelContext.drawImage(image, sourceCol, sourceRow, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import(\"../DataTile.js\").ArrayLike} data The data.\n   * @param {import(\"../size.js\").Size} sourceSize The size.\n   * @param {number} renderCol The column index (in rendered tile space).\n   * @param {number} renderRow The row index (in rendered tile space).\n   * @return {import(\"../DataTile.js\").ArrayLike|null} The data.\n   * @private\n   */\n  getArrayPixelData_(data, sourceSize, renderCol, renderRow) {\n    const gutter = this.gutter;\n    const renderWidth = this.renderSize_[0];\n    const renderHeight = this.renderSize_[1];\n\n    const sourceWidthWithoutGutter = sourceSize[0];\n    const sourceHeightWithoutGutter = sourceSize[1];\n    const sourceWidth = sourceWidthWithoutGutter + 2 * gutter;\n    const sourceHeight = sourceHeightWithoutGutter + 2 * gutter;\n\n    const sourceCol =\n      gutter + Math.floor(sourceWidthWithoutGutter * (renderCol / renderWidth));\n\n    const sourceRow =\n      gutter +\n      Math.floor(sourceHeightWithoutGutter * (renderRow / renderHeight));\n\n    if (data instanceof DataView) {\n      const bytesPerPixel = data.byteLength / (sourceWidth * sourceHeight);\n      const offset = bytesPerPixel * (sourceRow * sourceWidth + sourceCol);\n      const buffer = data.buffer.slice(offset, offset + bytesPerPixel);\n      return new DataView(buffer);\n    }\n\n    const offset = this.bandCount * (sourceRow * sourceWidth + sourceCol);\n    return data.slice(offset, offset + this.bandCount);\n  }\n\n  /**\n   * Get data for a pixel.  If the tile is not loaded, null is returned.\n   * @param {number} renderCol The column index (in rendered tile space).\n   * @param {number} renderRow The row index (in rendered tile space).\n   * @return {import(\"../DataTile.js\").ArrayLike|null} The data.\n   */\n  getPixelData(renderCol, renderRow) {\n    if (!this.loaded) {\n      return null;\n    }\n\n    if (this.tile instanceof DataTile) {\n      const data = this.tile.getData();\n      const arrayData = asArrayLike(data);\n      if (arrayData) {\n        const sourceSize = this.tile.getSize();\n        return this.getArrayPixelData_(\n          arrayData,\n          sourceSize,\n          renderCol,\n          renderRow,\n        );\n      }\n      return this.getImagePixelData_(asImageLike(data), renderCol, renderRow);\n    }\n\n    return this.getImagePixelData_(this.tile.getImage(), renderCol, renderRow);\n  }\n}\n\nexport default TileTexture;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport Disposable from '../Disposable.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  deleteOldest() {\n    const entry = this.pop();\n    if (entry instanceof Disposable) {\n      entry.dispose();\n    }\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache. When the cache entry is a {@link module:ol/Disposable~Disposable},\n   * the entry will be disposed.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    while (this.oldest_) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/renderer/Layer\n */\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport EventType from '../events/EventType.js';\nimport {abstract} from '../util.js';\n\nconst maxStaleKeys = 5;\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.staleKeys_ = new Array();\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.maxStaleKeys = maxStaleKeys;\n  }\n\n  /**\n   * @return {Array<string>} Get the list of stale keys.\n   */\n  getStaleKeys() {\n    return this.staleKeys_;\n  }\n\n  /**\n   * @param {string} key The new stale key.\n   */\n  prependStaleKey(key) {\n    this.staleKeys_.unshift(key);\n    if (this.staleKeys_.length > this.maxStaleKeys) {\n      this.staleKeys_.length = this.maxStaleKeys;\n    }\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/webgl/Layer\n */\nimport LayerProperty from '../../layer/Property.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport WebGLHelper from '../../webgl/Helper.js';\nimport LayerRenderer from '../Layer.js';\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * Base WebGL renderer class.\n * Holds all logic related to data manipulation & some common rendering logic\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass WebGLLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(layer, options) {\n    super(layer);\n\n    options = options || {};\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform is only\n     * set before dispatching rendering events.\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform_ = createTransform();\n\n    /**\n     * @private\n     */\n    this.postProcesses_ = options.postProcesses;\n\n    /**\n     * @private\n     */\n    this.uniforms_ = options.uniforms;\n\n    /**\n     * @type {WebGLHelper}\n     * @protected\n     */\n    this.helper;\n\n    this.onMapChanged_ = () => {\n      this.clearCache();\n      this.removeHelper();\n    };\n\n    layer.addChangeListener(LayerProperty.MAP, this.onMapChanged_);\n\n    this.dispatchPreComposeEvent = this.dispatchPreComposeEvent.bind(this);\n    this.dispatchPostComposeEvent = this.dispatchPostComposeEvent.bind(this);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPreComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.PRECOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.PRECOMPOSE,\n        undefined,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPostComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.POSTCOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.POSTCOMPOSE,\n        undefined,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * Reset options (only handles uniforms).\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    this.uniforms_ = options.uniforms;\n    if (this.helper) {\n      this.helper.setUniforms(this.uniforms_);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  removeHelper() {\n    if (this.helper) {\n      this.helper.dispose();\n      delete this.helper;\n    }\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    if (this.getLayer().getRenderSource()) {\n      let incrementGroup = true;\n      let groupNumber = -1;\n      let className;\n      for (let i = 0, ii = frameState.layerStatesArray.length; i < ii; i++) {\n        const layer = frameState.layerStatesArray[i].layer;\n        const renderer = layer.getRenderer();\n        if (!(renderer instanceof WebGLLayerRenderer)) {\n          incrementGroup = true;\n          continue;\n        }\n        const layerClassName = layer.getClassName();\n        if (incrementGroup || layerClassName !== className) {\n          groupNumber += 1;\n          incrementGroup = false;\n        }\n        className = layerClassName;\n        if (renderer === this) {\n          break;\n        }\n      }\n\n      const canvasCacheKey =\n        'map/' + frameState.mapId + '/group/' + groupNumber;\n\n      if (\n        !this.helper ||\n        !this.helper.canvasCacheKeyMatches(canvasCacheKey) ||\n        this.helper.needsToBeRecreated()\n      ) {\n        this.removeHelper();\n\n        this.helper = new WebGLHelper({\n          postProcesses: this.postProcesses_,\n          uniforms: this.uniforms_,\n          canvasCacheKey: canvasCacheKey,\n        });\n\n        if (className) {\n          this.helper.getCanvas().className = className;\n        }\n\n        this.afterHelperCreated();\n      }\n    }\n\n    return this.prepareFrameInternal(frameState);\n  }\n\n  /**\n   * @protected\n   */\n  afterHelperCreated() {}\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @protected\n   */\n  prepareFrameInternal(frameState) {\n    return true;\n  }\n\n  /**\n   * @protected\n   */\n  clearCache() {}\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.clearCache();\n    this.removeHelper();\n    this.getLayer()?.removeChangeListener(\n      LayerProperty.MAP,\n      this.onMapChanged_,\n    );\n    super.disposeInternal();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      composeTransform(\n        this.inversePixelTransform_,\n        0,\n        0,\n        frameState.pixelRatio,\n        -frameState.pixelRatio,\n        0,\n        0,\n        -frameState.size[1],\n      );\n\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform_,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n}\n\nexport default WebGLLayerRenderer;\n","/**\n * @module ol/renderer/webgl/TileLayerBase\n */\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {descending} from '../../array.js';\nimport {getIntersection, getRotatedViewport, isEmpty} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {toSize} from '../../size.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport {\n  createOrUpdate as createTileCoord,\n  getKey as getTileCoordKey,\n} from '../../tilecoord.js';\nimport {\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {abstract, getUid} from '../../util.js';\nimport {create as createMat4} from '../../vec/mat4.js';\nimport WebGLLayerRenderer from './Layer.js';\n\nexport const Uniforms = {\n  TILE_TRANSFORM: 'u_tileTransform',\n  TRANSITION_ALPHA: 'u_transitionAlpha',\n  DEPTH: 'u_depth',\n  RENDER_EXTENT: 'u_renderExtent', // intersection of layer, source, and view extent\n  PATTERN_ORIGIN: 'u_patternOrigin',\n  RESOLUTION: 'u_resolution',\n  ZOOM: 'u_zoom',\n  GLOBAL_ALPHA: 'u_globalAlpha',\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  SCREEN_TO_WORLD_MATRIX: 'u_screenToWorldMatrix',\n};\n\n/**\n * Transform a zoom level into a depth value; zoom level zero has a depth value of 0.5, and increasing values\n * have a depth trending towards 0\n * @param {number} z A zoom level.\n * @return {number} A depth value.\n */\nfunction depthForZ(z) {\n  return 1 / (z + 2);\n}\n\n/**\n * @typedef {import(\"../../webgl/BaseTileRepresentation.js\").default<import(\"../../Tile.js\").default>} AbstractTileRepresentation\n */\n/**\n * @typedef {Object} TileRepresentationLookup\n * @property {Set<string>} tileIds The set of tile ids in the lookup.\n * @property {Object<number, Set<AbstractTileRepresentation>>} representationsByZ Tile representations by zoom level.\n */\n\n/**\n * @return {TileRepresentationLookup} A new tile representation lookup.\n */\nexport function newTileRepresentationLookup() {\n  return {tileIds: new Set(), representationsByZ: {}};\n}\n\n/**\n * Check if a tile is already in the tile representation lookup.\n * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of tile representations by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @return {boolean} The tile is already in the lookup.\n */\nfunction lookupHasTile(tileRepresentationLookup, tile) {\n  return tileRepresentationLookup.tileIds.has(getUid(tile));\n}\n\n/**\n * Add a tile representation to the lookup.\n * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of tile representations by zoom level.\n * @param {AbstractTileRepresentation} tileRepresentation A tile representation.\n * @param {number} z The zoom level.\n */\nfunction addTileRepresentationToLookup(\n  tileRepresentationLookup,\n  tileRepresentation,\n  z,\n) {\n  const representationsByZ = tileRepresentationLookup.representationsByZ;\n  if (!(z in representationsByZ)) {\n    representationsByZ[z] = new Set();\n  }\n  representationsByZ[z].add(tileRepresentation);\n  tileRepresentationLookup.tileIds.add(getUid(tileRepresentation.tile));\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection),\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\n/**\n * @param {import(\"../../source/Tile.js\").default} source The source.\n * @param {import('../../tilecoord.js').TileCoord} tileCoord The tile coordinate.\n * @return {string} The cache key.\n */\nexport function getCacheKey(source, tileCoord) {\n  return `${getUid(source)},${source.getKey()},${source.getRevision()},${getTileCoordKey(tileCoord)}`;\n}\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, import(\"../../webgl/Helper\").UniformValue>} [uniforms] Additional uniforms\n * made available to shaders.\n * @property {number} [cacheSize=512] The tile representation cache size.\n * @property {Array<import('./Layer.js').PostProcessesOptions>} [postProcesses] Post-processes definitions.\n */\n\n/**\n * @typedef {import(\"../../layer/BaseTile.js\").default} BaseLayerType\n */\n\n/**\n * @classdesc\n * Base WebGL renderer for tile layers.\n * @template {BaseLayerType} LayerType\n * @template {import(\"../../Tile.js\").default} TileType\n * @template {import(\"../../webgl/BaseTileRepresentation.js\").default<TileType>} TileRepresentation\n * @extends {WebGLLayerRenderer<LayerType>}\n */\nclass WebGLBaseTileLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} options Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer, {\n      uniforms: options.uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * This transform converts representation coordinates to screen coordinates.\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.tileTransform_ = createTransform();\n\n    /**\n     * @type {Array<number>}\n     * @protected\n     */\n    this.tempMat4 = createMat4();\n\n    /**\n     * @type {import(\"../../TileRange.js\").default}\n     * @private\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    /**\n     * @type {import(\"../../size.js\").Size}\n     * @private\n     */\n    this.tempSize_ = [0, 0];\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<TileRepresentation>}\n     * @protected\n     */\n    this.tileRepresentationCache = new LRUCache(cacheSize);\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection_ = undefined;\n  }\n\n  /**\n   * @param {Options} options Options.\n   * @override\n   */\n  reset(options) {\n    super.reset({\n      uniforms: options.uniforms,\n    });\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrameInternal(frameState) {\n    if (!this.renderedProjection_) {\n      this.renderedProjection_ = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.renderedProjection_) {\n      this.clearCache();\n      this.renderedProjection_ = frameState.viewState.projection;\n    }\n\n    const layer = this.getLayer();\n    const source = layer.getRenderSource();\n    if (!source) {\n      return false;\n    }\n\n    if (isEmpty(getRenderExtent(frameState, frameState.extent))) {\n      return false;\n    }\n    return source.getState() === 'ready';\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../../webgl/BaseTileRepresentation.js\").TileRepresentationOptions<TileType>} options tile representation options\n   * @return {TileRepresentation} A new tile representation\n   * @protected\n   */\n  createTileRepresentation(options) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileRepresentationLookup} tileRepresentationLookup The zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(\n    frameState,\n    extent,\n    initialZ,\n    tileRepresentationLookup,\n    preload,\n  ) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const gutter = tileSource.getGutterForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileRepresentationCache = this.tileRepresentationCache;\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0),\n        ),\n        tileSource.zDirection,\n      ),\n    );\n    const rotation = viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          viewState.resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_,\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n          const cacheKey = getCacheKey(tileSource, tileCoord);\n\n          /** @type {TileRepresentation} */\n          let tileRepresentation;\n\n          /** @type {TileType} */\n          let tile;\n\n          if (tileRepresentationCache.containsKey(cacheKey)) {\n            tileRepresentation = tileRepresentationCache.get(cacheKey);\n            tile = tileRepresentation.tile;\n          }\n          if (\n            !tileRepresentation ||\n            tileRepresentation.tile.key !== tileSource.getKey()\n          ) {\n            tile = tileSource.getTile(\n              z,\n              x,\n              y,\n              frameState.pixelRatio,\n              viewState.projection,\n            );\n            if (!tile) {\n              continue;\n            }\n          }\n\n          if (lookupHasTile(tileRepresentationLookup, tile)) {\n            continue;\n          }\n\n          if (!tileRepresentation) {\n            tileRepresentation = this.createTileRepresentation({\n              tile: tile,\n              grid: tileGrid,\n              helper: this.helper,\n              gutter: gutter,\n            });\n            tileRepresentationCache.set(cacheKey, tileRepresentation);\n          } else {\n            tileRepresentation.setTile(tile);\n          }\n\n          addTileRepresentationToLookup(\n            tileRepresentationLookup,\n            tileRepresentation,\n            z,\n          );\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} tilesWithAlpha True if at least one of the rendered tiles has alpha\n   * @protected\n   */\n  beforeTilesRender(frameState, tilesWithAlpha) {\n    this.helper.prepareDraw(this.frameState, !tilesWithAlpha, true);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} If returns false, tile mask rendering will be skipped\n   * @protected\n   */\n  beforeTilesMaskRender(frameState) {\n    return false;\n  }\n\n  /**\n   * @param {TileRepresentation} tileRepresentation Tile representation\n   * @param {import(\"../../transform.js\").Transform} tileTransform Tile transform\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state\n   * @param {import(\"../../extent.js\").Extent} renderExtent Render extent\n   * @param {number} tileResolution Tile resolution\n   * @param {import(\"../../size.js\").Size} tileSize Tile size\n   * @param {import(\"../../coordinate.js\").Coordinate} tileOrigin Tile origin\n   * @param {import(\"../../extent.js\").Extent} tileExtent tile Extent\n   * @param {number} depth Depth\n   * @param {number} gutter Gutter\n   * @param {number} alpha Alpha\n   * @protected\n   */\n  renderTile(\n    tileRepresentation,\n    tileTransform,\n    frameState,\n    renderExtent,\n    tileResolution,\n    tileSize,\n    tileOrigin,\n    tileExtent,\n    depth,\n    gutter,\n    alpha,\n  ) {}\n\n  /**\n   * @param {TileRepresentation} tileRepresentation Tile representation\n   * @param {number} tileZ Tile Z\n   * @param {import(\"../../extent.js\").Extent} extent Render extent\n   * @param {number} depth Depth\n   * @protected\n   */\n  renderTileMask(tileRepresentation, tileZ, extent, depth) {}\n\n  drawTile_(\n    frameState,\n    tileRepresentation,\n    tileZ,\n    gutter,\n    extent,\n    alphaLookup,\n    tileGrid,\n  ) {\n    if (!tileRepresentation.ready) {\n      return;\n    }\n    const tile = tileRepresentation.tile;\n    const tileCoord = tile.tileCoord;\n    const tileCoordKey = getTileCoordKey(tileCoord);\n    const alpha = tileCoordKey in alphaLookup ? alphaLookup[tileCoordKey] : 1;\n\n    const tileResolution = tileGrid.getResolution(tileZ);\n    const tileSize = toSize(tileGrid.getTileSize(tileZ), this.tempSize_);\n    const tileOrigin = tileGrid.getOrigin(tileZ);\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord);\n    // tiles with alpha are rendered last to allow blending\n    const depth = alpha < 1 ? -1 : depthForZ(tileZ);\n    if (alpha < 1) {\n      frameState.animate = true;\n    }\n\n    const viewState = frameState.viewState;\n    const centerX = viewState.center[0];\n    const centerY = viewState.center[1];\n\n    const tileWidthWithGutter = tileSize[0] + 2 * gutter;\n    const tileHeightWithGutter = tileSize[1] + 2 * gutter;\n\n    const aspectRatio = tileWidthWithGutter / tileHeightWithGutter;\n\n    const centerI = (centerX - tileOrigin[0]) / (tileSize[0] * tileResolution);\n    const centerJ = (tileOrigin[1] - centerY) / (tileSize[1] * tileResolution);\n\n    const tileScale = viewState.resolution / tileResolution;\n\n    const tileCenterI = tileCoord[1];\n    const tileCenterJ = tileCoord[2];\n\n    resetTransform(this.tileTransform_);\n    scaleTransform(\n      this.tileTransform_,\n      2 / ((frameState.size[0] * tileScale) / tileWidthWithGutter),\n      -2 / ((frameState.size[1] * tileScale) / tileWidthWithGutter),\n    );\n    rotateTransform(this.tileTransform_, viewState.rotation);\n    scaleTransform(this.tileTransform_, 1, 1 / aspectRatio);\n    translateTransform(\n      this.tileTransform_,\n      (tileSize[0] * (tileCenterI - centerI) - gutter) / tileWidthWithGutter,\n      (tileSize[1] * (tileCenterJ - centerJ) - gutter) / tileHeightWithGutter,\n    );\n\n    this.renderTile(\n      /** @type {TileRepresentation} */ (tileRepresentation),\n      this.tileTransform_,\n      frameState,\n      extent,\n      tileResolution,\n      tileSize,\n      tileOrigin,\n      tileExtent,\n      depth,\n      gutter,\n      alpha,\n    );\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState) {\n    this.frameState = frameState;\n    this.renderComplete = true;\n    const gl = this.helper.getGL();\n    this.preRender(gl, frameState);\n\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const gutter = tileSource.getGutterForProjection(viewState.projection);\n    const extent = getRenderExtent(frameState, frameState.extent);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection,\n    );\n\n    /**\n     * @type {TileRepresentationLookup}\n     */\n    const tileRepresentationLookup = newTileRepresentationLookup();\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection,\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(\n        frameState,\n        nextExtent,\n        targetZ,\n        tileRepresentationLookup,\n        preload,\n      );\n    }\n\n    this.enqueueTiles(frameState, extent, z, tileRepresentationLookup, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          extent,\n          z - 1,\n          tileRepresentationLookup,\n          preload - 1,\n        );\n      }, 0);\n    }\n\n    /**\n     * A lookup of alpha values for tiles at the target rendering resolution\n     * for tiles that are in transition.  If a tile coord key is absent from\n     * this lookup, the tile should be rendered at alpha 1.\n     * @type {Object<string, number>}\n     */\n    const alphaLookup = {};\n\n    let blend = false;\n    const representationsByZ = tileRepresentationLookup.representationsByZ;\n\n    // look for cached tiles to use if a target tile is not ready\n    if (z in representationsByZ) {\n      const uid = getUid(this);\n      const time = frameState.time;\n      for (const tileRepresentation of representationsByZ[z]) {\n        const tile = tileRepresentation.tile;\n        if (tile.getState() === TileState.EMPTY) {\n          continue;\n        }\n        const tileCoord = tile.tileCoord;\n\n        if (tileRepresentation.ready) {\n          const alpha = tile.getAlpha(uid, time);\n          if (alpha === 1) {\n            // no need to look for alt tiles\n            tile.endTransition(uid);\n            continue;\n          }\n          blend = true;\n          const tileCoordKey = getTileCoordKey(tileCoord);\n          alphaLookup[tileCoordKey] = alpha;\n        }\n        this.renderComplete = false;\n\n        // first look for child tiles (at z + 1)\n        const coveredByChildren = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          z + 1,\n          tileRepresentationLookup,\n        );\n\n        if (coveredByChildren) {\n          continue;\n        }\n\n        // next look for parent tiles\n        const minZoom = tileGrid.getMinZoom();\n        for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n          const coveredByParent = this.findAltTiles_(\n            tileGrid,\n            tileCoord,\n            parentZ,\n            tileRepresentationLookup,\n          );\n\n          if (coveredByParent) {\n            break;\n          }\n        }\n      }\n    }\n\n    const zs = Object.keys(representationsByZ).map(Number).sort(descending);\n\n    const renderTileMask = this.beforeTilesMaskRender(frameState);\n\n    if (renderTileMask) {\n      for (let j = 0, jj = zs.length; j < jj; ++j) {\n        const tileZ = zs[j];\n        for (const tileRepresentation of representationsByZ[tileZ]) {\n          const tileCoord = tileRepresentation.tile.tileCoord;\n          const tileCoordKey = getTileCoordKey(tileCoord);\n          // do not render the tile mask if alpha < 1\n          if (tileCoordKey in alphaLookup) {\n            continue;\n          }\n          const tileExtent = tileGrid.getTileCoordExtent(tileCoord);\n          this.renderTileMask(\n            /** @type {TileRepresentation} */ (tileRepresentation),\n            tileZ,\n            tileExtent,\n            depthForZ(tileZ),\n          );\n        }\n      }\n    }\n\n    this.beforeTilesRender(frameState, blend);\n\n    for (let j = 0, jj = zs.length; j < jj; ++j) {\n      const tileZ = zs[j];\n      for (const tileRepresentation of representationsByZ[tileZ]) {\n        const tileCoord = tileRepresentation.tile.tileCoord;\n        const tileCoordKey = getTileCoordKey(tileCoord);\n        if (tileCoordKey in alphaLookup) {\n          continue;\n        }\n\n        this.drawTile_(\n          frameState,\n          tileRepresentation,\n          tileZ,\n          gutter,\n          extent,\n          alphaLookup,\n          tileGrid,\n        );\n      }\n    }\n\n    if (z in representationsByZ) {\n      for (const tileRepresentation of representationsByZ[z]) {\n        const tileCoord = tileRepresentation.tile.tileCoord;\n        const tileCoordKey = getTileCoordKey(tileCoord);\n        if (tileCoordKey in alphaLookup) {\n          this.drawTile_(\n            frameState,\n            tileRepresentation,\n            z,\n            gutter,\n            extent,\n            alphaLookup,\n            tileGrid,\n          );\n        }\n      }\n    }\n\n    this.beforeFinalize(frameState);\n    this.helper.finalizeDraw(\n      frameState,\n      this.dispatchPreComposeEvent,\n      this.dispatchPostComposeEvent,\n    );\n\n    const canvas = this.helper.getCanvas();\n\n    const tileRepresentationCache = this.tileRepresentationCache;\n    while (tileRepresentationCache.canExpireCache()) {\n      const tileRepresentation = tileRepresentationCache.pop();\n      tileRepresentation.dispose();\n    }\n\n    this.postRender(gl, frameState);\n    return canvas;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  beforeFinalize(frameState) {\n    return;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile representation lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of\n   * tile representations by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tileRepresentationLookup) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_,\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileRepresentationCache = this.tileRepresentationCache;\n    const source = this.getLayer().getRenderSource();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(source, [altZ, x, y]);\n        let loaded = false;\n        if (tileRepresentationCache.containsKey(cacheKey)) {\n          const tileRepresentation = tileRepresentationCache.get(cacheKey);\n          if (\n            tileRepresentation.ready &&\n            !lookupHasTile(tileRepresentationLookup, tileRepresentation.tile)\n          ) {\n            addTileRepresentationToLookup(\n              tileRepresentationLookup,\n              tileRepresentation,\n              altZ,\n            );\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @override\n   */\n  clearCache() {\n    super.clearCache();\n\n    const tileRepresentationCache = this.tileRepresentationCache;\n    tileRepresentationCache.forEach((tileRepresentation) =>\n      tileRepresentation.dispose(),\n    );\n    tileRepresentationCache.clear();\n  }\n\n  /**\n   * @override\n   */\n  afterHelperCreated() {\n    super.afterHelperCreated();\n\n    this.tileRepresentationCache.forEach((tileRepresentation) =>\n      tileRepresentation.setHelper(this.helper),\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    super.disposeInternal();\n    delete this.frameState;\n  }\n}\n\nexport default WebGLBaseTileLayerRenderer;\n","/**\n * @module ol/renderer/webgl/TileLayer\n */\nimport TileState from '../../TileState.js';\nimport {\n  boundingExtent,\n  containsCoordinate,\n  getIntersection,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {toSize} from '../../size.js';\nimport {apply as applyTransform} from '../../transform.js';\nimport {fromTransform as mat4FromTransform} from '../../vec/mat4.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport {AttributeType} from '../../webgl/Helper.js';\nimport TileTexture from '../../webgl/TileTexture.js';\nimport {ELEMENT_ARRAY_BUFFER, STATIC_DRAW} from '../../webgl.js';\nimport WebGLBaseTileLayerRenderer, {\n  Uniforms as BaseUniforms,\n  getCacheKey,\n} from './TileLayerBase.js';\n\nexport const Uniforms = {\n  ...BaseUniforms,\n  TILE_TEXTURE_ARRAY: 'u_tileTextures',\n  TEXTURE_PIXEL_WIDTH: 'u_texturePixelWidth',\n  TEXTURE_PIXEL_HEIGHT: 'u_texturePixelHeight',\n  TEXTURE_RESOLUTION: 'u_textureResolution', // map units per texture pixel\n  TEXTURE_ORIGIN_X: 'u_textureOriginX', // map x coordinate of left edge of texture\n  TEXTURE_ORIGIN_Y: 'u_textureOriginY', // map y coordinate of top edge of texture\n};\n\nexport const Attributes = {\n  TEXTURE_COORD: 'a_textureCoord',\n};\n\n/**\n * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n */\nconst attributeDescriptions = [\n  {\n    name: Attributes.TEXTURE_COORD,\n    size: 2,\n    type: AttributeType.FLOAT,\n  },\n];\n\n/**\n * @typedef {Object} Options\n * @property {string} vertexShader Vertex shader source.\n * @property {string} fragmentShader Fragment shader source.\n * @property {Object<string, import(\"../../webgl/Helper\").UniformValue>} [uniforms] Additional uniforms\n * made available to shaders.\n * @property {Array<import(\"../../webgl/PaletteTexture.js\").default>} [paletteTextures] Palette textures.\n * @property {number} [cacheSize=512] The texture cache size.\n * @property {Array<import('./Layer.js').PostProcessesOptions>} [postProcesses] Post-processes definitions.\n */\n\n/**\n * @typedef {import(\"../../webgl/TileTexture.js\").TileType} TileTextureType\n */\n\n/**\n * @typedef {import(\"../../webgl/TileTexture.js\").default} TileTextureRepresentation\n */\n\n/**\n * @classdesc\n * WebGL renderer for tile layers.\n * @template {import(\"../../layer/WebGLTile.js\").default|import(\"../../layer/Flow.js\").default} LayerType\n * @extends {WebGLBaseTileLayerRenderer<LayerType, TileTextureType, TileTextureRepresentation>}\n * @api\n */\nclass WebGLTileLayerRenderer extends WebGLBaseTileLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} options Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer, options);\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.program_;\n\n    /**\n     * @private\n     */\n    this.vertexShader_ = options.vertexShader;\n\n    /**\n     * @private\n     */\n    this.fragmentShader_ = options.fragmentShader;\n\n    /**\n     * Tiles are rendered as a quad with the following structure:\n     *\n     *  [P3]---------[P2]\n     *   |`           |\n     *   |  `     B   |\n     *   |    `       |\n     *   |      `     |\n     *   |   A    `   |\n     *   |          ` |\n     *  [P0]---------[P1]\n     *\n     * Triangle A: P0, P1, P3\n     * Triangle B: P1, P2, P3\n     *\n     * @private\n     */\n    this.indices_ = new WebGLArrayBuffer(ELEMENT_ARRAY_BUFFER, STATIC_DRAW);\n    this.indices_.fromArray([0, 1, 3, 1, 2, 3]);\n\n    /**\n     * @type {Array<import(\"../../webgl/PaletteTexture.js\").default>}\n     * @private\n     */\n    this.paletteTextures_ = options.paletteTextures || [];\n  }\n\n  /**\n   * @param {Options} options Options.\n   * @override\n   */\n  reset(options) {\n    super.reset(options);\n    if (this.helper) {\n      const gl = this.helper.getGL();\n      for (const paletteTexture of this.paletteTextures_) {\n        paletteTexture.delete(gl);\n      }\n    }\n\n    this.vertexShader_ = options.vertexShader;\n    this.fragmentShader_ = options.fragmentShader;\n    this.paletteTextures_ = options.paletteTextures || [];\n\n    if (this.helper) {\n      this.program_ = this.helper.getProgram(\n        this.fragmentShader_,\n        this.vertexShader_,\n      );\n      const gl = this.helper.getGL();\n      for (const paletteTexture of this.paletteTextures_) {\n        // upload the texture data\n        paletteTexture.getTexture(gl);\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  afterHelperCreated() {\n    super.afterHelperCreated();\n\n    const gl = this.helper.getGL();\n    for (const paletteTexture of this.paletteTextures_) {\n      // upload the texture data\n      paletteTexture.getTexture(gl);\n    }\n\n    this.program_ = this.helper.getProgram(\n      this.fragmentShader_,\n      this.vertexShader_,\n    );\n    this.helper.flushBufferData(this.indices_);\n  }\n\n  /**\n   * @override\n   */\n  removeHelper() {\n    if (this.helper) {\n      const gl = this.helper.getGL();\n      for (const paletteTexture of this.paletteTextures_) {\n        paletteTexture.delete(gl);\n      }\n    }\n\n    super.removeHelper();\n  }\n\n  /**\n   * @override\n   */\n  createTileRepresentation(options) {\n    return new TileTexture(options);\n  }\n\n  /**\n   * @override\n   */\n  beforeTilesRender(frameState, tilesWithAlpha) {\n    super.beforeTilesRender(frameState, tilesWithAlpha);\n    this.helper.useProgram(this.program_, frameState);\n  }\n\n  /**\n   * @override\n   */\n  renderTile(\n    tileTexture,\n    tileTransform,\n    frameState,\n    renderExtent,\n    tileResolution,\n    tileSize,\n    tileOrigin,\n    tileExtent,\n    depth,\n    gutter,\n    alpha,\n  ) {\n    const gl = this.helper.getGL();\n    this.helper.bindBuffer(tileTexture.coords);\n    this.helper.bindBuffer(this.indices_);\n    this.helper.enableAttributes(attributeDescriptions);\n\n    let textureSlot = 0;\n    while (textureSlot < tileTexture.textures.length) {\n      const uniformName = `${Uniforms.TILE_TEXTURE_ARRAY}[${textureSlot}]`;\n      this.helper.bindTexture(\n        tileTexture.textures[textureSlot],\n        textureSlot,\n        uniformName,\n      );\n      ++textureSlot;\n    }\n\n    for (\n      let paletteIndex = 0;\n      paletteIndex < this.paletteTextures_.length;\n      ++paletteIndex\n    ) {\n      const paletteTexture = this.paletteTextures_[paletteIndex];\n      const texture = paletteTexture.getTexture(gl);\n      this.helper.bindTexture(texture, textureSlot, paletteTexture.name);\n      ++textureSlot;\n    }\n\n    const viewState = frameState.viewState;\n\n    const tileWidthWithGutter = tileSize[0] + 2 * gutter;\n    const tileHeightWithGutter = tileSize[1] + 2 * gutter;\n\n    const tile = tileTexture.tile;\n    const tileCoord = tile.tileCoord;\n\n    const tileCenterI = tileCoord[1];\n    const tileCenterJ = tileCoord[2];\n\n    this.helper.setUniformMatrixValue(\n      Uniforms.TILE_TRANSFORM,\n      mat4FromTransform(this.tempMat4, tileTransform),\n    );\n\n    this.helper.setUniformFloatValue(Uniforms.TRANSITION_ALPHA, alpha);\n    this.helper.setUniformFloatValue(Uniforms.DEPTH, depth);\n\n    let gutterExtent = renderExtent;\n    if (gutter > 0) {\n      gutterExtent = tileExtent;\n      getIntersection(gutterExtent, renderExtent, gutterExtent);\n    }\n    this.helper.setUniformFloatVec4(Uniforms.RENDER_EXTENT, gutterExtent);\n\n    this.helper.setUniformFloatValue(Uniforms.RESOLUTION, viewState.resolution);\n    this.helper.setUniformFloatValue(Uniforms.ZOOM, viewState.zoom);\n\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_PIXEL_WIDTH,\n      tileWidthWithGutter,\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_PIXEL_HEIGHT,\n      tileHeightWithGutter,\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_RESOLUTION,\n      tileResolution,\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_ORIGIN_X,\n      tileOrigin[0] +\n        tileCenterI * tileSize[0] * tileResolution -\n        gutter * tileResolution,\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_ORIGIN_Y,\n      tileOrigin[1] -\n        tileCenterJ * tileSize[1] * tileResolution +\n        gutter * tileResolution,\n    );\n\n    this.helper.drawElements(0, this.indices_.getSize());\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const gl = this.helper.getGL();\n    if (!gl) {\n      return null;\n    }\n\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const viewState = frameState.viewState;\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (\n        !containsCoordinate(\n          fromUserExtent(layerExtent, viewState.projection),\n          coordinate,\n        )\n      ) {\n        return null;\n      }\n    }\n\n    // determine last source suitable for rendering at coordinate\n    const sources = layer.getSources(\n      boundingExtent([coordinate]),\n      viewState.resolution,\n    );\n    let i, source, tileGrid;\n    for (i = sources.length - 1; i >= 0; --i) {\n      source = sources[i];\n      if (source.getState() === 'ready') {\n        tileGrid = source.getTileGridForProjection(viewState.projection);\n        if (source.getWrapX()) {\n          break;\n        }\n        const gridExtent = tileGrid.getExtent();\n        if (!gridExtent || containsCoordinate(gridExtent, coordinate)) {\n          break;\n        }\n      }\n    }\n    if (i < 0) {\n      return null;\n    }\n\n    const tileTextureCache = this.tileRepresentationCache;\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const cacheKey = getCacheKey(source, tileCoord);\n      if (!tileTextureCache.containsKey(cacheKey)) {\n        continue;\n      }\n      const tileTexture = tileTextureCache.get(cacheKey);\n      const tile = tileTexture.tile;\n      if (tile.getState() === TileState.EMPTY) {\n        return null;\n      }\n      if (!tileTexture.loaded) {\n        continue;\n      }\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col =\n        (coordinate[0] - tileOrigin[0]) / tileResolution -\n        tileCoord[1] * tileSize[0];\n\n      const row =\n        (tileOrigin[1] - coordinate[1]) / tileResolution -\n        tileCoord[2] * tileSize[1];\n\n      return tileTexture.getPixelData(col, row);\n    }\n    return null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    const helper = this.helper;\n    if (helper) {\n      const gl = helper.getGL();\n      for (const paletteTexture of this.paletteTextures_) {\n        paletteTexture.delete(gl);\n      }\n      this.paletteTextures_.length = 0;\n\n      gl.deleteProgram(this.program_);\n      delete this.program_;\n      helper.deleteBuffer(this.indices_);\n    }\n    super.disposeInternal();\n    delete this.indices_;\n  }\n}\n\nexport default WebGLTileLayerRenderer;\n","/**\n * @module ol/webgl/PaletteTexture\n */\n\nclass PaletteTexture {\n  /**\n   * @param {string} name The name of the texture.\n   * @param {Uint8Array} data The texture data.\n   */\n  constructor(name, data) {\n    this.name = name;\n    this.data = data;\n\n    /**\n     * @type {WebGLTexture|null}\n     * @private\n     */\n    this.texture_ = null;\n  }\n\n  /**\n   * @param {WebGLRenderingContext} gl Rendering context.\n   * @return {WebGLTexture} The texture.\n   */\n  getTexture(gl) {\n    if (!this.texture_) {\n      const texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,\n        gl.RGBA,\n        this.data.length / 4,\n        1,\n        0,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data,\n      );\n      this.texture_ = texture;\n    }\n    return this.texture_;\n  }\n\n  /**\n   * @param {WebGLRenderingContext} gl Rendering context.\n   */\n  delete(gl) {\n    if (this.texture_) {\n      gl.deleteTexture(this.texture_);\n    }\n    this.texture_ = null;\n  }\n}\n\nexport default PaletteTexture;\n","/**\n * @module ol/expr/gpu\n */\nimport {asArray} from '../color.js';\nimport {Uniforms} from '../renderer/webgl/TileLayer.js';\nimport {toSize} from '../size.js';\nimport PaletteTexture from '../webgl/PaletteTexture.js';\nimport {\n  BooleanType,\n  CallExpression,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  Ops,\n  SizeType,\n  StringType,\n  parse,\n  typeName,\n} from './expression.js';\n\n/**\n * @param {string} operator Operator\n * @param {CompilationContext} context Compilation context\n * @return {string} A function name based on the operator, unique in the given context\n */\nfunction computeOperatorFunctionName(operator, context) {\n  return `operator_${operator}_${Object.keys(context.functions).length}`;\n}\n\n/**\n * Will return the number as a float with a dot separator, which is required by GLSL.\n * @param {number} v Numerical value.\n * @return {string} The value as string.\n */\nexport function numberToGlsl(v) {\n  const s = v.toString();\n  return s.includes('.') ? s : s + '.0';\n}\n\n/**\n * Will return the number array as a float with a dot separator, concatenated with ', '.\n * @param {Array<number>} array Numerical values array.\n * @return {string} The array as a vector, e. g.: `vec3(1.0, 2.0, 3.0)`.\n */\nexport function arrayToGlsl(array) {\n  if (array.length < 2 || array.length > 4) {\n    throw new Error(\n      '`formatArray` can only output `vec2`, `vec3` or `vec4` arrays.',\n    );\n  }\n  return `vec${array.length}(${array.map(numberToGlsl).join(', ')})`;\n}\n\n/**\n * Will normalize and converts to string a `vec4` color array compatible with GLSL.\n * @param {string|import(\"../color.js\").Color} color Color either in string format or [r, g, b, a] array format,\n * with RGB components in the 0..255 range and the alpha component in the 0..1 range.\n * Note that the final array will always have 4 components.\n * @return {string} The color expressed in the `vec4(1.0, 1.0, 1.0, 1.0)` form.\n */\nexport function colorToGlsl(color) {\n  const array = asArray(color);\n  const alpha = array.length > 3 ? array[3] : 1;\n  return arrayToGlsl([array[0] / 255, array[1] / 255, array[2] / 255, alpha]);\n}\n\n/**\n * Normalizes and converts a number or array toa `vec2` array compatible with GLSL.\n * @param {number|import('../size.js').Size} size Size.\n * @return {string} The color expressed in the `vec4(1.0, 1.0, 1.0, 1.0)` form.\n */\nexport function sizeToGlsl(size) {\n  const array = toSize(size);\n  return arrayToGlsl(array);\n}\n\n/** @type {Object<string, number>} */\nconst stringToFloatMap = {};\nlet stringToFloatCounter = 0;\n\n/**\n * Returns a stable equivalent number for the string literal.\n * @param {string} string String literal value\n * @return {number} Number equivalent\n */\nexport function getStringNumberEquivalent(string) {\n  if (!(string in stringToFloatMap)) {\n    stringToFloatMap[string] = stringToFloatCounter++;\n  }\n  return stringToFloatMap[string];\n}\n\n/**\n * Returns a stable equivalent number for the string literal, for use in shaders. This number is then\n * converted to be a GLSL-compatible string.\n * Note: with a float precision of `mediump`, the amount of unique strings supported is 16,777,216\n * @param {string} string String literal value\n * @return {string} GLSL-compatible string containing a number\n */\nexport function stringToGlsl(string) {\n  return numberToGlsl(getStringNumberEquivalent(string));\n}\n\n/**\n * Get the uniform name given a variable name.\n * @param {string} variableName The variable name.\n * @return {string} The uniform name.\n */\nexport function uniformNameForVariable(variableName) {\n  return 'u_var_' + variableName;\n}\n\n/**\n * @typedef {import('./expression.js').ParsingContext} ParsingContext\n */\n/**\n *\n * @typedef {import(\"./expression.js\").Expression} Expression\n */\n/**\n *\n * @typedef {import(\"./expression.js\").LiteralExpression} LiteralExpression\n */\n\n/**\n * @typedef {Object} CompilationContextProperty\n * @property {string} name Name\n * @property {number} type Resolved property type\n */\n\n/**\n * @typedef {Object} CompilationContextVariable\n * @property {string} name Name\n * @property {number} type Resolved variable type\n */\n\n/**\n * @typedef {Object} CompilationContext\n * @property {Object<string, CompilationContextProperty>} properties The values for properties used in 'get' expressions.\n * @property {Object<string, CompilationContextVariable>} variables The values for variables used in 'var' expressions.\n * @property {Object<string, string>} functions Lookup of functions used by the style.\n * @property {number} [bandCount] Number of bands per pixel.\n * @property {Array<PaletteTexture>} [paletteTextures] List of palettes used by the style.\n * @property {boolean} featureId Whether the feature ID is used in the expression\n * @property {boolean} geometryType Whether the geometry type is used in the expression\n */\n\n/**\n * @return {CompilationContext} A new compilation context.\n */\nexport function newCompilationContext() {\n  return {\n    variables: {},\n    properties: {},\n    functions: {},\n    bandCount: 0,\n    featureId: false,\n    geometryType: false,\n  };\n}\n\nconst GET_BAND_VALUE_FUNC = 'getBandValue';\n\nexport const PALETTE_TEXTURE_ARRAY = 'u_paletteTextures';\n\nexport const FEATURE_ID_PROPERTY_NAME = 'featureId';\nexport const GEOMETRY_TYPE_PROPERTY_NAME = 'geometryType';\n\n/**\n * The value `-9999999` will be used to indicate that a property on a feature is not defined, similar to a \"no data\" value.\n */\nexport const UNDEFINED_PROP_VALUE = -9999999;\n\n/**\n * @typedef {string} CompiledExpression\n */\n\n/**\n * @typedef {function(CompilationContext, CallExpression, number): string} Compiler\n * Third argument is the expected value types\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} parsingContext The parsing context.\n * @param {CompilationContext} compilationContext An existing compilation context\n * @return {CompiledExpression} The compiled expression.\n */\nexport function buildExpression(\n  encoded,\n  type,\n  parsingContext,\n  compilationContext,\n) {\n  const expression = parse(encoded, type, parsingContext);\n  return compile(expression, type, compilationContext);\n}\n\n/**\n * @param {function(Array<CompiledExpression>, CompilationContext): string} output Function that takes in parsed arguments and returns a string\n * @return {function(CompilationContext, import(\"./expression.js\").CallExpression, number): string} Compiler for the call expression\n */\nfunction createCompiler(output) {\n  return (context, expression, type) => {\n    const length = expression.args.length;\n    const args = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      args[i] = compile(expression.args[i], type, context);\n    }\n    return output(args, context);\n  };\n}\n\n/**\n * @type {Object<string, Compiler>}\n */\nconst compilers = {\n  [Ops.Get]: (context, expression) => {\n    const firstArg = /** @type {LiteralExpression} */ (expression.args[0]);\n    const propName = /** @type {string} */ (firstArg.value);\n    const isExisting = propName in context.properties;\n    if (!isExisting) {\n      context.properties[propName] = {\n        name: propName,\n        type: expression.type,\n      };\n    }\n    return 'a_prop_' + propName;\n  },\n  [Ops.Id]: (context) => {\n    context.featureId = true;\n    return 'a_' + FEATURE_ID_PROPERTY_NAME;\n  },\n  [Ops.GeometryType]: (context) => {\n    context.geometryType = true;\n    return 'a_' + GEOMETRY_TYPE_PROPERTY_NAME;\n  },\n  [Ops.LineMetric]: () => 'currentLineMetric', // this variable is assumed to always be present in shaders, default is 0.\n  [Ops.Var]: (context, expression) => {\n    const firstArg = /** @type {LiteralExpression} */ (expression.args[0]);\n    const varName = /** @type {string} */ (firstArg.value);\n    const isExisting = varName in context.variables;\n    if (!isExisting) {\n      context.variables[varName] = {\n        name: varName,\n        type: expression.type,\n      };\n    }\n    return uniformNameForVariable(varName);\n  },\n  [Ops.Has]: (context, expression) => {\n    const firstArg = /** @type {LiteralExpression} */ (expression.args[0]);\n    const propName = /** @type {string} */ (firstArg.value);\n    const isExisting = propName in context.properties;\n    if (!isExisting) {\n      context.properties[propName] = {\n        name: propName,\n        type: expression.type,\n      };\n    }\n    return `(a_prop_${propName} != ${numberToGlsl(UNDEFINED_PROP_VALUE)})`;\n  },\n  [Ops.Resolution]: () => 'u_resolution',\n  [Ops.Zoom]: () => 'u_zoom',\n  [Ops.Time]: () => 'u_time',\n  [Ops.Any]: createCompiler((compiledArgs) => `(${compiledArgs.join(` || `)})`),\n  [Ops.All]: createCompiler((compiledArgs) => `(${compiledArgs.join(` && `)})`),\n  [Ops.Not]: createCompiler(([value]) => `(!${value})`),\n  [Ops.Equal]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} == ${secondValue})`,\n  ),\n  [Ops.NotEqual]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} != ${secondValue})`,\n  ),\n  [Ops.GreaterThan]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} > ${secondValue})`,\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} >= ${secondValue})`,\n  ),\n  [Ops.LessThan]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} < ${secondValue})`,\n  ),\n  [Ops.LessThanOrEqualTo]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} <= ${secondValue})`,\n  ),\n  [Ops.Multiply]: createCompiler(\n    (compiledArgs) => `(${compiledArgs.join(' * ')})`,\n  ),\n  [Ops.Divide]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} / ${secondValue})`,\n  ),\n  [Ops.Add]: createCompiler((compiledArgs) => `(${compiledArgs.join(' + ')})`),\n  [Ops.Subtract]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} - ${secondValue})`,\n  ),\n  [Ops.Clamp]: createCompiler(\n    ([value, min, max]) => `clamp(${value}, ${min}, ${max})`,\n  ),\n  [Ops.Mod]: createCompiler(([value, modulo]) => `mod(${value}, ${modulo})`),\n  [Ops.Pow]: createCompiler(([value, power]) => `pow(${value}, ${power})`),\n  [Ops.Abs]: createCompiler(([value]) => `abs(${value})`),\n  [Ops.Floor]: createCompiler(([value]) => `floor(${value})`),\n  [Ops.Ceil]: createCompiler(([value]) => `ceil(${value})`),\n  [Ops.Round]: createCompiler(([value]) => `floor(${value} + 0.5)`),\n  [Ops.Sin]: createCompiler(([value]) => `sin(${value})`),\n  [Ops.Cos]: createCompiler(([value]) => `cos(${value})`),\n  [Ops.Atan]: createCompiler(([firstValue, secondValue]) => {\n    return secondValue !== undefined\n      ? `atan(${firstValue}, ${secondValue})`\n      : `atan(${firstValue})`;\n  }),\n  [Ops.Sqrt]: createCompiler(([value]) => `sqrt(${value})`),\n  [Ops.Match]: createCompiler((compiledArgs) => {\n    const input = compiledArgs[0];\n    const fallback = compiledArgs[compiledArgs.length - 1];\n    let result = null;\n    for (let i = compiledArgs.length - 3; i >= 1; i -= 2) {\n      const match = compiledArgs[i];\n      const output = compiledArgs[i + 1];\n      result = `(${input} == ${match} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  }),\n  [Ops.Between]: createCompiler(\n    ([value, min, max]) => `(${value} >= ${min} && ${value} <= ${max})`,\n  ),\n  [Ops.Interpolate]: createCompiler(([exponent, input, ...compiledArgs]) => {\n    let result = '';\n    for (let i = 0; i < compiledArgs.length - 2; i += 2) {\n      const stop1 = compiledArgs[i];\n      const output1 = result || compiledArgs[i + 1];\n      const stop2 = compiledArgs[i + 2];\n      const output2 = compiledArgs[i + 3];\n      let ratio;\n      if (exponent === numberToGlsl(1)) {\n        ratio = `(${input} - ${stop1}) / (${stop2} - ${stop1})`;\n      } else {\n        ratio = `(pow(${exponent}, (${input} - ${stop1})) - 1.0) / (pow(${exponent}, (${stop2} - ${stop1})) - 1.0)`;\n      }\n      result = `mix(${output1}, ${output2}, clamp(${ratio}, 0.0, 1.0))`;\n    }\n    return result;\n  }),\n  [Ops.Case]: createCompiler((compiledArgs) => {\n    const fallback = compiledArgs[compiledArgs.length - 1];\n    let result = null;\n    for (let i = compiledArgs.length - 3; i >= 0; i -= 2) {\n      const condition = compiledArgs[i];\n      const output = compiledArgs[i + 1];\n      result = `(${condition} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  }),\n  [Ops.In]: createCompiler(([needle, ...haystack], context) => {\n    const funcName = computeOperatorFunctionName('in', context);\n    const tests = [];\n    for (let i = 0; i < haystack.length; i += 1) {\n      tests.push(`  if (inputValue == ${haystack[i]}) { return true; }`);\n    }\n    context.functions[funcName] = `bool ${funcName}(float inputValue) {\n${tests.join('\\n')}\n  return false;\n}`;\n    return `${funcName}(${needle})`;\n  }),\n  [Ops.Array]: createCompiler(\n    (args) => `vec${args.length}(${args.join(', ')})`,\n  ),\n  [Ops.Color]: createCompiler((compiledArgs) => {\n    if (compiledArgs.length === 1) {\n      //grayscale\n      return `vec4(vec3(${compiledArgs[0]} / 255.0), 1.0)`;\n    }\n    if (compiledArgs.length === 2) {\n      //grayscale with alpha\n      return `vec4(vec3(${compiledArgs[0]} / 255.0), ${compiledArgs[1]})`;\n    }\n    const rgb = compiledArgs.slice(0, 3).map((color) => `${color} / 255.0`);\n    if (compiledArgs.length === 3) {\n      return `vec4(${rgb.join(', ')}, 1.0)`;\n    }\n    const alpha = compiledArgs[3];\n    return `vec4(${rgb.join(', ')}, ${alpha})`;\n  }),\n  [Ops.Band]: createCompiler(([band, xOffset, yOffset], context) => {\n    if (!(GET_BAND_VALUE_FUNC in context.functions)) {\n      let ifBlocks = '';\n      const bandCount = context.bandCount || 1;\n      for (let i = 0; i < bandCount; i++) {\n        const colorIndex = Math.floor(i / 4);\n        let bandIndex = i % 4;\n        if (i === bandCount - 1 && bandIndex === 1) {\n          // LUMINANCE_ALPHA - band 1 assigned to rgb and band 2 assigned to alpha\n          bandIndex = 3;\n        }\n        const textureName = `${Uniforms.TILE_TEXTURE_ARRAY}[${colorIndex}]`;\n        ifBlocks += `  if (band == ${i + 1}.0) {\n    return texture2D(${textureName}, v_textureCoord + vec2(dx, dy))[${bandIndex}];\n  }\n`;\n      }\n\n      context.functions[GET_BAND_VALUE_FUNC] =\n        `float getBandValue(float band, float xOffset, float yOffset) {\n  float dx = xOffset / ${Uniforms.TEXTURE_PIXEL_WIDTH};\n  float dy = yOffset / ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n${ifBlocks}\n}`;\n    }\n\n    return `${GET_BAND_VALUE_FUNC}(${band}, ${xOffset ?? '0.0'}, ${\n      yOffset ?? '0.0'\n    })`;\n  }),\n  [Ops.Palette]: (context, expression) => {\n    const [index, ...colors] = expression.args;\n    const numColors = colors.length;\n    const palette = new Uint8Array(numColors * 4);\n    for (let i = 0; i < colors.length; i++) {\n      const parsedValue = /** @type {string | Array<number>} */ (\n        /** @type {LiteralExpression} */ (colors[i]).value\n      );\n      const color = asArray(parsedValue);\n      const offset = i * 4;\n      palette[offset] = color[0];\n      palette[offset + 1] = color[1];\n      palette[offset + 2] = color[2];\n      palette[offset + 3] = color[3] * 255;\n    }\n    if (!context.paletteTextures) {\n      context.paletteTextures = [];\n    }\n    const paletteName = `${PALETTE_TEXTURE_ARRAY}[${context.paletteTextures.length}]`;\n    const paletteTexture = new PaletteTexture(paletteName, palette);\n    context.paletteTextures.push(paletteTexture);\n    const compiledIndex = compile(index, NumberType, context);\n    return `texture2D(${paletteName}, vec2((${compiledIndex} + 0.5) / ${numColors}.0, 0.5))`;\n  },\n  // TODO: unimplemented\n  // Ops.Number\n  // Ops.String\n  // Ops.Coalesce\n  // Ops.Concat\n  // Ops.ToString\n};\n\n/**\n * @param {Expression} expression The expression.\n * @param {number} returnType The expected return type.\n * @param {CompilationContext} context The compilation context.\n * @return {CompiledExpression} The compiled expression\n */\nfunction compile(expression, returnType, context) {\n  // operator\n  if (expression instanceof CallExpression) {\n    const compiler = compilers[expression.operator];\n    if (compiler === undefined) {\n      throw new Error(\n        `No compiler defined for this operator: ${JSON.stringify(\n          expression.operator,\n        )}`,\n      );\n    }\n    return compiler(context, expression, returnType);\n  }\n\n  if ((expression.type & NumberType) > 0) {\n    return numberToGlsl(/** @type {number} */ (expression.value));\n  }\n\n  if ((expression.type & BooleanType) > 0) {\n    return expression.value.toString();\n  }\n\n  if ((expression.type & StringType) > 0) {\n    return stringToGlsl(expression.value.toString());\n  }\n\n  if ((expression.type & ColorType) > 0) {\n    return colorToGlsl(\n      /** @type {Array<number> | string} */ (expression.value),\n    );\n  }\n\n  if ((expression.type & NumberArrayType) > 0) {\n    return arrayToGlsl(/** @type {Array<number>} */ (expression.value));\n  }\n\n  if ((expression.type & SizeType) > 0) {\n    return sizeToGlsl(\n      /** @type {number|import('../size.js').Size} */ (expression.value),\n    );\n  }\n\n  throw new Error(\n    `Unexpected expression ${expression.value} (expected type ${typeName(\n      returnType,\n    )})`,\n  );\n}\n","/**\n * Utilities for compiling expressions and turning them into WebGL concepts\n * @module ol/render/webgl/compileUtil\n */\n\nimport {asArray} from '../../color.js';\nimport {\n  ColorType,\n  NumberArrayType,\n  SizeType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {\n  buildExpression,\n  getStringNumberEquivalent,\n  uniformNameForVariable,\n} from '../../expr/gpu.js';\n\n/**\n * Recursively parses a style expression and outputs a GLSL-compatible string. Takes in a compilation context that\n * will be read and modified during the parsing operation.\n * @param {import(\"../../expr/gpu.js\").CompilationContext} compilationContext Compilation context\n * @param {import(\"../../expr/expression.js\").EncodedExpression} value Value\n * @param {number} [expectedType] Expected final type (can be several types combined)\n * @return {string} GLSL-compatible output\n */\nexport function expressionToGlsl(compilationContext, value, expectedType) {\n  const parsingContext = newParsingContext();\n  return buildExpression(\n    value,\n    expectedType,\n    parsingContext,\n    compilationContext,\n  );\n}\n\n/**\n * Packs all components of a color into a two-floats array\n * @param {import(\"../../color.js\").Color|string} color Color as array of numbers or string\n * @return {Array<number>} Vec2 array containing the color in compressed form\n */\nexport function packColor(color) {\n  const array = asArray(color);\n  const r = array[0] * 256;\n  const g = array[1];\n  const b = array[2] * 256;\n  const a = Math.round(array[3] * 255);\n  return [r + g, b + a];\n}\n\nexport const UNPACK_COLOR_FN = `vec4 unpackColor(vec2 packedColor) {\n  return vec4(\n    fract(floor(packedColor[0] / 256.0) / 256.0),\n    fract(packedColor[0] / 256.0),\n    fract(floor(packedColor[1] / 256.0) / 256.0),\n    fract(packedColor[1] / 256.0)\n  );\n}`;\n\n/**\n * @param {number} type Value type\n * @return {1|2|3|4} The amount of components for this value\n */\nexport function getGlslSizeFromType(type) {\n  if (type === ColorType || type === SizeType) {\n    return 2;\n  }\n  if (type === NumberArrayType) {\n    return 4;\n  }\n  return 1;\n}\n\n/**\n * @param {number} type Value type\n * @return {'float'|'vec2'|'vec3'|'vec4'} The corresponding GLSL type for this value\n */\nexport function getGlslTypeFromType(type) {\n  const size = getGlslSizeFromType(type);\n  if (size > 1) {\n    return /** @type {'vec2'|'vec3'|'vec4'} */ (`vec${size}`);\n  }\n  return 'float';\n}\n\n/**\n * Applies the properties and variables collected in a compilation context to a ShaderBuilder instance:\n * properties will show up as attributes in shaders, and variables will show up as uniforms.\n * @param {import(\"./ShaderBuilder.js\").ShaderBuilder} builder Shader builder\n * @param {import(\"../../expr/gpu.js\").CompilationContext} context Compilation context\n */\nexport function applyContextToBuilder(builder, context) {\n  // define one uniform per variable\n  for (const varName in context.variables) {\n    const variable = context.variables[varName];\n    const uniformName = uniformNameForVariable(variable.name);\n    let glslType = getGlslTypeFromType(variable.type);\n    if (variable.type === ColorType) {\n      // we're not packing colors when they're passed as uniforms\n      glslType = 'vec4';\n    }\n    builder.addUniform(uniformName, glslType);\n  }\n\n  // for each feature attribute used in the fragment shader, define a varying that will be used to pass data\n  // from the vertex to the fragment shader, as well as an attribute in the vertex shader (if not already present)\n  for (const propName in context.properties) {\n    const property = context.properties[propName];\n    const glslType = getGlslTypeFromType(property.type);\n    const attributeName = `a_prop_${property.name}`;\n    if (property.type === ColorType) {\n      builder.addAttribute(\n        attributeName,\n        glslType,\n        `unpackColor(${attributeName})`,\n        'vec4',\n      );\n      builder.addVertexShaderFunction(UNPACK_COLOR_FN);\n    } else {\n      builder.addAttribute(attributeName, glslType);\n    }\n  }\n\n  // add functions that were collected in the compilation contexts\n  for (const functionName in context.functions) {\n    builder.addVertexShaderFunction(context.functions[functionName]);\n    builder.addFragmentShaderFunction(context.functions[functionName]);\n  }\n}\n\n/**\n * Generates a set of uniforms from variables collected in a compilation context,\n * to be fed to a WebGLHelper instance\n * @param {import(\"../../expr/gpu.js\").CompilationContext} context Compilation context\n * @param {import('../../style/flat.js').StyleVariables} [variables] Style variables.\n * @return {Object<string,import(\"../../webgl/Helper\").UniformValue>} Uniforms\n */\nexport function generateUniformsFromContext(context, variables) {\n  /** @type {Object<string,import(\"../../webgl/Helper\").UniformValue>} */\n  const uniforms = {};\n\n  // define one uniform per variable\n  for (const varName in context.variables) {\n    const variable = context.variables[varName];\n    const uniformName = uniformNameForVariable(variable.name);\n\n    uniforms[uniformName] = () => {\n      const value = variables[variable.name];\n      if (typeof value === 'number') {\n        return value;\n      }\n      if (typeof value === 'boolean') {\n        return value ? 1 : 0;\n      }\n      if (variable.type === ColorType) {\n        const color = [...asArray(value || '#eee')];\n        color[0] /= 255;\n        color[1] /= 255;\n        color[2] /= 255;\n        color[3] ??= 1;\n        return color;\n      }\n      if (typeof value === 'string') {\n        return getStringNumberEquivalent(value);\n      }\n      return value;\n    };\n  }\n\n  return uniforms;\n}\n\n/**\n * Generates a set of attributes from properties collected in a compilation context,\n * to be fed to a WebGLHelper instance\n * @param {import(\"../../expr/gpu.js\").CompilationContext} context Compilation context\n * @return {import('./VectorStyleRenderer.js').AttributeDefinitions} Attributes\n */\nexport function generateAttributesFromContext(context) {\n  /**\n   * @type {import('./VectorStyleRenderer.js').AttributeDefinitions}\n   */\n  const attributes = {};\n\n  // Define attributes with their callback for each property used in the vertex shader\n  for (const propName in context.properties) {\n    const property = context.properties[propName];\n    const callback = (feature) => {\n      const value = feature.get(property.name);\n      if (property.type === ColorType) {\n        return packColor([...asArray(value || '#eee')]);\n      }\n      if (typeof value === 'string') {\n        return getStringNumberEquivalent(value);\n      }\n      if (typeof value === 'boolean') {\n        return value ? 1 : 0;\n      }\n      return value;\n    };\n\n    attributes[`prop_${property.name}`] = {\n      size: getGlslSizeFromType(property.type),\n      callback,\n    };\n  }\n  return attributes;\n}\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [useInterimTilesOnError=true] Deprecated.  Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n * @property {number} [cacheSize=512] The internal tile cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    const cacheSize = options.cacheSize;\n    delete options.cacheSize;\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * @return {number|undefined} The suggested cache size\n   * @protected\n   */\n  getCacheSize() {\n    return this.cacheSize_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Deprecated.  Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Deprecated.  Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   * @override\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/layer/WebGLTile\n */\nimport {ColorType, NumberType} from '../expr/expression.js';\nimport {\n  PALETTE_TEXTURE_ARRAY,\n  getStringNumberEquivalent,\n  newCompilationContext,\n  uniformNameForVariable,\n} from '../expr/gpu.js';\nimport LayerProperty from '../layer/Property.js';\nimport {expressionToGlsl} from '../render/webgl/compileUtil.js';\nimport WebGLTileLayerRenderer, {\n  Attributes,\n  Uniforms,\n} from '../renderer/webgl/TileLayer.js';\nimport BaseTileLayer from './BaseTile.js';\n\n/**\n * @typedef {import(\"../source/DataTile.js\").default<import(\"../DataTile.js\").default|import(\"../ImageTile.js\").default>} SourceType\n */\n\n/**\n * @typedef {Object} Style\n * Translates tile data to rendered pixels.\n *\n * @property {Object<string, (string|number)>} [variables] Style variables.  Each variable must hold a number or string.  These\n * variables can be used in the `color`, `brightness`, `contrast`, `exposure`, `saturation` and `gamma`\n * {@link import(\"../expr/expression.js\").ExpressionValue expressions}, using the `['var', 'varName']` operator.\n * To update style variables, use the {@link import(\"./WebGLTile.js\").default#updateStyleVariables} method.\n * @property {import(\"../expr/expression.js\").ExpressionValue} [color] An expression applied to color values.\n * @property {import(\"../expr/expression.js\").ExpressionValue} [brightness=0] Value used to decrease or increase\n * the layer brightness.  Values range from -1 to 1.\n * @property {import(\"../expr/expression.js\").ExpressionValue} [contrast=0] Value used to decrease or increase\n * the layer contrast.  Values range from -1 to 1.\n * @property {import(\"../expr/expression.js\").ExpressionValue} [exposure=0] Value used to decrease or increase\n * the layer exposure.  Values range from -1 to 1.\n * @property {import(\"../expr/expression.js\").ExpressionValue} [saturation=0] Value used to decrease or increase\n * the layer saturation.  Values range from -1 to 1.\n * @property {import(\"../expr/expression.js\").ExpressionValue} [gamma=1] Apply a gamma correction to the layer.\n * Values range from 0 to infinity.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Style} [style] Style to apply to the layer.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {SourceType} [source] Source for this layer.\n * @property {Array<SourceType>|function(import(\"../extent.js\").Extent, number):Array<SourceType>} [sources] Array\n * of sources for this layer. Takes precedence over `source`. Can either be an array of sources, or a function that\n * expects an extent and a resolution (in view projection units per pixel) and returns an array of sources. See\n * {@link module:ol/source.sourcesFromTileGrid} for a helper function to generate sources that are organized in a\n * pyramid following the same pattern as a tile grid. **Note:** All sources must have the same band count and content.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map~Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Deprecated.  Use interim tiles on error.\n * @property {number} [cacheSize=512] The internal texture cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} ParsedStyle\n * @property {string} vertexShader The vertex shader.\n * @property {string} fragmentShader The fragment shader.\n * @property {Object<string,import(\"../webgl/Helper.js\").UniformValue>} uniforms Uniform definitions.\n * @property {Array<import(\"../webgl/PaletteTexture.js\").default>} paletteTextures Palette textures.\n */\n\n/**\n * @param {Style} style The layer style.\n * @param {number} [bandCount] The number of bands.\n * @return {ParsedStyle} Shaders and uniforms generated from the style.\n */\nfunction parseStyle(style, bandCount) {\n  const vertexShader = `\n    attribute vec2 ${Attributes.TEXTURE_COORD};\n    uniform mat4 ${Uniforms.TILE_TRANSFORM};\n    uniform float ${Uniforms.TEXTURE_PIXEL_WIDTH};\n    uniform float ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n    uniform float ${Uniforms.TEXTURE_RESOLUTION};\n    uniform float ${Uniforms.TEXTURE_ORIGIN_X};\n    uniform float ${Uniforms.TEXTURE_ORIGIN_Y};\n    uniform float ${Uniforms.DEPTH};\n\n    varying vec2 v_textureCoord;\n    varying vec2 v_mapCoord;\n\n    void main() {\n      v_textureCoord = ${Attributes.TEXTURE_COORD};\n      v_mapCoord = vec2(\n        ${Uniforms.TEXTURE_ORIGIN_X} + ${Uniforms.TEXTURE_RESOLUTION} * ${Uniforms.TEXTURE_PIXEL_WIDTH} * v_textureCoord[0],\n        ${Uniforms.TEXTURE_ORIGIN_Y} - ${Uniforms.TEXTURE_RESOLUTION} * ${Uniforms.TEXTURE_PIXEL_HEIGHT} * v_textureCoord[1]\n      );\n      gl_Position = ${Uniforms.TILE_TRANSFORM} * vec4(${Attributes.TEXTURE_COORD}, ${Uniforms.DEPTH}, 1.0);\n    }\n  `;\n\n  /**\n   * @type {import(\"../expr/gpu.js\").CompilationContext}\n   */\n  const context = {\n    ...newCompilationContext(),\n    bandCount: bandCount,\n  };\n\n  const pipeline = [];\n\n  if (style.color !== undefined) {\n    const color = expressionToGlsl(context, style.color, ColorType);\n    pipeline.push(`color = ${color};`);\n  }\n\n  if (style.contrast !== undefined) {\n    const contrast = expressionToGlsl(context, style.contrast, NumberType);\n    pipeline.push(\n      `color.rgb = clamp((${contrast} + 1.0) * color.rgb - (${contrast} / 2.0), vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`,\n    );\n  }\n\n  if (style.exposure !== undefined) {\n    const exposure = expressionToGlsl(context, style.exposure, NumberType);\n    pipeline.push(\n      `color.rgb = clamp((${exposure} + 1.0) * color.rgb, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`,\n    );\n  }\n\n  if (style.saturation !== undefined) {\n    const saturation = expressionToGlsl(context, style.saturation, NumberType);\n    pipeline.push(`\n      float saturation = ${saturation} + 1.0;\n      float sr = (1.0 - saturation) * 0.2126;\n      float sg = (1.0 - saturation) * 0.7152;\n      float sb = (1.0 - saturation) * 0.0722;\n      mat3 saturationMatrix = mat3(\n        sr + saturation, sr, sr,\n        sg, sg + saturation, sg,\n        sb, sb, sb + saturation\n      );\n      color.rgb = clamp(saturationMatrix * color.rgb, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));\n    `);\n  }\n\n  if (style.gamma !== undefined) {\n    const gamma = expressionToGlsl(context, style.gamma, NumberType);\n    pipeline.push(`color.rgb = pow(color.rgb, vec3(1.0 / ${gamma}));`);\n  }\n\n  if (style.brightness !== undefined) {\n    const brightness = expressionToGlsl(context, style.brightness, NumberType);\n    pipeline.push(\n      `color.rgb = clamp(color.rgb + ${brightness}, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`,\n    );\n  }\n\n  /** @type {Object<string,import(\"../webgl/Helper\").UniformValue>} */\n  const uniforms = {};\n\n  const numVariables = Object.keys(context.variables).length;\n  if (numVariables > 1 && !style.variables) {\n    throw new Error(\n      `Missing variables in style (expected ${context.variables})`,\n    );\n  }\n\n  for (let i = 0; i < numVariables; ++i) {\n    const variable = context.variables[Object.keys(context.variables)[i]];\n    if (!(variable.name in style.variables)) {\n      throw new Error(`Missing '${variable.name}' in style variables`);\n    }\n    const uniformName = uniformNameForVariable(variable.name);\n    uniforms[uniformName] = function () {\n      let value = style.variables[variable.name];\n      if (typeof value === 'string') {\n        value = getStringNumberEquivalent(value);\n      }\n      return value !== undefined ? value : -9999999; // to avoid matching with the first string literal\n    };\n  }\n\n  const uniformDeclarations = Object.keys(uniforms).map(function (name) {\n    return `uniform float ${name};`;\n  });\n\n  const textureCount = Math.ceil(bandCount / 4);\n  uniformDeclarations.push(\n    `uniform sampler2D ${Uniforms.TILE_TEXTURE_ARRAY}[${textureCount}];`,\n  );\n\n  if (context.paletteTextures) {\n    uniformDeclarations.push(\n      `uniform sampler2D ${PALETTE_TEXTURE_ARRAY}[${context.paletteTextures.length}];`,\n    );\n  }\n\n  const functionDefintions = Object.keys(context.functions).map(\n    function (name) {\n      return context.functions[name];\n    },\n  );\n\n  const fragmentShader = `\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    #else\n    precision mediump float;\n    #endif\n\n    varying vec2 v_textureCoord;\n    varying vec2 v_mapCoord;\n    uniform vec4 ${Uniforms.RENDER_EXTENT};\n    uniform float ${Uniforms.TRANSITION_ALPHA};\n    uniform float ${Uniforms.TEXTURE_PIXEL_WIDTH};\n    uniform float ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n    uniform float ${Uniforms.RESOLUTION};\n    uniform float ${Uniforms.ZOOM};\n\n    ${uniformDeclarations.join('\\n')}\n\n    ${functionDefintions.join('\\n')}\n\n    void main() {\n      if (\n        v_mapCoord[0] < ${Uniforms.RENDER_EXTENT}[0] ||\n        v_mapCoord[1] < ${Uniforms.RENDER_EXTENT}[1] ||\n        v_mapCoord[0] > ${Uniforms.RENDER_EXTENT}[2] ||\n        v_mapCoord[1] > ${Uniforms.RENDER_EXTENT}[3]\n      ) {\n        discard;\n      }\n\n      vec4 color = texture2D(${\n        Uniforms.TILE_TEXTURE_ARRAY\n      }[0],  v_textureCoord);\n\n      ${pipeline.join('\\n')}\n\n      gl_FragColor = color;\n      gl_FragColor.rgb *= gl_FragColor.a;\n      gl_FragColor *= ${Uniforms.TRANSITION_ALPHA};\n    }`;\n\n  return {\n    vertexShader: vertexShader,\n    fragmentShader: fragmentShader,\n    uniforms: uniforms,\n    paletteTextures: context.paletteTextures,\n  };\n}\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends BaseTileLayer<SourceType, WebGLTileLayerRenderer>\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @api\n */\nclass WebGLTileLayer extends BaseTileLayer {\n  /**\n   * @param {Options} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? Object.assign({}, options) : {};\n\n    const style = options.style || {};\n    delete options.style;\n\n    super(options);\n\n    /**\n     * @type {Array<SourceType>|function(import(\"../extent.js\").Extent, number):Array<SourceType>}\n     * @private\n     */\n    this.sources_ = options.sources;\n\n    /**\n     * @type {SourceType|null}\n     * @private\n     */\n    this.renderedSource_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @type {Style}\n     * @private\n     */\n    this.style_ = style;\n\n    /**\n     * @type {Object<string, (string|number)>}\n     * @private\n     */\n    this.styleVariables_ = this.style_.variables || {};\n\n    this.handleSourceUpdate_();\n    this.addChangeListener(LayerProperty.SOURCE, this.handleSourceUpdate_);\n  }\n\n  /**\n   * Gets the sources for this layer, for a given extent and resolution.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @return {Array<SourceType>} Sources.\n   */\n  getSources(extent, resolution) {\n    const source = this.getSource();\n    return this.sources_\n      ? typeof this.sources_ === 'function'\n        ? this.sources_(extent, resolution)\n        : this.sources_\n      : source\n        ? [source]\n        : [];\n  }\n\n  /**\n   * @return {SourceType} The source being rendered.\n   * @override\n   */\n  getRenderSource() {\n    return this.renderedSource_ || this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    const source = this.getRenderSource();\n    return source ? source.getState() : 'undefined';\n  }\n\n  /**\n   * @private\n   */\n  handleSourceUpdate_() {\n    if (this.hasRenderer()) {\n      this.getRenderer().clearCache();\n    }\n    const source = this.getSource();\n    if (source) {\n      if (source.getState() === 'loading') {\n        const onChange = () => {\n          if (source.getState() === 'ready') {\n            source.removeEventListener('change', onChange);\n            this.setStyle(this.style_);\n          }\n        };\n        source.addEventListener('change', onChange);\n      } else {\n        this.setStyle(this.style_);\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @return {number} The number of source bands.\n   */\n  getSourceBandCount_() {\n    const max = Number.MAX_SAFE_INTEGER;\n    const sources = this.getSources([-max, -max, max, max], max);\n    return sources && sources.length && 'bandCount' in sources[0]\n      ? sources[0].bandCount\n      : 4;\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    const parsedStyle = parseStyle(this.style_, this.getSourceBandCount_());\n\n    return new WebGLTileLayerRenderer(this, {\n      vertexShader: parsedStyle.vertexShader,\n      fragmentShader: parsedStyle.fragmentShader,\n      uniforms: parsedStyle.uniforms,\n      cacheSize: this.getCacheSize(),\n      paletteTextures: parsedStyle.paletteTextures,\n    });\n  }\n\n  /**\n   * @param {import(\"../Map\").FrameState} frameState Frame state.\n   * @param {Array<SourceType>} sources Sources.\n   * @return {HTMLElement} Canvas.\n   */\n  renderSources(frameState, sources) {\n    const layerRenderer = this.getRenderer();\n    let canvas;\n    for (let i = 0, ii = sources.length; i < ii; ++i) {\n      this.renderedSource_ = sources[i];\n      if (layerRenderer.prepareFrame(frameState)) {\n        canvas = layerRenderer.renderFrame(frameState);\n      }\n    }\n    return canvas;\n  }\n\n  /**\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  render(frameState, target) {\n    this.rendered = true;\n    const viewState = frameState.viewState;\n    const sources = this.getSources(frameState.extent, viewState.resolution);\n    let ready = true;\n    for (let i = 0, ii = sources.length; i < ii; ++i) {\n      const source = sources[i];\n      const sourceState = source.getState();\n      if (sourceState == 'loading') {\n        const onChange = () => {\n          if (source.getState() == 'ready') {\n            source.removeEventListener('change', onChange);\n            this.changed();\n          }\n        };\n        source.addEventListener('change', onChange);\n      }\n      ready = ready && sourceState == 'ready';\n    }\n    const canvas = this.renderSources(frameState, sources);\n    if (this.getRenderer().renderComplete && ready) {\n      // Fully rendered, done.\n      this.renderedResolution_ = viewState.resolution;\n      return canvas;\n    }\n    // Render sources from previously fully rendered frames\n    if (this.renderedResolution_ > 0.5 * viewState.resolution) {\n      const altSources = this.getSources(\n        frameState.extent,\n        this.renderedResolution_,\n      ).filter((source) => !sources.includes(source));\n      if (altSources.length > 0) {\n        return this.renderSources(frameState, altSources);\n      }\n    }\n    return canvas;\n  }\n\n  /**\n   * Update the layer style.  The `updateStyleVariables` function is a more efficient\n   * way to update layer rendering.  In cases where the whole style needs to be updated,\n   * this method may be called instead.  Note that calling this method will also replace\n   * any previously set variables, so the new style also needs to include new variables,\n   * if needed.\n   * @param {Style} style The new style.\n   */\n  setStyle(style) {\n    this.styleVariables_ = style.variables || {};\n    this.style_ = style;\n    if (this.hasRenderer()) {\n      const parsedStyle = parseStyle(this.style_, this.getSourceBandCount_());\n      const renderer = this.getRenderer();\n      renderer.reset({\n        vertexShader: parsedStyle.vertexShader,\n        fragmentShader: parsedStyle.fragmentShader,\n        uniforms: parsedStyle.uniforms,\n        paletteTextures: parsedStyle.paletteTextures,\n      });\n      this.changed();\n    }\n  }\n\n  /**\n   * Update any variables used by the layer style and trigger a re-render.\n   * @param {Object<string, number>} variables Variables to update.\n   * @api\n   */\n  updateStyleVariables(variables) {\n    Object.assign(this.styleVariables_, variables);\n    this.changed();\n  }\n}\n\n/**\n * Clean up underlying WebGL resources.\n * @function\n * @api\n */\nWebGLTileLayer.prototype.dispose;\n\nexport default WebGLTileLayer;\n","/**\n * @module ol/uri\n */\n\nimport {modulo} from './math.js';\nimport {hashZXY} from './tilecoord.js';\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n\nconst zRegEx = /\\{z\\}/g;\nconst xRegEx = /\\{x\\}/g;\nconst yRegEx = /\\{y\\}/g;\nconst dashYRegEx = /\\{-y\\}/g;\n\n/**\n * @param {string} template The URL template.  Should have `{x}`, `{y}`, and `{z}` placeholders.  If\n * the template has a `{-y}` placeholder, the `maxY` parameter must be supplied.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @param {number} [maxY] The maximum y coordinate at the given z level.\n * @return {string} The URL.\n */\nexport function renderXYZTemplate(template, z, x, y, maxY) {\n  return template\n    .replace(zRegEx, z.toString())\n    .replace(xRegEx, x.toString())\n    .replace(yRegEx, y.toString())\n    .replace(dashYRegEx, function () {\n      if (maxY === undefined) {\n        throw new Error(\n          'If the URL template has a {-y} placeholder, the grid extent must be known',\n        );\n      }\n      return (maxY - y).toString();\n    });\n}\n\n/**\n * @param {Array<string>} urls List of URLs.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {string} The chosen URL.\n */\nexport function pickUrl(urls, z, x, y) {\n  const hash = hashZXY(z, x, y);\n  const index = modulo(hash, urls.length);\n  return urls[index];\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\nimport {renderXYZTemplate} from './uri.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default|null} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      let maxY;\n      const z = tileCoord[0];\n      if (tileGrid) {\n        // The `{-y}` placeholder only works for sources that have a tile grid at construction\n        const range = tileGrid.getFullTileRange(z);\n        if (range) {\n          maxY = range.getHeight() - 1;\n        }\n      }\n      return renderXYZTemplate(template, z, tileCoord[1], tileCoord[2], maxY);\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileState from '../TileState.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {expandUrl} from '../uri.js';\nimport {getUid} from '../util.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\nimport UrlTile from './UrlTile.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @override\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @override\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @override\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const tileCoord = [z, x, y];\n    const key = this.getKey();\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    tile.key = key;\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    const key = this.getKey();\n    return this.createTile_(z, x, y, pixelRatio, projection, key);\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport TileImage from './TileImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Deprecated.  Use an ImageTile source with a loader\n * instead.  Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] Deprecated.  Use an ImageTile source and provide an array of URLs for the\n * url option instead.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","module.exports={\n\t\"jet\":[{\"index\":0,\"rgb\":[0,0,131]},{\"index\":0.125,\"rgb\":[0,60,170]},{\"index\":0.375,\"rgb\":[5,255,255]},{\"index\":0.625,\"rgb\":[255,255,0]},{\"index\":0.875,\"rgb\":[250,0,0]},{\"index\":1,\"rgb\":[128,0,0]}],\n\n\t\"hsv\":[{\"index\":0,\"rgb\":[255,0,0]},{\"index\":0.169,\"rgb\":[253,255,2]},{\"index\":0.173,\"rgb\":[247,255,2]},{\"index\":0.337,\"rgb\":[0,252,4]},{\"index\":0.341,\"rgb\":[0,252,10]},{\"index\":0.506,\"rgb\":[1,249,255]},{\"index\":0.671,\"rgb\":[2,0,253]},{\"index\":0.675,\"rgb\":[8,0,253]},{\"index\":0.839,\"rgb\":[255,0,251]},{\"index\":0.843,\"rgb\":[255,0,245]},{\"index\":1,\"rgb\":[255,0,6]}],\n\n\t\"hot\":[{\"index\":0,\"rgb\":[0,0,0]},{\"index\":0.3,\"rgb\":[230,0,0]},{\"index\":0.6,\"rgb\":[255,210,0]},{\"index\":1,\"rgb\":[255,255,255]}],\n\n\t\"spring\":[{\"index\":0,\"rgb\":[255,0,255]},{\"index\":1,\"rgb\":[255,255,0]}],\n\n\t\"summer\":[{\"index\":0,\"rgb\":[0,128,102]},{\"index\":1,\"rgb\":[255,255,102]}],\n\n\t\"autumn\":[{\"index\":0,\"rgb\":[255,0,0]},{\"index\":1,\"rgb\":[255,255,0]}],\n\n\t\"winter\":[{\"index\":0,\"rgb\":[0,0,255]},{\"index\":1,\"rgb\":[0,255,128]}],\n\n\t\"bone\":[{\"index\":0,\"rgb\":[0,0,0]},{\"index\":0.376,\"rgb\":[84,84,116]},{\"index\":0.753,\"rgb\":[169,200,200]},{\"index\":1,\"rgb\":[255,255,255]}],\n\n\t\"copper\":[{\"index\":0,\"rgb\":[0,0,0]},{\"index\":0.804,\"rgb\":[255,160,102]},{\"index\":1,\"rgb\":[255,199,127]}],\n\n\t\"greys\":[{\"index\":0,\"rgb\":[0,0,0]},{\"index\":1,\"rgb\":[255,255,255]}],\n\n\t\"yignbu\":[{\"index\":0,\"rgb\":[8,29,88]},{\"index\":0.125,\"rgb\":[37,52,148]},{\"index\":0.25,\"rgb\":[34,94,168]},{\"index\":0.375,\"rgb\":[29,145,192]},{\"index\":0.5,\"rgb\":[65,182,196]},{\"index\":0.625,\"rgb\":[127,205,187]},{\"index\":0.75,\"rgb\":[199,233,180]},{\"index\":0.875,\"rgb\":[237,248,217]},{\"index\":1,\"rgb\":[255,255,217]}],\n\n\t\"greens\":[{\"index\":0,\"rgb\":[0,68,27]},{\"index\":0.125,\"rgb\":[0,109,44]},{\"index\":0.25,\"rgb\":[35,139,69]},{\"index\":0.375,\"rgb\":[65,171,93]},{\"index\":0.5,\"rgb\":[116,196,118]},{\"index\":0.625,\"rgb\":[161,217,155]},{\"index\":0.75,\"rgb\":[199,233,192]},{\"index\":0.875,\"rgb\":[229,245,224]},{\"index\":1,\"rgb\":[247,252,245]}],\n\n\t\"yiorrd\":[{\"index\":0,\"rgb\":[128,0,38]},{\"index\":0.125,\"rgb\":[189,0,38]},{\"index\":0.25,\"rgb\":[227,26,28]},{\"index\":0.375,\"rgb\":[252,78,42]},{\"index\":0.5,\"rgb\":[253,141,60]},{\"index\":0.625,\"rgb\":[254,178,76]},{\"index\":0.75,\"rgb\":[254,217,118]},{\"index\":0.875,\"rgb\":[255,237,160]},{\"index\":1,\"rgb\":[255,255,204]}],\n\n\t\"bluered\":[{\"index\":0,\"rgb\":[0,0,255]},{\"index\":1,\"rgb\":[255,0,0]}],\n\n\t\"rdbu\":[{\"index\":0,\"rgb\":[5,10,172]},{\"index\":0.35,\"rgb\":[106,137,247]},{\"index\":0.5,\"rgb\":[190,190,190]},{\"index\":0.6,\"rgb\":[220,170,132]},{\"index\":0.7,\"rgb\":[230,145,90]},{\"index\":1,\"rgb\":[178,10,28]}],\n\n\t\"picnic\":[{\"index\":0,\"rgb\":[0,0,255]},{\"index\":0.1,\"rgb\":[51,153,255]},{\"index\":0.2,\"rgb\":[102,204,255]},{\"index\":0.3,\"rgb\":[153,204,255]},{\"index\":0.4,\"rgb\":[204,204,255]},{\"index\":0.5,\"rgb\":[255,255,255]},{\"index\":0.6,\"rgb\":[255,204,255]},{\"index\":0.7,\"rgb\":[255,153,255]},{\"index\":0.8,\"rgb\":[255,102,204]},{\"index\":0.9,\"rgb\":[255,102,102]},{\"index\":1,\"rgb\":[255,0,0]}],\n\n\t\"rainbow\":[{\"index\":0,\"rgb\":[150,0,90]},{\"index\":0.125,\"rgb\":[0,0,200]},{\"index\":0.25,\"rgb\":[0,25,255]},{\"index\":0.375,\"rgb\":[0,152,255]},{\"index\":0.5,\"rgb\":[44,255,150]},{\"index\":0.625,\"rgb\":[151,255,0]},{\"index\":0.75,\"rgb\":[255,234,0]},{\"index\":0.875,\"rgb\":[255,111,0]},{\"index\":1,\"rgb\":[255,0,0]}],\n\n\t\"portland\":[{\"index\":0,\"rgb\":[12,51,131]},{\"index\":0.25,\"rgb\":[10,136,186]},{\"index\":0.5,\"rgb\":[242,211,56]},{\"index\":0.75,\"rgb\":[242,143,56]},{\"index\":1,\"rgb\":[217,30,30]}],\n\n\t\"blackbody\":[{\"index\":0,\"rgb\":[0,0,0]},{\"index\":0.2,\"rgb\":[230,0,0]},{\"index\":0.4,\"rgb\":[230,210,0]},{\"index\":0.7,\"rgb\":[255,255,255]},{\"index\":1,\"rgb\":[160,200,255]}],\n\n\t\"earth\":[{\"index\":0,\"rgb\":[0,0,130]},{\"index\":0.1,\"rgb\":[0,180,180]},{\"index\":0.2,\"rgb\":[40,210,40]},{\"index\":0.4,\"rgb\":[230,230,50]},{\"index\":0.6,\"rgb\":[120,70,20]},{\"index\":1,\"rgb\":[255,255,255]}],\n\n\t\"electric\":[{\"index\":0,\"rgb\":[0,0,0]},{\"index\":0.15,\"rgb\":[30,0,100]},{\"index\":0.4,\"rgb\":[120,0,100]},{\"index\":0.6,\"rgb\":[160,90,0]},{\"index\":0.8,\"rgb\":[230,200,0]},{\"index\":1,\"rgb\":[255,250,220]}],\n\n\t\"alpha\": [{\"index\":0, \"rgb\": [255,255,255,0]},{\"index\":1, \"rgb\": [255,255,255,1]}],\n\n\t\"viridis\": [{\"index\":0,\"rgb\":[68,1,84]},{\"index\":0.13,\"rgb\":[71,44,122]},{\"index\":0.25,\"rgb\":[59,81,139]},{\"index\":0.38,\"rgb\":[44,113,142]},{\"index\":0.5,\"rgb\":[33,144,141]},{\"index\":0.63,\"rgb\":[39,173,129]},{\"index\":0.75,\"rgb\":[92,200,99]},{\"index\":0.88,\"rgb\":[170,220,50]},{\"index\":1,\"rgb\":[253,231,37]}],\n\n\t\"inferno\": [{\"index\":0,\"rgb\":[0,0,4]},{\"index\":0.13,\"rgb\":[31,12,72]},{\"index\":0.25,\"rgb\":[85,15,109]},{\"index\":0.38,\"rgb\":[136,34,106]},{\"index\":0.5,\"rgb\":[186,54,85]},{\"index\":0.63,\"rgb\":[227,89,51]},{\"index\":0.75,\"rgb\":[249,140,10]},{\"index\":0.88,\"rgb\":[249,201,50]},{\"index\":1,\"rgb\":[252,255,164]}],\n\n\t\"magma\": [{\"index\":0,\"rgb\":[0,0,4]},{\"index\":0.13,\"rgb\":[28,16,68]},{\"index\":0.25,\"rgb\":[79,18,123]},{\"index\":0.38,\"rgb\":[129,37,129]},{\"index\":0.5,\"rgb\":[181,54,122]},{\"index\":0.63,\"rgb\":[229,80,100]},{\"index\":0.75,\"rgb\":[251,135,97]},{\"index\":0.88,\"rgb\":[254,194,135]},{\"index\":1,\"rgb\":[252,253,191]}],\n\n\t\"plasma\": [{\"index\":0,\"rgb\":[13,8,135]},{\"index\":0.13,\"rgb\":[75,3,161]},{\"index\":0.25,\"rgb\":[125,3,168]},{\"index\":0.38,\"rgb\":[168,34,150]},{\"index\":0.5,\"rgb\":[203,70,121]},{\"index\":0.63,\"rgb\":[229,107,93]},{\"index\":0.75,\"rgb\":[248,148,65]},{\"index\":0.88,\"rgb\":[253,195,40]},{\"index\":1,\"rgb\":[240,249,33]}],\n\n\t\"warm\": [{\"index\":0,\"rgb\":[125,0,179]},{\"index\":0.13,\"rgb\":[172,0,187]},{\"index\":0.25,\"rgb\":[219,0,170]},{\"index\":0.38,\"rgb\":[255,0,130]},{\"index\":0.5,\"rgb\":[255,63,74]},{\"index\":0.63,\"rgb\":[255,123,0]},{\"index\":0.75,\"rgb\":[234,176,0]},{\"index\":0.88,\"rgb\":[190,228,0]},{\"index\":1,\"rgb\":[147,255,0]}],\n\n\t\"cool\": [{\"index\":0,\"rgb\":[125,0,179]},{\"index\":0.13,\"rgb\":[116,0,218]},{\"index\":0.25,\"rgb\":[98,74,237]},{\"index\":0.38,\"rgb\":[68,146,231]},{\"index\":0.5,\"rgb\":[0,204,197]},{\"index\":0.63,\"rgb\":[0,247,146]},{\"index\":0.75,\"rgb\":[0,255,88]},{\"index\":0.88,\"rgb\":[40,255,8]},{\"index\":1,\"rgb\":[147,255,0]}],\n\n\t\"rainbow-soft\": [{\"index\":0,\"rgb\":[125,0,179]},{\"index\":0.1,\"rgb\":[199,0,180]},{\"index\":0.2,\"rgb\":[255,0,121]},{\"index\":0.3,\"rgb\":[255,108,0]},{\"index\":0.4,\"rgb\":[222,194,0]},{\"index\":0.5,\"rgb\":[150,255,0]},{\"index\":0.6,\"rgb\":[0,255,55]},{\"index\":0.7,\"rgb\":[0,246,150]},{\"index\":0.8,\"rgb\":[50,167,222]},{\"index\":0.9,\"rgb\":[103,51,235]},{\"index\":1,\"rgb\":[124,0,186]}],\n\n\t\"bathymetry\": [{\"index\":0,\"rgb\":[40,26,44]},{\"index\":0.13,\"rgb\":[59,49,90]},{\"index\":0.25,\"rgb\":[64,76,139]},{\"index\":0.38,\"rgb\":[63,110,151]},{\"index\":0.5,\"rgb\":[72,142,158]},{\"index\":0.63,\"rgb\":[85,174,163]},{\"index\":0.75,\"rgb\":[120,206,163]},{\"index\":0.88,\"rgb\":[187,230,172]},{\"index\":1,\"rgb\":[253,254,204]}],\n\n\t\"cdom\": [{\"index\":0,\"rgb\":[47,15,62]},{\"index\":0.13,\"rgb\":[87,23,86]},{\"index\":0.25,\"rgb\":[130,28,99]},{\"index\":0.38,\"rgb\":[171,41,96]},{\"index\":0.5,\"rgb\":[206,67,86]},{\"index\":0.63,\"rgb\":[230,106,84]},{\"index\":0.75,\"rgb\":[242,149,103]},{\"index\":0.88,\"rgb\":[249,193,135]},{\"index\":1,\"rgb\":[254,237,176]}],\n\n\t\"chlorophyll\": [{\"index\":0,\"rgb\":[18,36,20]},{\"index\":0.13,\"rgb\":[25,63,41]},{\"index\":0.25,\"rgb\":[24,91,59]},{\"index\":0.38,\"rgb\":[13,119,72]},{\"index\":0.5,\"rgb\":[18,148,80]},{\"index\":0.63,\"rgb\":[80,173,89]},{\"index\":0.75,\"rgb\":[132,196,122]},{\"index\":0.88,\"rgb\":[175,221,162]},{\"index\":1,\"rgb\":[215,249,208]}],\n\n\t\"density\": [{\"index\":0,\"rgb\":[54,14,36]},{\"index\":0.13,\"rgb\":[89,23,80]},{\"index\":0.25,\"rgb\":[110,45,132]},{\"index\":0.38,\"rgb\":[120,77,178]},{\"index\":0.5,\"rgb\":[120,113,213]},{\"index\":0.63,\"rgb\":[115,151,228]},{\"index\":0.75,\"rgb\":[134,185,227]},{\"index\":0.88,\"rgb\":[177,214,227]},{\"index\":1,\"rgb\":[230,241,241]}],\n\n\t\"freesurface-blue\": [{\"index\":0,\"rgb\":[30,4,110]},{\"index\":0.13,\"rgb\":[47,14,176]},{\"index\":0.25,\"rgb\":[41,45,236]},{\"index\":0.38,\"rgb\":[25,99,212]},{\"index\":0.5,\"rgb\":[68,131,200]},{\"index\":0.63,\"rgb\":[114,156,197]},{\"index\":0.75,\"rgb\":[157,181,203]},{\"index\":0.88,\"rgb\":[200,208,216]},{\"index\":1,\"rgb\":[241,237,236]}],\n\n\t\"freesurface-red\": [{\"index\":0,\"rgb\":[60,9,18]},{\"index\":0.13,\"rgb\":[100,17,27]},{\"index\":0.25,\"rgb\":[142,20,29]},{\"index\":0.38,\"rgb\":[177,43,27]},{\"index\":0.5,\"rgb\":[192,87,63]},{\"index\":0.63,\"rgb\":[205,125,105]},{\"index\":0.75,\"rgb\":[216,162,148]},{\"index\":0.88,\"rgb\":[227,199,193]},{\"index\":1,\"rgb\":[241,237,236]}],\n\n\t\"oxygen\": [{\"index\":0,\"rgb\":[64,5,5]},{\"index\":0.13,\"rgb\":[106,6,15]},{\"index\":0.25,\"rgb\":[144,26,7]},{\"index\":0.38,\"rgb\":[168,64,3]},{\"index\":0.5,\"rgb\":[188,100,4]},{\"index\":0.63,\"rgb\":[206,136,11]},{\"index\":0.75,\"rgb\":[220,174,25]},{\"index\":0.88,\"rgb\":[231,215,44]},{\"index\":1,\"rgb\":[248,254,105]}],\n\n\t\"par\": [{\"index\":0,\"rgb\":[51,20,24]},{\"index\":0.13,\"rgb\":[90,32,35]},{\"index\":0.25,\"rgb\":[129,44,34]},{\"index\":0.38,\"rgb\":[159,68,25]},{\"index\":0.5,\"rgb\":[182,99,19]},{\"index\":0.63,\"rgb\":[199,134,22]},{\"index\":0.75,\"rgb\":[212,171,35]},{\"index\":0.88,\"rgb\":[221,210,54]},{\"index\":1,\"rgb\":[225,253,75]}],\n\n\t\"phase\": [{\"index\":0,\"rgb\":[145,105,18]},{\"index\":0.13,\"rgb\":[184,71,38]},{\"index\":0.25,\"rgb\":[186,58,115]},{\"index\":0.38,\"rgb\":[160,71,185]},{\"index\":0.5,\"rgb\":[110,97,218]},{\"index\":0.63,\"rgb\":[50,123,164]},{\"index\":0.75,\"rgb\":[31,131,110]},{\"index\":0.88,\"rgb\":[77,129,34]},{\"index\":1,\"rgb\":[145,105,18]}],\n\n\t\"salinity\": [{\"index\":0,\"rgb\":[42,24,108]},{\"index\":0.13,\"rgb\":[33,50,162]},{\"index\":0.25,\"rgb\":[15,90,145]},{\"index\":0.38,\"rgb\":[40,118,137]},{\"index\":0.5,\"rgb\":[59,146,135]},{\"index\":0.63,\"rgb\":[79,175,126]},{\"index\":0.75,\"rgb\":[120,203,104]},{\"index\":0.88,\"rgb\":[193,221,100]},{\"index\":1,\"rgb\":[253,239,154]}],\n\n\t\"temperature\": [{\"index\":0,\"rgb\":[4,35,51]},{\"index\":0.13,\"rgb\":[23,51,122]},{\"index\":0.25,\"rgb\":[85,59,157]},{\"index\":0.38,\"rgb\":[129,79,143]},{\"index\":0.5,\"rgb\":[175,95,130]},{\"index\":0.63,\"rgb\":[222,112,101]},{\"index\":0.75,\"rgb\":[249,146,66]},{\"index\":0.88,\"rgb\":[249,196,65]},{\"index\":1,\"rgb\":[232,250,91]}],\n\n\t\"turbidity\": [{\"index\":0,\"rgb\":[34,31,27]},{\"index\":0.13,\"rgb\":[65,50,41]},{\"index\":0.25,\"rgb\":[98,69,52]},{\"index\":0.38,\"rgb\":[131,89,57]},{\"index\":0.5,\"rgb\":[161,112,59]},{\"index\":0.63,\"rgb\":[185,140,66]},{\"index\":0.75,\"rgb\":[202,174,88]},{\"index\":0.88,\"rgb\":[216,209,126]},{\"index\":1,\"rgb\":[233,246,171]}],\n\n\t\"velocity-blue\": [{\"index\":0,\"rgb\":[17,32,64]},{\"index\":0.13,\"rgb\":[35,52,116]},{\"index\":0.25,\"rgb\":[29,81,156]},{\"index\":0.38,\"rgb\":[31,113,162]},{\"index\":0.5,\"rgb\":[50,144,169]},{\"index\":0.63,\"rgb\":[87,173,176]},{\"index\":0.75,\"rgb\":[149,196,189]},{\"index\":0.88,\"rgb\":[203,221,211]},{\"index\":1,\"rgb\":[254,251,230]}],\n\n\t\"velocity-green\": [{\"index\":0,\"rgb\":[23,35,19]},{\"index\":0.13,\"rgb\":[24,64,38]},{\"index\":0.25,\"rgb\":[11,95,45]},{\"index\":0.38,\"rgb\":[39,123,35]},{\"index\":0.5,\"rgb\":[95,146,12]},{\"index\":0.63,\"rgb\":[152,165,18]},{\"index\":0.75,\"rgb\":[201,186,69]},{\"index\":0.88,\"rgb\":[233,216,137]},{\"index\":1,\"rgb\":[255,253,205]}],\n\n\t\"cubehelix\": [{\"index\":0,\"rgb\":[0,0,0]},{\"index\":0.07,\"rgb\":[22,5,59]},{\"index\":0.13,\"rgb\":[60,4,105]},{\"index\":0.2,\"rgb\":[109,1,135]},{\"index\":0.27,\"rgb\":[161,0,147]},{\"index\":0.33,\"rgb\":[210,2,142]},{\"index\":0.4,\"rgb\":[251,11,123]},{\"index\":0.47,\"rgb\":[255,29,97]},{\"index\":0.53,\"rgb\":[255,54,69]},{\"index\":0.6,\"rgb\":[255,85,46]},{\"index\":0.67,\"rgb\":[255,120,34]},{\"index\":0.73,\"rgb\":[255,157,37]},{\"index\":0.8,\"rgb\":[241,191,57]},{\"index\":0.87,\"rgb\":[224,220,93]},{\"index\":0.93,\"rgb\":[218,241,142]},{\"index\":1,\"rgb\":[227,253,198]}]\n};\n","function lerp(v0, v1, t) {\n    return v0*(1-t)+v1*t\n}\nmodule.exports = lerp","/*\n * Ben Postlethwaite\n * January 2013\n * License MIT\n */\n'use strict';\n\nvar colorScale = require('./colorScale');\nvar lerp = require('lerp')\n\nmodule.exports = createColormap;\n\nfunction createColormap (spec) {\n    /*\n     * Default Options\n     */\n    var indicies, fromrgba, torgba,\n        nsteps, cmap, colormap, format,\n        nshades, colors, alpha, i;\n\n    if ( !spec ) spec = {};\n\n    nshades = (spec.nshades || 72) - 1;\n    format = spec.format || 'hex';\n\n    colormap = spec.colormap;\n    if (!colormap) colormap = 'jet';\n\n    if (typeof colormap === 'string') {\n        colormap = colormap.toLowerCase();\n\n        if (!colorScale[colormap]) {\n            throw Error(colormap + ' not a supported colorscale');\n        }\n\n        cmap = colorScale[colormap];\n\n    } else if (Array.isArray(colormap)) {\n        cmap = colormap.slice();\n\n    } else {\n        throw Error('unsupported colormap option', colormap);\n    }\n\n    if (cmap.length > nshades + 1) {\n        throw new Error(\n            colormap+' map requires nshades to be at least size '+cmap.length\n        );\n    }\n\n    if (!Array.isArray(spec.alpha)) {\n\n        if (typeof spec.alpha === 'number') {\n            alpha = [spec.alpha, spec.alpha];\n\n        } else {\n            alpha = [1, 1];\n        }\n\n    } else if (spec.alpha.length !== 2) {\n        alpha = [1, 1];\n\n    } else {\n        alpha = spec.alpha.slice();\n    }\n\n    // map index points from 0..1 to 0..n-1\n    indicies = cmap.map(function(c) {\n        return Math.round(c.index * nshades);\n    });\n\n    // Add alpha channel to the map\n    alpha[0] = Math.min(Math.max(alpha[0], 0), 1);\n    alpha[1] = Math.min(Math.max(alpha[1], 0), 1);\n\n    var steps = cmap.map(function(c, i) {\n        var index = cmap[i].index\n\n        var rgba = cmap[i].rgb.slice();\n\n        // if user supplies their own map use it\n        if (rgba.length === 4 && rgba[3] >= 0 && rgba[3] <= 1) {\n            return rgba\n        }\n        rgba[3] = alpha[0] + (alpha[1] - alpha[0])*index;\n\n        return rgba\n    })\n\n\n    /*\n     * map increasing linear values between indicies to\n     * linear steps in colorvalues\n     */\n    var colors = []\n    for (i = 0; i < indicies.length-1; ++i) {\n        nsteps = indicies[i+1] - indicies[i];\n        fromrgba = steps[i];\n        torgba = steps[i+1];\n\n        for (var j = 0; j < nsteps; j++) {\n            var amt = j / nsteps\n            colors.push([\n                Math.round(lerp(fromrgba[0], torgba[0], amt)),\n                Math.round(lerp(fromrgba[1], torgba[1], amt)),\n                Math.round(lerp(fromrgba[2], torgba[2], amt)),\n                lerp(fromrgba[3], torgba[3], amt)\n            ])\n        }\n    }\n\n    //add 1 step as last value\n    colors.push(cmap[cmap.length - 1].rgb.concat(alpha[1]))\n\n    if (format === 'hex') colors = colors.map( rgb2hex );\n    else if (format === 'rgbaString') colors = colors.map( rgbaStr );\n    else if (format === 'float') colors = colors.map( rgb2float );\n\n    return colors;\n};\n\nfunction rgb2float (rgba) {\n    return [\n        rgba[0] / 255,\n        rgba[1] / 255,\n        rgba[2] / 255,\n        rgba[3]\n    ]\n}\n\nfunction rgb2hex (rgba) {\n    var dig, hex = '#';\n    for (var i = 0; i < 3; ++i) {\n        dig = rgba[i];\n        dig = dig.toString(16);\n        hex += ('00' + dig).substr( dig.length );\n    }\n    return hex;\n}\n\nfunction rgbaStr (rgba) {\n    return 'rgba(' + rgba.join(',') + ')';\n}\n","import './style.css';\nimport GeoTIFF from 'ol/source/GeoTIFF.js';\nimport Map from 'ol/Map.js';\nimport TileLayer from 'ol/layer/WebGLTile.js';\nimport View from 'ol/View.js';\nimport OSM from 'ol/source/OSM.js';\nimport {fromLonLat} from 'ol/proj';\nimport XYZ from 'ol/source/XYZ.js';\nimport colormap from 'colormap';\nimport { fromUrl } from 'geotiff';\n\nlet currentRasterIndex = 0;\nlet map, currentLayer;\n\nconst rasterLayers = [\n  {\n    name: 'SO2 column mass [DU] +00h FCST',\n    base: 'SO2_col_mass_000.tif',\n  },\n  {\n    name: 'SO2 column mass [DU] +06h FCST',\n    base: 'SO2_col_mass_006.tif',\n  },\n  {\n    name: 'SO2 column mass [DU] +12h FCST',\n    base: 'SO2_col_mass_012.tif',\n  },\n  {\n    name: 'SO2 column mass [DU] +18h FCST',\n    base: 'SO2_col_mass_018.tif',\n  },\n  {\n    name: 'SO2 column mass [DU] +24h FCST',\n    base: 'SO2_col_mass_024.tif',\n  },\n  {\n    name: 'SO2 column mass [DU] +30h FCST',\n    base: 'SO2_col_mass_030.tif',\n  },\n  {\n    name: 'SO2 column mass [DU] +36h FCST',\n    base: 'SO2_col_mass_036.tif',\n  },\n  {\n    name: 'SO2 column mass [DU] +42h FCST',\n    base: 'SO2_col_mass_042.tif',\n  },\n  {\n    name: 'SO2 column mass [DU] +48h FCST',\n    base: 'SO2_col_mass_048.tif',\n  },\n];\n\nconst data = ['band', 1];\nconst style = {\n  color: [\n    'case',\n    ['<',data,1],\n    [0,0,0,0],\n    ['interpolate',\n    ['linear'],\n    data,\n    ...getColorStops('RdBu',1,20,11),\n    ]\n  ],\n};\n\n// Create layer for the ith image\nfunction createLayer(i) {\n  const base = rasterLayers[i].base;\n  const source = new GeoTIFF({\n    normalize: false,\n    interpolate: true,\n    sources: [\n        {\n            url: base,\n            nodata: 0,\n        },\n    ],\n  });\n\n  return new TileLayer({\n    source: source,\n    style: style,\n  });\n};\n\n// Initialize the map\nfunction initMap() {\n//    const osm = new TileLayer({\n//        source: new OSM(),\n//    });\n\n    const carto = new TileLayer({\n      source: new XYZ({\n        url: 'http://{1-4}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png',\n        attributions: 'MaL</a>.'\n      }),\n      properties: { name: 'baseMap' }\n    });\n\n    currentLayer = createLayer(currentRasterIndex);\n\n    // Initialize map\n    map = new Map({\n        target: 'map-container',\n        layers: [carto,currentLayer],\n        view: new View({\n            center: fromLonLat([-18,65]),\n            zoom: 4\n        })\n    });\n\n    // Initialize UI\n    updateRasterInfo();\n    createColorbar();\n}\n\n// Switch to specific raster\nfunction switchToRaster(index) {\n    if (index < 0 || index >= rasterLayers.length) return;\n\n    currentRasterIndex = index;\n\n    // Remove current layer\n    map.removeLayer(currentLayer);\n\n    // Add new layer\n    currentLayer = createLayer(currentRasterIndex);\n    map.addLayer(currentLayer);\n\n    updateRasterInfo();\n}\n\n// Navigation functions\nfunction nextRaster() {\n    const nextIndex = (currentRasterIndex + 1) % rasterLayers.length;\n    switchToRaster(nextIndex);\n}\n\nfunction previousRaster() {\n    const prevIndex = (currentRasterIndex - 1 + rasterLayers.length) % rasterLayers.length;\n    switchToRaster(prevIndex);\n}\n\n// Update raster information display\nasync function updateRasterInfo() {\n    const i = currentRasterIndex + 1;\n    const n = rasterLayers.length;\n    const currentRaster = rasterLayers[currentRasterIndex];\n\n    const metadataFields = await getCustomMetadataFields();\n\n    document.getElementById('current-raster-name').textContent = currentRaster.name;\n    document.getElementById('current-raster-description').textContent = `Valid: ${metadataFields.time}`;\n    document.getElementById('current-raster-index').textContent = `${i} / ${n}`;\n}\n\nasync function getCustomMetadataFields() {\n    let tiff;\n    const base = rasterLayers[currentRasterIndex].base;\n    tiff = await fromUrl(base);\n    const image = await tiff.getImage(0);\n    return image.getGDALMetadata();\n};\n\nfunction getColorStops(name, min, max, steps) {\n  const delta = max / (steps - 1);\n  const stops = new Array(steps * 2);\n  const colors = colormap({\n      colormap: name, \n      nshades: steps, \n      format: 'rgba',\n      alpha: 0.5\n  });\n  for (let i = 0; i < steps; i++) {\n    stops[i * 2] = i * delta;\n    stops[i * 2 + 1] = colors[i];\n  }\n  if (min<delta) {\n      stops[0] = min;\n  }\n  return stops;\n}\n\n// Create colorbar\nfunction createColorbar() {\n    const colorbarCanvas = document.getElementById('colorbar');\n    const colorbarCtx = colorbarCanvas.getContext('2d');\n    const labelsContainer = document.getElementById('colorbar-labels');\n\n\n    const minValue = 1;\n    const maxValue = 20;\n    const steps = 11;\n    \n    const barHeight = 200;\n    const barWidth = 20;\n    const segmentHeight = barHeight / steps;\n\n    // Clear previous labels\n    labelsContainer.innerHTML = '';\n\n    const stops = getColorStops('RdBu',minValue,maxValue,steps)\n    for (let i = 0; i < steps; i++) {\n      const y = barHeight - (i+1)*segmentHeight;\n      const value = stops[i * 2];\n      const color = stops[i * 2 + 1];\n\n      // Draw color rectangle\n      colorbarCtx.fillStyle = `rgba(${color[0]}, ${color[1]}, ${color[2]}, ${color[3]})`;\n      colorbarCtx.fillRect(0, y, barWidth, segmentHeight);\n\n      // Create label\n      const label = document.createElement('span');\n      label.textContent = value;\n      label.style.position = 'absolute';\n      label.style.top = `${y + segmentHeight/2}px`;\n      label.style.transform = 'translateY(-50%)';\n      labelsContainer.appendChild(label);\n    }\n\n    // Update labels container style\n    labelsContainer.style.position = 'relative';\n    labelsContainer.style.height = `${barHeight}px`;\n}\n\n// Event listeners\ndocument.getElementById('prevBtn').addEventListener('click', previousRaster);\ndocument.getElementById('nextBtn').addEventListener('click', nextRaster);\n\n// Keyboard controls\ndocument.addEventListener('keydown', (e) => {\n    switch(e.key) {\n        case 'ArrowLeft':\n            previousRaster();\n            break;\n        case 'ArrowRight':\n        case ' ':\n            e.preventDefault();\n            nextRaster();\n            break;\n    }\n});\n\n// Initialize the application\nwindow.onload = initMap;\n"],"file":"assets/index.ac7b4015.js"}